[{"D:\\webserv4u\\quizbeater\\src\\index.js":"1","D:\\webserv4u\\quizbeater\\src\\reportWebVitals.js":"2","D:\\webserv4u\\quizbeater\\src\\App.js":"3","D:\\webserv4u\\quizbeater\\src\\layout\\navbar.js":"4","D:\\webserv4u\\quizbeater\\src\\components\\dashboard\\dashboard.js":"5","D:\\webserv4u\\quizbeater\\src\\components\\dashboard\\quizHead.js":"6","D:\\webserv4u\\quizbeater\\src\\components\\dashboard\\slidingImage.js":"7","D:\\webserv4u\\quizbeater\\src\\components\\dashboard\\quizDes.js":"8","D:\\webserv4u\\quizbeater\\src\\components\\dashboard\\howToPlay.js":"9","D:\\webserv4u\\quizbeater\\src\\store\\reducers\\rootReducer.js":"10","D:\\webserv4u\\quizbeater\\src\\store\\reducers\\projectReducer.js":"11","D:\\webserv4u\\quizbeater\\src\\config\\firebase.js":"12","D:\\webserv4u\\quizbeater\\src\\components\\createPost\\createQuestion.js":"13","D:\\webserv4u\\quizbeater\\src\\components\\createPost\\selectedPage.js":"14","D:\\webserv4u\\quizbeater\\src\\components\\createPost\\Q3.js":"15","D:\\webserv4u\\quizbeater\\src\\components\\createPost\\Q2.js":"16","D:\\webserv4u\\quizbeater\\src\\components\\createPost\\Q1.js":"17","D:\\webserv4u\\quizbeater\\src\\components\\createPost\\Q5.js":"18","D:\\webserv4u\\quizbeater\\src\\components\\createPost\\Q4.js":"19","D:\\webserv4u\\quizbeater\\src\\store\\actions\\projectAction.js":"20","D:\\webserv4u\\quizbeater\\src\\components\\dashboard\\fetchedData.js":"21","D:\\webserv4u\\quizbeater\\src\\components\\dashboard\\fetchedDataSummary.js":"22","D:\\webserv4u\\quizbeater\\src\\layout\\footer.js":"23","D:\\webserv4u\\quizbeater\\src\\store\\reducers\\commentReducer.js":"24","D:\\webserv4u\\quizbeater\\src\\components\\comment\\fetchComment.js":"25","D:\\webserv4u\\quizbeater\\src\\components\\comment\\fetchCommentSummary.js":"26","D:\\webserv4u\\quizbeater\\src\\store\\actions\\commentAction.js":"27","D:\\webserv4u\\quizbeater\\src\\components\\comment\\comment.js":"28","D:\\webserv4u\\quizbeater\\src\\components\\pagination\\quizPagination.js":"29","D:\\webserv4u\\quizbeater\\src\\components\\pagination\\commentPagination.js":"30","D:\\webserv4u\\quizbeater\\src\\pages\\about.js":"31","D:\\webserv4u\\quizbeater\\src\\pages\\faq.js":"32","D:\\webserv4u\\quizbeater\\src\\pages\\contact.js":"33","D:\\webserv4u\\quizbeater\\src\\pages\\disclaimer.js":"34","D:\\webserv4u\\quizbeater\\src\\pages\\privacyPolicy.js":"35","D:\\webserv4u\\quizbeater\\src\\pages\\termAndCondition.js":"36","D:\\webserv4u\\quizbeater\\src\\pages\\notFound.js":"37","D:\\webserv4u\\quizbeater\\src\\utils\\metaDecorator.js":"38","D:\\webserv4u\\quizbeater\\src\\components\\dashboard\\triviaQuiz.js":"39","D:\\webserv4u\\quizbeater\\src\\components\\dashboard\\homeDashboard\\dashboardHeader.js":"40","D:\\webserv4u\\quizbeater\\src\\components\\dashboard\\homeDashboard\\gameType.js":"41","D:\\webserv4u\\quizbeater\\src\\components\\dashboard\\homeDashboard\\dashboardGallery.js":"42","D:\\webserv4u\\quizbeater\\src\\components\\fakeOrNot\\fakeOrNot.js":"43","D:\\webserv4u\\quizbeater\\src\\components\\fakeOrNot\\howToPlay.js":"44","D:\\webserv4u\\quizbeater\\src\\components\\fakeOrNot\\quizHead.js":"45","D:\\webserv4u\\quizbeater\\src\\components\\fakeOrNot\\slidingImage.js":"46","D:\\webserv4u\\quizbeater\\src\\components\\fakeOrNot\\quizDesc.js":"47","D:\\webserv4u\\quizbeater\\src\\components\\fakeOrNot\\createPost\\createFakeOrNot.js":"48","D:\\webserv4u\\quizbeater\\src\\components\\fakeOrNot\\createPost\\selectedPage.js":"49","D:\\webserv4u\\quizbeater\\src\\components\\fakeOrNot\\createPost\\Q1.js":"50","D:\\webserv4u\\quizbeater\\src\\components\\fakeOrNot\\createPost\\Q2.js":"51","D:\\webserv4u\\quizbeater\\src\\components\\fakeOrNot\\createPost\\Q3.js":"52","D:\\webserv4u\\quizbeater\\src\\components\\fakeOrNot\\createPost\\Q4.js":"53","D:\\webserv4u\\quizbeater\\src\\components\\fakeOrNot\\createPost\\Q5.js":"54","D:\\webserv4u\\quizbeater\\src\\components\\fakeOrNot\\fetchFakeOrNot.js":"55","D:\\webserv4u\\quizbeater\\src\\components\\fakeOrNot\\fetchFakeOrNotSummary.js":"56","D:\\webserv4u\\quizbeater\\src\\store\\reducers\\kyaBoltiPublicReducer.js":"57","D:\\webserv4u\\quizbeater\\src\\store\\reducers\\fakeOrNotReducer.js":"58","D:\\webserv4u\\quizbeater\\src\\store\\reducers\\daamSahiHaiReducer.js":"59","D:\\webserv4u\\quizbeater\\src\\store\\reducers\\fYIReducer.js":"60","D:\\webserv4u\\quizbeater\\src\\store\\reducers\\kaunReducer.js":"61","D:\\webserv4u\\quizbeater\\src\\components\\kyaBoltiPublic\\kyaBoltiPublic.js":"62","D:\\webserv4u\\quizbeater\\src\\components\\kyaBoltiPublic\\quizHead.js":"63","D:\\webserv4u\\quizbeater\\src\\components\\kyaBoltiPublic\\quizDesc.js":"64","D:\\webserv4u\\quizbeater\\src\\components\\kyaBoltiPublic\\howToPlay.js":"65","D:\\webserv4u\\quizbeater\\src\\components\\kyaBoltiPublic\\slidingImage.js":"66","D:\\webserv4u\\quizbeater\\src\\components\\kyaBoltiPublic\\fetchkyaBoltiPublic.js":"67","D:\\webserv4u\\quizbeater\\src\\components\\kyaBoltiPublic\\fetchKyaBoltiPublicSummary.js":"68","D:\\webserv4u\\quizbeater\\src\\components\\kyaBoltiPublic\\createPost\\createKyaBoltiPublic.js":"69","D:\\webserv4u\\quizbeater\\src\\components\\kyaBoltiPublic\\createPost\\selectedPage.js":"70","D:\\webserv4u\\quizbeater\\src\\components\\kyaBoltiPublic\\createPost\\Q2.js":"71","D:\\webserv4u\\quizbeater\\src\\components\\kyaBoltiPublic\\createPost\\Q3.js":"72","D:\\webserv4u\\quizbeater\\src\\components\\kyaBoltiPublic\\createPost\\Q4.js":"73","D:\\webserv4u\\quizbeater\\src\\components\\kyaBoltiPublic\\createPost\\Q1.js":"74","D:\\webserv4u\\quizbeater\\src\\components\\kyaBoltiPublic\\createPost\\Q5.js":"75","D:\\webserv4u\\quizbeater\\src\\components\\daamSahiHai\\daamSahiHai.js":"76","D:\\webserv4u\\quizbeater\\src\\components\\daamSahiHai\\howToPlay.js":"77","D:\\webserv4u\\quizbeater\\src\\components\\daamSahiHai\\quizDesc.js":"78","D:\\webserv4u\\quizbeater\\src\\components\\daamSahiHai\\quizHead.js":"79","D:\\webserv4u\\quizbeater\\src\\components\\daamSahiHai\\slidingImage.js":"80","D:\\webserv4u\\quizbeater\\src\\components\\daamSahiHai\\fetchDaamSahiHai.js":"81","D:\\webserv4u\\quizbeater\\src\\components\\daamSahiHai\\fetchDaamSahiHaiSummary.js":"82","D:\\webserv4u\\quizbeater\\src\\components\\daamSahiHai\\createPost\\createDaamSahiHai.js":"83","D:\\webserv4u\\quizbeater\\src\\components\\daamSahiHai\\createPost\\selectedPage.js":"84","D:\\webserv4u\\quizbeater\\src\\components\\daamSahiHai\\createPost\\Q1.js":"85","D:\\webserv4u\\quizbeater\\src\\components\\daamSahiHai\\createPost\\Q3.js":"86","D:\\webserv4u\\quizbeater\\src\\components\\daamSahiHai\\createPost\\Q2.js":"87","D:\\webserv4u\\quizbeater\\src\\components\\daamSahiHai\\createPost\\Q4.js":"88","D:\\webserv4u\\quizbeater\\src\\components\\daamSahiHai\\createPost\\Q5.js":"89","D:\\webserv4u\\quizbeater\\src\\components\\fYI\\fYI.js":"90","D:\\webserv4u\\quizbeater\\src\\components\\fYI\\quizDesc.js":"91","D:\\webserv4u\\quizbeater\\src\\components\\fYI\\quizHead.js":"92","D:\\webserv4u\\quizbeater\\src\\components\\fYI\\slidingImage.js":"93","D:\\webserv4u\\quizbeater\\src\\components\\fYI\\fetchFYI.js":"94","D:\\webserv4u\\quizbeater\\src\\components\\fYI\\howToPlay.js":"95","D:\\webserv4u\\quizbeater\\src\\components\\fYI\\fetchFYISummary.js":"96","D:\\webserv4u\\quizbeater\\src\\components\\fYI\\createPost\\createFYI.js":"97","D:\\webserv4u\\quizbeater\\src\\components\\fYI\\createPost\\selectedPage.js":"98","D:\\webserv4u\\quizbeater\\src\\components\\fYI\\createPost\\Q1.js":"99","D:\\webserv4u\\quizbeater\\src\\components\\fYI\\createPost\\Q2.js":"100","D:\\webserv4u\\quizbeater\\src\\components\\fYI\\createPost\\Q3.js":"101","D:\\webserv4u\\quizbeater\\src\\components\\fYI\\createPost\\Q5.js":"102","D:\\webserv4u\\quizbeater\\src\\components\\fYI\\createPost\\Q4.js":"103","D:\\webserv4u\\quizbeater\\src\\components\\kaun\\createPost\\createKaun.js":"104","D:\\webserv4u\\quizbeater\\src\\components\\kaun\\createPost\\selectedPage.js":"105","D:\\webserv4u\\quizbeater\\src\\components\\kaun\\createPost\\Q1.js":"106","D:\\webserv4u\\quizbeater\\src\\components\\kaun\\createPost\\Q2.js":"107","D:\\webserv4u\\quizbeater\\src\\components\\kaun\\createPost\\Q3.js":"108","D:\\webserv4u\\quizbeater\\src\\components\\kaun\\createPost\\Q4.js":"109","D:\\webserv4u\\quizbeater\\src\\components\\kaun\\createPost\\Q5.js":"110","D:\\webserv4u\\quizbeater\\src\\components\\kaun\\kaun.js":"111","D:\\webserv4u\\quizbeater\\src\\components\\kaun\\howToPlay.js":"112","D:\\webserv4u\\quizbeater\\src\\components\\kaun\\quizHead.js":"113","D:\\webserv4u\\quizbeater\\src\\components\\kaun\\quizDesc.js":"114","D:\\webserv4u\\quizbeater\\src\\components\\kaun\\slidingImage.js":"115","D:\\webserv4u\\quizbeater\\src\\components\\kaun\\fetchKaun.js":"116","D:\\webserv4u\\quizbeater\\src\\components\\kaun\\fetchKaunSummary.js":"117","D:\\webserv4u\\quizbeater\\src\\store\\reducers\\authReducer.js":"118","D:\\webserv4u\\quizbeater\\src\\store\\actions\\authActions.js":"119","D:\\webserv4u\\quizbeater\\src\\layout\\auth\\SignIn.js":"120","D:\\webserv4u\\quizbeater\\src\\layout\\auth\\authContext.js":"121","D:\\webserv4u\\quizbeater\\src\\layout\\auth\\privateRoute.js":"122","D:\\webserv4u\\quizbeater\\src\\utils\\asyncMetaDecorator.js":"123"},{"size":1072,"mtime":1612082675814,"results":"124","hashOfConfig":"125"},{"size":362,"mtime":499162500000,"results":"126","hashOfConfig":"125"},{"size":3351,"mtime":1612033406952,"results":"127","hashOfConfig":"125"},{"size":1834,"mtime":1611996833284,"results":"128","hashOfConfig":"125"},{"size":693,"mtime":1611694668575,"results":"129","hashOfConfig":"125"},{"size":1626,"mtime":1612013626092,"results":"130","hashOfConfig":"125"},{"size":1507,"mtime":1611637994043,"results":"131","hashOfConfig":"125"},{"size":1512,"mtime":1612013297108,"results":"132","hashOfConfig":"125"},{"size":1372,"mtime":1612013594597,"results":"133","hashOfConfig":"125"},{"size":680,"mtime":1611936512760,"results":"134","hashOfConfig":"125"},{"size":388,"mtime":1611475260706,"results":"135","hashOfConfig":"125"},{"size":575,"mtime":1611899924710,"results":"136","hashOfConfig":"125"},{"size":1369,"mtime":1611417595133,"results":"137","hashOfConfig":"125"},{"size":586,"mtime":1611417515658,"results":"138","hashOfConfig":"125"},{"size":4338,"mtime":1611425091955,"results":"139","hashOfConfig":"125"},{"size":3382,"mtime":1611425110494,"results":"140","hashOfConfig":"125"},{"size":2419,"mtime":1611854787450,"results":"141","hashOfConfig":"125"},{"size":6275,"mtime":1611425040314,"results":"142","hashOfConfig":"125"},{"size":5300,"mtime":1611425071655,"results":"143","hashOfConfig":"125"},{"size":2479,"mtime":1611900170999,"results":"144","hashOfConfig":"125"},{"size":2810,"mtime":1612158783555,"results":"145","hashOfConfig":"125"},{"size":1685,"mtime":1612159310397,"results":"146","hashOfConfig":"125"},{"size":3685,"mtime":1612170828467,"results":"147","hashOfConfig":"125"},{"size":433,"mtime":1611547862283,"results":"148","hashOfConfig":"125"},{"size":1853,"mtime":1611900274694,"results":"149","hashOfConfig":"125"},{"size":6053,"mtime":1611561366352,"results":"150","hashOfConfig":"125"},{"size":453,"mtime":1611900204977,"results":"151","hashOfConfig":"125"},{"size":2935,"mtime":1611569109214,"results":"152","hashOfConfig":"125"},{"size":1208,"mtime":1611564477093,"results":"153","hashOfConfig":"125"},{"size":1217,"mtime":1611564472390,"results":"154","hashOfConfig":"125"},{"size":9228,"mtime":1612136959047,"results":"155","hashOfConfig":"125"},{"size":2358,"mtime":1611753087007,"results":"156","hashOfConfig":"125"},{"size":1924,"mtime":1611641888731,"results":"157","hashOfConfig":"125"},{"size":9888,"mtime":1611642668436,"results":"158","hashOfConfig":"125"},{"size":10397,"mtime":1611643029572,"results":"159","hashOfConfig":"125"},{"size":10848,"mtime":1611643196246,"results":"160","hashOfConfig":"125"},{"size":445,"mtime":1611635392725,"results":"161","hashOfConfig":"125"},{"size":298,"mtime":1611631403732,"results":"162","hashOfConfig":"125"},{"size":733,"mtime":1612129249282,"results":"163","hashOfConfig":"125"},{"size":1496,"mtime":1611694399793,"results":"164","hashOfConfig":"125"},{"size":1140,"mtime":1611806653787,"results":"165","hashOfConfig":"125"},{"size":2582,"mtime":1611808776867,"results":"166","hashOfConfig":"125"},{"size":741,"mtime":1612129334493,"results":"167","hashOfConfig":"125"},{"size":1383,"mtime":1612013728468,"results":"168","hashOfConfig":"125"},{"size":1501,"mtime":1612007937139,"results":"169","hashOfConfig":"125"},{"size":1289,"mtime":1612010282745,"results":"170","hashOfConfig":"125"},{"size":1347,"mtime":1612008159471,"results":"171","hashOfConfig":"125"},{"size":1437,"mtime":1611926179617,"results":"172","hashOfConfig":"125"},{"size":588,"mtime":1611927307182,"results":"173","hashOfConfig":"125"},{"size":2406,"mtime":1611747556552,"results":"174","hashOfConfig":"125"},{"size":3369,"mtime":1611747582551,"results":"175","hashOfConfig":"125"},{"size":4325,"mtime":1611747589937,"results":"176","hashOfConfig":"125"},{"size":5287,"mtime":1611747603845,"results":"177","hashOfConfig":"125"},{"size":6262,"mtime":1611747616371,"results":"178","hashOfConfig":"125"},{"size":2521,"mtime":1612166933722,"results":"179","hashOfConfig":"125"},{"size":1610,"mtime":1612166474334,"results":"180","hashOfConfig":"125"},{"size":460,"mtime":1611754527335,"results":"181","hashOfConfig":"125"},{"size":440,"mtime":1611746556246,"results":"182","hashOfConfig":"125"},{"size":448,"mtime":1611754575276,"results":"183","hashOfConfig":"125"},{"size":412,"mtime":1611754611274,"results":"184","hashOfConfig":"125"},{"size":416,"mtime":1611754640906,"results":"185","hashOfConfig":"125"},{"size":751,"mtime":1612129389453,"results":"186","hashOfConfig":"125"},{"size":1495,"mtime":1612011750941,"results":"187","hashOfConfig":"125"},{"size":1544,"mtime":1612012354914,"results":"188","hashOfConfig":"125"},{"size":1422,"mtime":1612013883171,"results":"189","hashOfConfig":"125"},{"size":1289,"mtime":1612011678452,"results":"190","hashOfConfig":"125"},{"size":2362,"mtime":1612168330691,"results":"191","hashOfConfig":"125"},{"size":1545,"mtime":1612168011323,"results":"192","hashOfConfig":"125"},{"size":1391,"mtime":1611755530568,"results":"193","hashOfConfig":"125"},{"size":586,"mtime":1611754960130,"results":"194","hashOfConfig":"125"},{"size":3389,"mtime":1611755850509,"results":"195","hashOfConfig":"125"},{"size":4345,"mtime":1611755870048,"results":"196","hashOfConfig":"125"},{"size":5307,"mtime":1611755881754,"results":"197","hashOfConfig":"125"},{"size":2476,"mtime":1611755729212,"results":"198","hashOfConfig":"125"},{"size":6282,"mtime":1611755901876,"results":"199","hashOfConfig":"125"},{"size":753,"mtime":1612129415920,"results":"200","hashOfConfig":"125"},{"size":1411,"mtime":1612013381974,"results":"201","hashOfConfig":"125"},{"size":1552,"mtime":1612012691228,"results":"202","hashOfConfig":"125"},{"size":1490,"mtime":1612013456350,"results":"203","hashOfConfig":"125"},{"size":1043,"mtime":1611809271785,"results":"204","hashOfConfig":"125"},{"size":2485,"mtime":1612167775953,"results":"205","hashOfConfig":"125"},{"size":1617,"mtime":1612167219160,"results":"206","hashOfConfig":"125"},{"size":1385,"mtime":1611761586338,"results":"207","hashOfConfig":"125"},{"size":586,"mtime":1611761416224,"results":"208","hashOfConfig":"125"},{"size":2414,"mtime":1611761784194,"results":"209","hashOfConfig":"125"},{"size":4333,"mtime":1611761932480,"results":"210","hashOfConfig":"125"},{"size":3377,"mtime":1611761895795,"results":"211","hashOfConfig":"125"},{"size":5295,"mtime":1611761959588,"results":"212","hashOfConfig":"125"},{"size":6270,"mtime":1611762000959,"results":"213","hashOfConfig":"125"},{"size":713,"mtime":1612129353602,"results":"214","hashOfConfig":"125"},{"size":1756,"mtime":1612010937765,"results":"215","hashOfConfig":"125"},{"size":1507,"mtime":1612009549523,"results":"216","hashOfConfig":"125"},{"size":1289,"mtime":1612010219874,"results":"217","hashOfConfig":"125"},{"size":2323,"mtime":1612169022492,"results":"218","hashOfConfig":"125"},{"size":1461,"mtime":1612013768934,"results":"219","hashOfConfig":"125"},{"size":1573,"mtime":1612168597958,"results":"220","hashOfConfig":"125"},{"size":1369,"mtime":1611769444608,"results":"221","hashOfConfig":"125"},{"size":586,"mtime":1611761428684,"results":"222","hashOfConfig":"125"},{"size":2382,"mtime":1611769537711,"results":"223","hashOfConfig":"125"},{"size":3345,"mtime":1611769616525,"results":"224","hashOfConfig":"125"},{"size":4301,"mtime":1611769658155,"results":"225","hashOfConfig":"125"},{"size":6238,"mtime":1611769733268,"results":"226","hashOfConfig":"125"},{"size":5263,"mtime":1611769700137,"results":"227","hashOfConfig":"125"},{"size":1371,"mtime":1611770778739,"results":"228","hashOfConfig":"125"},{"size":586,"mtime":1611761436957,"results":"229","hashOfConfig":"125"},{"size":2386,"mtime":1611770840051,"results":"230","hashOfConfig":"125"},{"size":3350,"mtime":1611770976176,"results":"231","hashOfConfig":"125"},{"size":4306,"mtime":1611770982614,"results":"232","hashOfConfig":"125"},{"size":5268,"mtime":1611770989862,"results":"233","hashOfConfig":"125"},{"size":6243,"mtime":1611770996590,"results":"234","hashOfConfig":"125"},{"size":736,"mtime":1612129369611,"results":"235","hashOfConfig":"125"},{"size":1416,"mtime":1612013844210,"results":"236","hashOfConfig":"125"},{"size":1495,"mtime":1612011783327,"results":"237","hashOfConfig":"125"},{"size":1768,"mtime":1612010951907,"results":"238","hashOfConfig":"125"},{"size":1289,"mtime":1612010433999,"results":"239","hashOfConfig":"125"},{"size":2357,"mtime":1612169933147,"results":"240","hashOfConfig":"125"},{"size":1485,"mtime":1612169381730,"results":"241","hashOfConfig":"125"},{"size":930,"mtime":1611934212523,"results":"242","hashOfConfig":"125"},{"size":1220,"mtime":1611934110584,"results":"243","hashOfConfig":"125"},{"size":2531,"mtime":1612000280589,"results":"244","hashOfConfig":"125"},{"size":1242,"mtime":1611992202787,"results":"245","hashOfConfig":"125"},{"size":471,"mtime":1611992521606,"results":"246","hashOfConfig":"125"},{"size":360,"mtime":1612026272153,"results":"247","hashOfConfig":"125"},{"filePath":"248","messages":"249","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"250"},"iei18r",{"filePath":"251","messages":"252","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"250"},{"filePath":"253","messages":"254","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"255","usedDeprecatedRules":"250"},{"filePath":"256","messages":"257","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"258","usedDeprecatedRules":"250"},{"filePath":"259","messages":"260","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"261","usedDeprecatedRules":"250"},{"filePath":"262","messages":"263","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"250"},{"filePath":"264","messages":"265","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"250"},{"filePath":"266","messages":"267","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"268","usedDeprecatedRules":"250"},{"filePath":"269","messages":"270","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"250"},{"filePath":"271","messages":"272","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"250"},{"filePath":"273","messages":"274","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"250"},{"filePath":"275","messages":"276","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"250"},{"filePath":"277","messages":"278","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"250"},{"filePath":"279","messages":"280","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"281","usedDeprecatedRules":"250"},{"filePath":"282","messages":"283","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"284","usedDeprecatedRules":"250"},{"filePath":"285","messages":"286","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"287","usedDeprecatedRules":"250"},{"filePath":"288","messages":"289","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"250"},{"filePath":"290","messages":"291","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"292","usedDeprecatedRules":"250"},{"filePath":"293","messages":"294","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"295","usedDeprecatedRules":"250"},{"filePath":"296","messages":"297","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"250"},{"filePath":"298","messages":"299","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"300","usedDeprecatedRules":"250"},{"filePath":"301","messages":"302","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"250"},{"filePath":"303","messages":"304","errorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"305","messages":"306","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"250"},{"filePath":"307","messages":"308","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"309","usedDeprecatedRules":"250"},{"filePath":"310","messages":"311","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"250"},{"filePath":"312","messages":"313","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"250"},{"filePath":"314","messages":"315","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"316","usedDeprecatedRules":"250"},{"filePath":"317","messages":"318","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"319","usedDeprecatedRules":"250"},{"filePath":"320","messages":"321","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"322","usedDeprecatedRules":"250"},{"filePath":"323","messages":"324","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"325","usedDeprecatedRules":"250"},{"filePath":"326","messages":"327","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"250"},{"filePath":"328","messages":"329","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"330","usedDeprecatedRules":"250"},{"filePath":"331","messages":"332","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"250"},{"filePath":"333","messages":"334","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"250"},{"filePath":"335","messages":"336","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"250"},{"filePath":"337","messages":"338","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"250"},{"filePath":"339","messages":"340","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"250"},{"filePath":"341","messages":"342","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"343","usedDeprecatedRules":"250"},{"filePath":"344","messages":"345","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"250"},{"filePath":"346","messages":"347","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"348","usedDeprecatedRules":"250"},{"filePath":"349","messages":"350","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"351","usedDeprecatedRules":"250"},{"filePath":"352","messages":"353","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"354","usedDeprecatedRules":"250"},{"filePath":"355","messages":"356","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"250"},{"filePath":"357","messages":"358","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"250"},{"filePath":"359","messages":"360","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"250"},{"filePath":"361","messages":"362","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"363","usedDeprecatedRules":"250"},{"filePath":"364","messages":"365","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"250"},{"filePath":"366","messages":"367","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"368","usedDeprecatedRules":"250"},{"filePath":"369","messages":"370","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"250"},{"filePath":"371","messages":"372","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"373","usedDeprecatedRules":"250"},{"filePath":"374","messages":"375","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"376","usedDeprecatedRules":"250"},{"filePath":"377","messages":"378","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"379","usedDeprecatedRules":"250"},{"filePath":"380","messages":"381","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"382","usedDeprecatedRules":"250"},{"filePath":"383","messages":"384","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"385","messages":"386","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"387","messages":"388","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"250"},{"filePath":"389","messages":"390","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"250"},{"filePath":"391","messages":"392","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"250"},{"filePath":"393","messages":"394","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"250"},{"filePath":"395","messages":"396","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"250"},{"filePath":"397","messages":"398","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"250"},{"filePath":"399","messages":"400","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"250"},{"filePath":"401","messages":"402","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"403","usedDeprecatedRules":"250"},{"filePath":"404","messages":"405","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"250"},{"filePath":"406","messages":"407","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"250"},{"filePath":"408","messages":"409","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"410","messages":"411","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"412","messages":"413","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"250"},{"filePath":"414","messages":"415","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"281","usedDeprecatedRules":"250"},{"filePath":"416","messages":"417","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"418","usedDeprecatedRules":"250"},{"filePath":"419","messages":"420","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"421","usedDeprecatedRules":"250"},{"filePath":"422","messages":"423","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"424","usedDeprecatedRules":"250"},{"filePath":"425","messages":"426","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"427","usedDeprecatedRules":"250"},{"filePath":"428","messages":"429","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"430","usedDeprecatedRules":"250"},{"filePath":"431","messages":"432","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"433","usedDeprecatedRules":"250"},{"filePath":"434","messages":"435","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"250"},{"filePath":"436","messages":"437","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"438","usedDeprecatedRules":"250"},{"filePath":"439","messages":"440","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"250"},{"filePath":"441","messages":"442","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"250"},{"filePath":"443","messages":"444","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"445","messages":"446","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"447","messages":"448","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"250"},{"filePath":"449","messages":"450","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"281","usedDeprecatedRules":"250"},{"filePath":"451","messages":"452","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"250"},{"filePath":"453","messages":"454","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"455","usedDeprecatedRules":"250"},{"filePath":"456","messages":"457","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"458","usedDeprecatedRules":"250"},{"filePath":"459","messages":"460","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"461","usedDeprecatedRules":"250"},{"filePath":"462","messages":"463","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"464","usedDeprecatedRules":"250"},{"filePath":"465","messages":"466","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"467","usedDeprecatedRules":"250"},{"filePath":"468","messages":"469","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"470","usedDeprecatedRules":"250"},{"filePath":"471","messages":"472","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"250"},{"filePath":"473","messages":"474","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"250"},{"filePath":"475","messages":"476","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"477","messages":"478","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"250"},{"filePath":"479","messages":"480","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"481","messages":"482","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"250"},{"filePath":"483","messages":"484","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"281","usedDeprecatedRules":"250"},{"filePath":"485","messages":"486","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"250"},{"filePath":"487","messages":"488","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"489","usedDeprecatedRules":"250"},{"filePath":"490","messages":"491","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"492","usedDeprecatedRules":"250"},{"filePath":"493","messages":"494","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"495","usedDeprecatedRules":"250"},{"filePath":"496","messages":"497","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"498","usedDeprecatedRules":"250"},{"filePath":"499","messages":"500","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"250"},{"filePath":"501","messages":"502","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"281","usedDeprecatedRules":"250"},{"filePath":"503","messages":"504","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"250"},{"filePath":"505","messages":"506","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"507","usedDeprecatedRules":"250"},{"filePath":"508","messages":"509","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"510","usedDeprecatedRules":"250"},{"filePath":"511","messages":"512","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"513","usedDeprecatedRules":"250"},{"filePath":"514","messages":"515","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"516","usedDeprecatedRules":"250"},{"filePath":"517","messages":"518","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"519","usedDeprecatedRules":"250"},{"filePath":"520","messages":"521","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"250"},{"filePath":"522","messages":"523","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"250"},{"filePath":"524","messages":"525","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"526","usedDeprecatedRules":"250"},{"filePath":"527","messages":"528","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"250"},{"filePath":"529","messages":"530","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"531","messages":"532","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"533","messages":"534","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"535","messages":"536","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"537"},{"filePath":"538","messages":"539","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"540","usedDeprecatedRules":"250"},{"filePath":"541","messages":"542","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"250"},{"filePath":"543","messages":"544","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"250"},{"filePath":"545","messages":"546","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"250"},"D:\\webserv4u\\quizbeater\\src\\index.js",[],["547","548"],"D:\\webserv4u\\quizbeater\\src\\reportWebVitals.js",[],"D:\\webserv4u\\quizbeater\\src\\App.js",["549"],"import './App.css';\nimport HeaderNavbar from './layout/navbar'\nimport React, { Component } from 'react';\nimport { BrowserRouter, Switch, Route } from 'react-router-dom'\nimport Dashboard from './components/dashboard/dashboard';\nimport CreateQus from './components/createPost/createQuestion';\nimport Footer from './layout/footer';\nimport About from './pages/about';\nimport FAQ from './pages/faq';\nimport Contact from './pages/contact';\nimport Disclaimer from './pages/disclaimer';\nimport PrivacyPolicy from './pages/privacyPolicy';\nimport TermsAndCondition from './pages/termAndCondition';\nimport NotFound from './pages/notFound';\nimport TriviaQuiz from './components/dashboard/triviaQuiz';\nimport FakeOrNot from './components/fakeOrNot/fakeOrNot';\nimport CreateFakeOrNot from './components/fakeOrNot/createPost/createFakeOrNot';\nimport KyaBoltiPublic from './components/kyaBoltiPublic/kyaBoltiPublic';\nimport CreateKyaBoltiPublic from './components/kyaBoltiPublic/createPost/createKyaBoltiPublic';\nimport DaamSahiHai from './components/daamSahiHai/daamSahiHai';\nimport CreateDaamSahiHai from './components/daamSahiHai/createPost/createDaamSahiHai';\nimport FYI from './components/fYI/fYI';\nimport CreateFYI from './components/fYI/createPost/createFYI';\nimport CreateKaun from './components/kaun/createPost/createKaun';\nimport Kaun from './components/kaun/kaun';\nimport SignIn from './layout/auth/SignIn'\nimport {AuthProvider} from './layout/auth/authContext'\nimport PrivateRoute from './layout/auth/privateRoute'\n\n\n\n\n\nclass App extends Component {\n\n  render() {\n    return (\n      <AuthProvider>\n      <BrowserRouter>\n        <div className=\"App\">\n          <HeaderNavbar />\n          <Switch>\n          <Route exact path='/' component={Dashboard} />\n          <PrivateRoute path='/createTrivia'  > \n          <CreateQus />\n          </PrivateRoute>\n          <PrivateRoute path='/createKyaBoltiPublic'  > <CreateKyaBoltiPublic/> </PrivateRoute>\n          <PrivateRoute path='/createFakeOrNot'  > <CreateFakeOrNot /> </PrivateRoute>\n          <PrivateRoute path='/createDaamSahiHai'  ><CreateDaamSahiHai /> </PrivateRoute>\n          <PrivateRoute path='/createFYI'  > <CreateFYI /> </PrivateRoute>\n          <PrivateRoute path='/createKaun' > <CreateKaun /> </PrivateRoute>\n          <Route  path='/about' component={About} />\n          <Route  path='/signin' >\n            <SignIn />\n             </Route>\n\n          <Route  path='/flipkart-daily-trivia-quiz' component={TriviaQuiz} />\n          <Route  path='/flipkart-fake-or-not-quiz' component={FakeOrNot} />\n          <Route  path='/flipkart-kya-bolti-public-quiz' component={KyaBoltiPublic} />\n          <Route  path='/flipkart-daam-sahi-hai-quiz' component={DaamSahiHai} />\n          <Route  path='/flipkart-for-your-infromation-quiz' component={FYI} />\n          <Route  path='/flipkart-kaun-who-did-it-quiz' component={Kaun} />\n          \n          <Route  path='/faq' component={FAQ} />\n          <Route  path='/contact' component={Contact} />\n          <Route  path='/disclaimer' component={Disclaimer} />\n          <Route  path='/privacyPolicy' component={PrivacyPolicy} />\n          <Route  path='/termsAndCondition' component={TermsAndCondition} />\n          \n          </Switch>\n          <Footer />\n        </div>\n      </BrowserRouter></AuthProvider>\n    );\n  }\n}\n\nexport default App;\n","D:\\webserv4u\\quizbeater\\src\\layout\\navbar.js",["550"],"import { Button } from \"react-bootstrap\";\r\nimport React from \"react\";\r\nimport {Navbar, NavDropdown,Nav, Image} from 'react-bootstrap'\r\nimport {useAuth} from './auth/authContext'\r\n\r\n\r\nconst HeaderNavbar = (props) => {\r\n  const auth = useAuth();\r\n  return (\r\n      \r\n    <Navbar  collapseOnSelect expand=\"lg\" bg=\"dark\" variant=\"dark\">\r\n    <Navbar.Brand  href=\"/\"><h5 >WebServ4u</h5></Navbar.Brand>\r\n    <Navbar.Toggle aria-controls=\"responsive-navbar-nav\" />\r\n    <Navbar.Collapse id=\"responsive-navbar-nav\">\r\n      <Nav className=\"mr-auto\">\r\n        <Nav.Link href=\"/about\">About</Nav.Link>\r\n   \r\n     \r\n        <Nav.Link href=\"/contact\">Contact</Nav.Link>\r\n        <Nav.Link href=\"/faq\">FAQ</Nav.Link>\r\n      </Nav>\r\n      <Nav>\r\n     \r\n      {\r\n        auth.user ?  \r\n        <NavDropdown title=\"Admin\" id=\"collasible-nav-dropdown\" >\r\n          <NavDropdown.Item href=\"/createTrivia\">Create Trivia</NavDropdown.Item>\r\n          <NavDropdown.Item href=\"/createFakeOrNot\">Create Fake or Not</NavDropdown.Item>\r\n          <NavDropdown.Item href=\"/createKyaBoltiPublic\">Create Kya Bolti Public</NavDropdown.Item>\r\n          <NavDropdown.Item href=\"/createDaamSahiHai\">Create Daam Sahi Hai</NavDropdown.Item>\r\n          <NavDropdown.Item href=\"/createFYI\">Create FYI</NavDropdown.Item>\r\n          <NavDropdown.Item href=\"/createKaun\">Create Kaun? Who did it</NavDropdown.Item>\r\n          <Button style={{marginLeft:\"25px\",marginTop:\"10px\"}} onClick={async ()=> await auth.signOut()} > LogOut </Button>\r\n        </NavDropdown> :  <Nav.Link href=\"/signin\">SignIn</Nav.Link>\r\n      }\r\n\r\n\r\n        <Nav.Link href=\"/disclaimer\">Disclaimer</Nav.Link>\r\n        <Nav.Link href=\"/privacyPolicy\">\r\n          PrivacyPolicy\r\n        </Nav.Link>\r\n        \r\n      </Nav>\r\n    </Navbar.Collapse>\r\n  </Navbar>\r\n  )\r\n}\r\n\r\n\r\nexport default HeaderNavbar;\r\n","D:\\webserv4u\\quizbeater\\src\\components\\dashboard\\dashboard.js",["551","552"],"import React from \"react\";\r\nimport { Card, Col, Container, Row } from \"react-bootstrap\";\r\nimport MetaDecorator from \"../../utils/metaDecorator\";\r\nimport DashboardGallery from \"./homeDashboard/dashboardGallery\";\r\nimport DashBoardHeader from \"./homeDashboard/dashboardHeader\";\r\nimport GameType from \"./homeDashboard/gameType\";\r\nconst dashboard = require('../../dummyData/home.json')\r\n\r\n const Dashboard = () => {\r\n  return (\r\n    <Container fluid >   \r\n    <MetaDecorator title={dashboard.title} description={dashboard.description} /> \r\n   <Card>\r\n  <DashBoardHeader />\r\n      <GameType />\r\n      <DashboardGallery />\r\n   </Card>\r\n    \r\n    </Container>\r\n\r\n  );\r\n}\r\n\r\nexport default Dashboard;\r\n","D:\\webserv4u\\quizbeater\\src\\components\\dashboard\\quizHead.js",[],"D:\\webserv4u\\quizbeater\\src\\components\\dashboard\\slidingImage.js",[],"D:\\webserv4u\\quizbeater\\src\\components\\dashboard\\quizDes.js",["553"],"import React from 'react';\r\nimport { Card, Image } from 'react-bootstrap';\r\nimport MetaDecorator from \"../../utils/metaDecorator\"\r\nconst content = require('../../dummyData/home.json')\r\n\r\nconst QuizDescription = () =>{\r\n    return (\r\n        <div>\r\n            <MetaDecorator title={content.quizDescriptionTitle} description={content.quizDescriptionDescription} />\r\n<Card.Text><br></br>\r\n      Here you have to get quick live updates for each <b>Trivia</b> Quiz Question everyday at 11:50pm.\r\n      By answering these Quiz Questions you can win many gift vouchers,coupons,gifts,super coins etc.\r\n      &nbsp; <br></br> <Image src=\"https://seeklogo.com/images/F/flipkart-logo-3F33927DAA-seeklogo.com.png\"\r\n      width={60}\r\n      height={60}\r\n      roundedCircle />\r\n      <a href=\"https://www.flipkart.com/\">&nbsp;<b>Flipkart</b> </a>\r\n      <b><i>daily <b>Trivia</b> Quiz is Back.</i>  </b>Daily <b>Trivia</b> Quiz is generally asks\r\n       General Knowledge based Questions.Flipkart <b>Daily Trivia</b> Quiz is started at 12:00Am and ends at 11:59am.\r\n       <b><i>QuizBeater</i></b> provide these answers at 12:00am daily.By answering them you have to\r\n        get some relevant prize,coupons,gift or super coins  by regular participation in daily quiz.\r\n        <b>Make sure you have to follow our official <a href=\"#\"><b><b>Telegram</b></b> </a> channel to get daily \r\n          imediate answers for each Quiz  </b>\r\n    </Card.Text>\r\n    <br></br> \r\n        </div>\r\n    )\r\n}\r\nexport default QuizDescription;","D:\\webserv4u\\quizbeater\\src\\components\\dashboard\\howToPlay.js",[],"D:\\webserv4u\\quizbeater\\src\\store\\reducers\\rootReducer.js",[],"D:\\webserv4u\\quizbeater\\src\\store\\reducers\\projectReducer.js",[],"D:\\webserv4u\\quizbeater\\src\\config\\firebase.js",[],"D:\\webserv4u\\quizbeater\\src\\components\\createPost\\createQuestion.js",[],"D:\\webserv4u\\quizbeater\\src\\components\\createPost\\selectedPage.js",["554","555","556","557"],"import React from 'react';\r\nimport Q1 from './Q1';\r\nimport Q2 from './Q2';\r\nimport Q3 from './Q3';\r\nimport Q4 from './Q4';\r\nimport Q5 from './Q5';\r\n\r\nconst SelectedPage = (props) => {\r\n    const selectedValue = props.selectedValue;\r\n\r\n    \r\n      if(selectedValue==1){\r\n          return <Q1 />;\r\n      }else if(selectedValue==2){\r\n          return <Q2 />;\r\n      }\r\n      else if(selectedValue==3){\r\n        return <Q3 />;\r\n    }\r\n    else if(selectedValue==4){\r\n        return <Q4 />;\r\n    }\r\n      else{\r\n          return <Q5 />\r\n      }\r\n      \r\n}\r\n\r\n\r\nexport default SelectedPage;\r\n","D:\\webserv4u\\quizbeater\\src\\components\\createPost\\Q3.js",["558"],"import React from \"react\"\r\nimport { Button, FormFeedback, Form, FormGroup, Label, Input } from 'reactstrap'\r\nimport { connect } from 'react-redux'\r\nimport { createProject } from \"../../store/actions/projectAction\"\r\n\r\nclass Q3 extends React.Component {\r\n    \r\n  state = {\r\n    quizType:'',\r\n    Qus1: '',\r\n    Ans1: '',\r\n    Qus2: '',\r\n    Ans2: '',\r\n    Qus3: '',\r\n    Ans3: '',\r\n\r\n  }\r\nhandleSubmit(e) {\r\n    e.preventDefault()\r\n    this.props.createProject(this.state);\r\n     this.resetForm()\r\n }\r\nresetForm() {\r\n    this.setState({\r\n      quizType:'',\r\n      Qus1: '',\r\n      Ans1: '',\r\n       Qus2: '',\r\n       Ans2: '',\r\n       Qus3: '',\r\n       Ans3: '',\r\n    })\r\n  }\r\nhandleChange = (param, e) => {\r\n    this.setState({ [param]: e.target.value })\r\n  }\r\nrender() {\r\n    return (\r\n      <>\r\n        \r\n          <Form onSubmit={this.handleSubmit.bind(this)}>\r\n          <FormGroup controlId=\"formBasicquizType\">\r\n              <Label className=\"text-muted\">About Quiz</Label>\r\n              <Input\r\n                type=\"text\"\r\n                name=\"quizType\"\r\n                value={this.state.quizType}\r\n                className=\"text-primary\"\r\n                onChange={this.handleChange.bind(this, 'quizType')}\r\n                placeholder=\"About Quiz\"\r\n                required\r\n              />\r\n            </FormGroup>\r\n<FormGroup controlId=\"formBasicName\">\r\n              <Label className=\"text-muted\">Qus.1</Label>\r\n              <Input\r\n                type=\"text\"\r\n                name=\"Qus1\"\r\n                value={this.state.Qus1}\r\n                className=\"text-primary\"\r\n                onChange={this.handleChange.bind(this, 'Qus1')}\r\n                placeholder=\"Question1\"\r\n                required\r\n              />\r\n            </FormGroup>\r\n            <FormGroup controlId=\"formBasicEmail\">\r\n              <Label className=\"text-muted\">Ans.1</Label>\r\n              <Input\r\n                type=\"text\"\r\n                name=\"Ans1\"\r\n                value={this.state.Ans1}\r\n                className=\"text-primary\"\r\n                onChange={this.handleChange.bind(this, 'Ans1')}\r\n                placeholder=\"Answer 1\"\r\n                required\r\n              />\r\n            </FormGroup>\r\n<FormGroup controlId=\"formBasicSubject\">\r\n              <Label className=\"text-muted\">Qus.2</Label>\r\n              <Input\r\n                type=\"text\"\r\n                name=\"Qus2\"\r\n                className=\"text-primary\"\r\n                value={this.state.Qus2}\r\n                onChange={this.handleChange.bind(this, 'Qus2')}\r\n                placeholder=\"Question 2\"\r\n                required\r\n              />\r\n            </FormGroup>\r\n<FormGroup controlId=\"formBasicMessage\">\r\n              <Label className=\"text-muted\">Ans.2</Label>\r\n              <Input\r\n                type=\"text\"\r\n                name=\"message\"\r\n                className=\"text-primary\"\r\n                value={this.state.Ans2}\r\n                placeholder=\"Answer 2\"\r\n                required\r\n                onChange={this.handleChange.bind(this, 'Ans2')}\r\n              />\r\n            </FormGroup>\r\n            <FormGroup controlId=\"formBasicSubject1\">\r\n              <Label className=\"text-muted\">Qus.3</Label>\r\n              <Input\r\n                type=\"text\"\r\n                name=\"Qus3\"\r\n                className=\"text-primary\"\r\n                value={this.state.Qus3}\r\n                onChange={this.handleChange.bind(this, 'Qus3')}\r\n                placeholder=\"Question 3\"\r\n                required\r\n              />\r\n            </FormGroup>\r\n<FormGroup controlId=\"formBasicMessage1\">\r\n              <Label className=\"text-muted\">Ans.3</Label>\r\n              <Input\r\n                type=\"text\"\r\n                name=\"Ans3\"\r\n                className=\"text-primary\"\r\n                value={this.state.Ans3}\r\n                placeholder=\"Answer 3\"\r\n                required\r\n                onChange={this.handleChange.bind(this, 'Ans3')}\r\n              />\r\n            </FormGroup>\r\n<Button variant=\"primary\" type=\"submit\">\r\n              Submit\r\n            </Button>\r\n          </Form>\r\n        \r\n      </>\r\n    )\r\n  }\r\n  }\r\n  \r\n\r\n  const mapDispatchToProps = dispatch => {\r\n    return {\r\n      createProject: (project) => dispatch(createProject(project))\r\n    }\r\n  }\r\n\r\nexport default connect(null,mapDispatchToProps)(Q3);","D:\\webserv4u\\quizbeater\\src\\components\\createPost\\Q2.js",["559"],"import React, { Component } from 'react'\r\nimport { Button, FormFeedback, Form, FormGroup, Label, Input } from 'reactstrap'\r\nimport { connect } from 'react-redux'\r\nimport { createProject } from \"../../store/actions/projectAction\"\r\nclass Q2 extends Component {\r\n  state = {\r\n    quizType:'',\r\n    Qus1: '',\r\n    Ans1: '',\r\n    Qus2: '',\r\n    Ans2: '',\r\n  }\r\nhandleSubmit(e) {\r\n    e.preventDefault()\r\n    this.props.createProject(this.state);\r\n     this.resetForm()\r\n }\r\nresetForm() {\r\n    this.setState({\r\n      quizType:'',\r\n      Qus1: '',\r\n      Ans1: '',\r\n       Qus2: '',\r\n       Ans2: '',\r\n    })\r\n  }\r\nhandleChange = (param, e) => {\r\n    this.setState({ [param]: e.target.value })\r\n  }\r\nrender() {\r\n    return (\r\n      <>\r\n        \r\n          <Form onSubmit={this.handleSubmit.bind(this)}>\r\n            \r\n          <FormGroup controlId=\"formBasicquizType\">\r\n              <Label className=\"text-muted\">About Quiz</Label>\r\n              <Input\r\n                type=\"text\"\r\n                name=\"quizType\"\r\n                value={this.state.quizType}\r\n                className=\"text-primary\"\r\n                onChange={this.handleChange.bind(this, 'quizType')}\r\n                placeholder=\"About Quiz\"\r\n                required\r\n              />\r\n            </FormGroup>\r\n\r\n<FormGroup controlId=\"formBasicName\">\r\n              <Label className=\"text-muted\">Qus.1</Label>\r\n              <Input\r\n                type=\"text\"\r\n                name=\"Qus1\"\r\n                value={this.state.Qus1}\r\n                className=\"text-primary\"\r\n                onChange={this.handleChange.bind(this, 'Qus1')}\r\n                placeholder=\"Question1\"\r\n                required\r\n              />\r\n            </FormGroup>\r\n            <FormGroup controlId=\"formBasicEmail\">\r\n              <Label className=\"text-muted\">Ans.1</Label>\r\n              <Input\r\n                type=\"text\"\r\n                name=\"Ans1\"\r\n                value={this.state.Ans1}\r\n                className=\"text-primary\"\r\n                onChange={this.handleChange.bind(this, 'Ans1')}\r\n                placeholder=\"Answer 1\"\r\n                required\r\n              />\r\n            </FormGroup>\r\n<FormGroup controlId=\"formBasicSubject\">\r\n              <Label className=\"text-muted\">Qus.2</Label>\r\n              <Input\r\n                type=\"text\"\r\n                name=\"Qus2\"\r\n                className=\"text-primary\"\r\n                value={this.state.Qus2}\r\n                onChange={this.handleChange.bind(this, 'Qus2')}\r\n                placeholder=\"Question 2\"\r\n                required\r\n              />\r\n            </FormGroup>\r\n<FormGroup controlId=\"formBasicMessage\">\r\n              <Label className=\"text-muted\">Ans.2</Label>\r\n              <Input\r\n                type=\"text\"\r\n                name=\"Ans2\"\r\n                className=\"text-primary\"\r\n                value={this.state.Ans2}\r\n                placeholder=\"Answer 2\"\r\n                required\r\n                onChange={this.handleChange.bind(this, 'Ans2')}\r\n              />\r\n            </FormGroup>\r\n<Button variant=\"primary\" type=\"submit\">\r\n              Submit\r\n            </Button>\r\n          </Form>\r\n        \r\n      </>\r\n    )\r\n  }\r\n}\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n    return {\r\n      createProject: (project) => dispatch(createProject(project))\r\n    }\r\n  }\r\n\r\nexport default connect(null,mapDispatchToProps)(Q2);","D:\\webserv4u\\quizbeater\\src\\components\\createPost\\Q1.js",[],"D:\\webserv4u\\quizbeater\\src\\components\\createPost\\Q5.js",["560"],"import React from \"react\"\r\nimport { Button, FormFeedback, Form, FormGroup, Label, Input } from 'reactstrap'\r\nimport { connect } from 'react-redux'\r\nimport { createProject } from \"../../store/actions/projectAction\"\r\n\r\n\r\nclass Q5 extends React.Component {\r\n    \r\n  state = {\r\n    quizType:'',\r\n    Qus1: '',\r\n    Ans1: '',\r\n    Qus2: '',\r\n    Ans2: '',\r\n    Qus3: '',\r\n    Ans3: '',\r\n    Qus4: '',\r\n    Ans4: '',\r\n    Qus5: '',\r\n    Ans5: '',\r\n\r\n  }\r\nhandleSubmit(e) {\r\n    e.preventDefault()\r\n    this.props.createProject(this.state);\r\n    \r\n     this.resetForm()\r\n }\r\nresetForm() {\r\n    this.setState({\r\n      quizType:'',\r\n      Qus1: '',\r\n      Ans1: '',\r\n       Qus2: '',\r\n       Ans2: '',\r\n       Qus3: '',\r\n       Ans3: '',\r\n       Qus4: '',\r\n       Ans4: '',\r\n       Qus5: '',\r\n       Ans5: '',\r\n   \r\n    })\r\n  }\r\nhandleChange = (param, e) => {\r\n    this.setState({ [param]: e.target.value })\r\n  }\r\nrender() {\r\n    return (\r\n      <>\r\n        \r\n          <Form onSubmit={this.handleSubmit.bind(this)}>\r\n          <FormGroup controlId=\"formBasicquizType\">\r\n              <Label className=\"text-muted\">About Quiz</Label>\r\n              <Input\r\n                type=\"text\"\r\n                name=\"quizType\"\r\n                value={this.state.quizType}\r\n                className=\"text-primary\"\r\n                onChange={this.handleChange.bind(this, 'quizType')}\r\n                placeholder=\"About Quiz\"\r\n                required\r\n              />\r\n            </FormGroup>\r\n<FormGroup controlId=\"formBasicName\">\r\n              <Label className=\"text-muted\">Qus.1</Label>\r\n              <Input\r\n                type=\"text\"\r\n                name=\"Qus1\"\r\n                value={this.state.Qus1}\r\n                className=\"text-primary\"\r\n                onChange={this.handleChange.bind(this, 'Qus1')}\r\n                placeholder=\"Question1\"\r\n                required\r\n              />\r\n            </FormGroup>\r\n            <FormGroup controlId=\"formBasicEmail\">\r\n              <Label className=\"text-muted\">Ans.1</Label>\r\n              <Input\r\n                type=\"text\"\r\n                name=\"Ans1\"\r\n                value={this.state.Ans1}\r\n                className=\"text-primary\"\r\n                onChange={this.handleChange.bind(this, 'Ans1')}\r\n                placeholder=\"Answer 1\"\r\n                required\r\n              />\r\n            </FormGroup>\r\n<FormGroup controlId=\"formBasicSubject\">\r\n              <Label className=\"text-muted\">Qus.2</Label>\r\n              <Input\r\n                type=\"text\"\r\n                name=\"Qus2\"\r\n                className=\"text-primary\"\r\n                value={this.state.Qus2}\r\n                onChange={this.handleChange.bind(this, 'Qus2')}\r\n                placeholder=\"Question 2\"\r\n                required\r\n              />\r\n            </FormGroup>\r\n<FormGroup controlId=\"formBasicMessage\">\r\n              <Label className=\"text-muted\">Ans.2</Label>\r\n              <Input\r\n                type=\"text\"\r\n                name=\"message\"\r\n                className=\"text-primary\"\r\n                value={this.state.Ans2}\r\n                placeholder=\"Answer 2\"\r\n                required\r\n                onChange={this.handleChange.bind(this, 'Ans2')}\r\n              />\r\n            </FormGroup>\r\n            <FormGroup controlId=\"formBasicSubject1\">\r\n              <Label className=\"text-muted\">Qus.3</Label>\r\n              <Input\r\n                type=\"text\"\r\n                name=\"Qus3\"\r\n                className=\"text-primary\"\r\n                value={this.state.Qus3}\r\n                onChange={this.handleChange.bind(this, 'Qus3')}\r\n                placeholder=\"Question 3\"\r\n                required\r\n              />\r\n            </FormGroup>\r\n<FormGroup controlId=\"formBasicMessage12\">\r\n              <Label className=\"text-muted\">Ans.3</Label>\r\n              <Input\r\n                type=\"text\"\r\n                name=\"Ans3\"\r\n                className=\"text-primary\"\r\n                value={this.state.Ans3}\r\n                placeholder=\"Answer 3\"\r\n                required\r\n                onChange={this.handleChange.bind(this, 'Ans3')}\r\n              />\r\n            </FormGroup>\r\n            <FormGroup controlId=\"formBasicSubject13\">\r\n              <Label className=\"text-muted\">Qus.4</Label>\r\n              <Input\r\n                type=\"text\"\r\n                name=\"Qus4\"\r\n                className=\"text-primary\"\r\n                value={this.state.Qus4}\r\n                onChange={this.handleChange.bind(this, 'Qus4')}\r\n                placeholder=\"Question 4\"\r\n                required\r\n              />\r\n            </FormGroup>\r\n<FormGroup controlId=\"formBasicMessage12\">\r\n              <Label className=\"text-muted\">Ans.4</Label>\r\n              <Input\r\n                type=\"text\"\r\n                name=\"Ans4\"\r\n                className=\"text-primary\"\r\n                value={this.state.Ans4}\r\n                placeholder=\"Answer 4\"\r\n                required\r\n                onChange={this.handleChange.bind(this, 'Ans4')}\r\n              />\r\n            </FormGroup>\r\n            <FormGroup controlId=\"formBasicSubject1as3\">\r\n              <Label className=\"text-muted\">Qus.5</Label>\r\n              <Input\r\n                type=\"text\"\r\n                name=\"Qus5\"\r\n                className=\"text-primary\"\r\n                value={this.state.Qus5}\r\n                onChange={this.handleChange.bind(this, 'Qus5')}\r\n                placeholder=\"Question 5\"\r\n                required\r\n              />\r\n            </FormGroup>\r\n<FormGroup controlId=\"formBasicMessage121\">\r\n              <Label className=\"text-muted\">Ans.5</Label>\r\n              <Input\r\n                type=\"text\"\r\n                name=\"Ans5\"\r\n                className=\"text-primary\"\r\n                value={this.state.Ans5}\r\n                placeholder=\"Answer 5\"\r\n                required\r\n                onChange={this.handleChange.bind(this, 'Ans5')}\r\n              />\r\n            </FormGroup>\r\n<Button variant=\"primary\" type=\"submit\">\r\n              Submit\r\n            </Button>\r\n          </Form>\r\n        \r\n      </>\r\n    )\r\n  }\r\n  }\r\n\r\n  const mapDispatchToProps = dispatch => {\r\n    return {\r\n      createProject: (project) => dispatch(createProject(project))\r\n    }\r\n  }\r\n\r\nexport default connect(null,mapDispatchToProps)(Q5);","D:\\webserv4u\\quizbeater\\src\\components\\createPost\\Q4.js",["561"],"import React from \"react\"\r\nimport { Button, FormFeedback, Form, FormGroup, Label, Input } from 'reactstrap'\r\nimport { connect } from 'react-redux'\r\nimport { createProject } from \"../../store/actions/projectAction\"\r\n\r\nclass Q4 extends React.Component {\r\n    \r\n  state = {\r\n    quizType:'',\r\n    Qus1: '',\r\n    Ans1: '',\r\n    Qus2: '',\r\n    Ans2: '',\r\n    Qus3: '',\r\n    Ans3: '',\r\n    Qus4: '',\r\n    Ans4: '',\r\n\r\n  }\r\nhandleSubmit(e) {\r\n    e.preventDefault()\r\n    this.props.createProject(this.state);\r\n     this.resetForm()\r\n }\r\nresetForm() {\r\n    this.setState({\r\n      quizType:'',\r\n      Qus1: '',\r\n      Ans1: '',\r\n       Qus2: '',\r\n       Ans2: '',\r\n       Qus3: '',\r\n       Ans3: '',\r\n       Qus4: '',\r\n       Ans4: '',\r\n    })\r\n  }\r\nhandleChange = (param, e) => {\r\n    this.setState({ [param]: e.target.value })\r\n  }\r\nrender() {\r\n    return (\r\n      <>\r\n        \r\n          <Form onSubmit={this.handleSubmit.bind(this)}>\r\n          <FormGroup controlId=\"formBasicquizType\">\r\n              <Label className=\"text-muted\">About Quiz</Label>\r\n              <Input\r\n                type=\"text\"\r\n                name=\"quizType\"\r\n                value={this.state.quizType}\r\n                className=\"text-primary\"\r\n                onChange={this.handleChange.bind(this, 'quizType')}\r\n                placeholder=\"About Quiz\"\r\n                required\r\n              />\r\n            </FormGroup>\r\n<FormGroup controlId=\"formBasicName\">\r\n              <Label className=\"text-muted\">Qus.1</Label>\r\n              <Input\r\n                type=\"text\"\r\n                name=\"Qus1\"\r\n                value={this.state.Qus1}\r\n                className=\"text-primary\"\r\n                onChange={this.handleChange.bind(this, 'Qus1')}\r\n                placeholder=\"Question1\"\r\n                required\r\n              />\r\n            </FormGroup>\r\n            <FormGroup controlId=\"formBasicEmail\">\r\n              <Label className=\"text-muted\">Ans.1</Label>\r\n              <Input\r\n                type=\"text\"\r\n                name=\"Ans1\"\r\n                value={this.state.Ans1}\r\n                className=\"text-primary\"\r\n                onChange={this.handleChange.bind(this, 'Ans1')}\r\n                placeholder=\"Answer 1\"\r\n                required\r\n              />\r\n            </FormGroup>\r\n<FormGroup controlId=\"formBasicSubject\">\r\n              <Label className=\"text-muted\">Qus.2</Label>\r\n              <Input\r\n                type=\"text\"\r\n                name=\"Qus2\"\r\n                className=\"text-primary\"\r\n                value={this.state.Qus2}\r\n                onChange={this.handleChange.bind(this, 'Qus2')}\r\n                placeholder=\"Question 2\"\r\n                required\r\n              />\r\n            </FormGroup>\r\n<FormGroup controlId=\"formBasicMessage\">\r\n              <Label className=\"text-muted\">Ans.2</Label>\r\n              <Input\r\n                type=\"text\"\r\n                name=\"message\"\r\n                className=\"text-primary\"\r\n                value={this.state.Ans2}\r\n                placeholder=\"Answer 2\"\r\n                required\r\n                onChange={this.handleChange.bind(this, 'Ans2')}\r\n              />\r\n            </FormGroup>\r\n            <FormGroup controlId=\"formBasicSubject1\">\r\n              <Label className=\"text-muted\">Qus.3</Label>\r\n              <Input\r\n                type=\"text\"\r\n                name=\"Qus3\"\r\n                className=\"text-primary\"\r\n                value={this.state.Qus3}\r\n                onChange={this.handleChange.bind(this, 'Qus3')}\r\n                placeholder=\"Question 3\"\r\n                required\r\n              />\r\n            </FormGroup>\r\n<FormGroup controlId=\"formBasicMessage1\">\r\n              <Label className=\"text-muted\">Ans.3</Label>\r\n              <Input\r\n                type=\"text\"\r\n                name=\"Ans3\"\r\n                className=\"text-primary\"\r\n                value={this.state.Ans3}\r\n                placeholder=\"Answer 3\"\r\n                required\r\n                onChange={this.handleChange.bind(this, 'Ans3')}\r\n              />\r\n            </FormGroup>\r\n            <FormGroup controlId=\"formBasicSubject13\">\r\n              <Label className=\"text-muted\">Qus.4</Label>\r\n              <Input\r\n                type=\"text\"\r\n                name=\"Qus4\"\r\n                className=\"text-primary\"\r\n                value={this.state.Qus4}\r\n                onChange={this.handleChange.bind(this, 'Qus4')}\r\n                placeholder=\"Question 4\"\r\n                required\r\n              />\r\n            </FormGroup>\r\n<FormGroup controlId=\"formBasicMessage12\">\r\n              <Label className=\"text-muted\">Ans.4</Label>\r\n              <Input\r\n                type=\"text\"\r\n                name=\"Ans4\"\r\n                className=\"text-primary\"\r\n                value={this.state.Ans4}\r\n                placeholder=\"Answer 4\"\r\n                required\r\n                onChange={this.handleChange.bind(this, 'Ans4')}\r\n              />\r\n            </FormGroup>\r\n<Button variant=\"primary\" type=\"submit\">\r\n              Submit\r\n            </Button>\r\n          </Form>\r\n        \r\n      </>\r\n    )\r\n  }\r\n  }\r\n  \r\n\r\n  const mapDispatchToProps = dispatch => {\r\n    return {\r\n      createProject: (project) => dispatch(createProject(project))\r\n    }\r\n  }\r\n\r\nexport default connect(null,mapDispatchToProps)(Q4);","D:\\webserv4u\\quizbeater\\src\\store\\actions\\projectAction.js",[],"D:\\webserv4u\\quizbeater\\src\\components\\dashboard\\fetchedData.js",["562","563"],"import React, { Component } from 'react';\r\nimport FetchedDataSummary from './fetchedDataSummary';\r\nimport firebase from '../../config/firebase'\r\nimport QuizPagination from '../pagination/quizPagination';\r\nimport MetaDecorator from \"../../utils/metaDecorator\"\r\nconst content = require('../../dummyData/home.json')\r\n\r\nclass FetchedQuiz extends Component {\r\n \r\n   state={\r\n      questions:[],\r\n      currentPage: 1,\r\n      postsPerPage: 1,\r\n     \r\n    }\r\n    \r\n    componentDidMount() {\r\n    \r\n      this.setState({ loading: true });\r\n      const db = firebase.firestore();\r\n     db.collection(\"createQuiz\").orderBy('createdAt','desc')\r\n      .onSnapshot(querySnapshot=> {\r\n        const questions = [];\r\n          querySnapshot.docs.map(doc => {\r\n            const data = doc.data();\r\n              questions.push(data);\r\n          });\r\n          this.setState({\r\n            questions:questions\r\n          })\r\n        \r\n      });\r\n      this.setState({ loading: false });\r\n    }\r\n\r\n\r\n   render(){\r\n\r\n      const {currentPage, postsPerPage, questions} = this.state;\r\n    // posts section\r\n\r\n    \r\n  const indexOfLastPost = currentPage * postsPerPage;\r\n  const indexOfFirstPost = indexOfLastPost - postsPerPage;\r\n  const currentPosts = questions.slice(indexOfFirstPost, indexOfLastPost);\r\n\r\n  const paginate = pageNum => this.setState({ currentPage: pageNum });\r\n\r\n  const nextPage = () => this.setState({ currentPage: currentPage + 1 });\r\n\r\n  const prevPage = () => this.setState({ currentPage: currentPage - 1 });\r\n\r\n\r\n    return(\r\n <div>\r\n   <MetaDecorator title=\"flipkart quiz answers today, guess what\" description=\"webserv4u.com provide daily trivia quiz \r\n   answers in first instance by playing these quiz answers correctly you must win awesome prize.\" />\r\n   <MetaDecorator title=\"flipkart Quiz time Guess what answers today\" description=\" Here all right\r\n    Flipkart Daily Trivia Answers Today 1 \r\n    are given. Start Playing Quiz by clicking on Start Quiz Button.\" />\r\n  \r\n  {currentPosts && Array.from(currentPosts).map((data)=> {\r\n   return (\r\n       <div> \r\n        <FetchedDataSummary data={data} />\r\n        \r\n           </div>\r\n   )\r\n  }) }\r\n   <QuizPagination postsPerPage={postsPerPage} totalPosts={questions.length} paginate={paginate} nextPage={nextPage} prevPage={prevPage} />\r\n   <MetaDecorator title=\"flipkart daily trivia Quiz answers today\" description=\"Flipkart Daily Trivia quiz answers. Win free vouchers and \r\n   super coins by answering all five questions. Get the latest Flipkart quiz answers\" />\r\n   <MetaDecorator title=\"flipkart daily trivia answers today\" description=\"Flipkart daily trivia quiz is available under the Games\r\n    zone section and comprises five questions that are based on current events and general ...\" />\r\n </div>\r\n    );\r\n}}\r\n\r\nexport default FetchedQuiz","D:\\webserv4u\\quizbeater\\src\\components\\dashboard\\fetchedDataSummary.js",[],"D:\\webserv4u\\quizbeater\\src\\layout\\footer.js",["564","565","566","567","568","569","570","571","572"],"D:\\webserv4u\\quizbeater\\src\\store\\reducers\\commentReducer.js",[],"D:\\webserv4u\\quizbeater\\src\\components\\comment\\fetchComment.js",["573"],"import React, { Component } from 'react';\r\nimport FetchCommentSummary from './fetchCommentSummary';\r\nimport firebase from '../../config/firebase'\r\nimport CommentPagination from '../pagination/commentPagination';\r\n\r\nclass FetchComment  extends Component {\r\n   \r\n    state={\r\n        comments:[],\r\n        currentPageC: 1,\r\n        postsPerPageC: 5,\r\n    }\r\n  \r\n\r\n    componentDidMount(){\r\n      const db = firebase.firestore();\r\n        db.collection(\"comments\").orderBy('createdAt','desc')\r\n        .onSnapshot(querySnapshot=> {\r\n          const comments = [];\r\n            querySnapshot.docs.map(doc => {\r\n              const data = doc.data();\r\n                comments.push(data);\r\n            });\r\n            this.setState({\r\n              comments:comments\r\n            })\r\n          \r\n        });\r\n      \r\n      }\r\n  \r\n\r\n\r\n    render() {\r\n        const {currentPageC, postsPerPageC, comments} = this.state;\r\n\r\n     // comment section\r\n  const indexOfLastPostC = currentPageC * postsPerPageC;\r\n  const indexOfFirstPostC = indexOfLastPostC - postsPerPageC;\r\n  const currentComments = comments.slice(indexOfFirstPostC, indexOfLastPostC);\r\n\r\n  const paginateC = pageNum => this.setState({ currentPageC: pageNum });\r\n\r\n  const nextPageC = () => this.setState({ currentPageC: currentPageC + 1 });\r\n\r\n  const prevPageC = () => this.setState({ currentPageC: currentPageC - 1 });\r\n\r\n\r\n    return(\r\n        <div>\r\n         { currentComments && Array.from(currentComments).map((data)=> {\r\n          return (\r\n              <div> \r\n               <FetchCommentSummary data={data} />\r\n                  </div>\r\n          )\r\n         }) }\r\n          <CommentPagination postsPerPage={postsPerPageC} totalPosts={comments.length} paginate={paginateC} nextPage={nextPageC} prevPage={prevPageC} />\r\n        </div>\r\n           );\r\n}  }\r\n\r\nexport default FetchComment","D:\\webserv4u\\quizbeater\\src\\components\\comment\\fetchCommentSummary.js",[],"D:\\webserv4u\\quizbeater\\src\\store\\actions\\commentAction.js",[],"D:\\webserv4u\\quizbeater\\src\\components\\comment\\comment.js",["574","575","576","577","578"],"import React from \"react\"\r\nimport { Card, Col, Container, Nav, Row } from \"react-bootstrap\"\r\nimport { Button, FormFeedback, Form, FormGroup, Label, Input } from 'reactstrap'\r\nimport {connect} from 'react-redux'\r\nimport './comment.css'\r\nimport { createComment } from \"../../store/actions/commentAction\"\r\n\r\nclass Comment extends React.Component {\r\n    \r\n  state = {\r\n    name: '',\r\n    comment: '',\r\n  }\r\n   \r\nhandleSubmit(e) {\r\n    e.preventDefault()\r\n    this.props.createComment(this.state);\r\n\r\n//     db.collection(\"postComment\").add({\r\n//       timestamp:Date.now(),\r\n//       name: this.state.name,\r\n//       comment: this.state.comment,\r\n//   })\r\n//   .then(function() {\r\n//       console.log(\"Document successfully written!\");\r\n//   })\r\n//   .catch(function(error) {\r\n//       console.error(\"Error writing document: \", error);\r\n//   });\r\n//     console.log(name,comment);\r\n     this.resetForm();\r\n     \r\n }\r\nresetForm() {\r\n    this.setState({\r\n      name: '',\r\n      comment: '',\r\n    })\r\n\r\n  }\r\nhandleChange = (param, e) => {\r\n    this.setState({ [param]: e.target.value })\r\n  }\r\n\r\nrender() {\r\n    return (\r\n      <div>\r\n  <Container   style={{\r\n      width: \"90%\",\r\n      paddingLeft: 20,\r\n      paddingRight: 10,\r\n      paddingTop: 30,\r\n      paddingBottom: 30,\r\n      border: \"3px solid lightGray\",\r\n    }} >\r\n       <Row >\r\n          <Form onSubmit={this.handleSubmit.bind(this)}>\r\n          <Row>\r\n<FormGroup controlId=\"formBasicName\" className=\"inputComment\">\r\n<Col xs=\"3\" sm=\"3\" md=\"3\" lg=\"3\">  <Label className=\"text-muted\">Name</Label></Col>\r\n<Col  md=\"auto\" xs=\"9\" sm=\"9\" md=\"9\" lg=\"9\">   <Input\r\n                type=\"text\"\r\n                name=\"name\"\r\n                value={this.state.name}\r\n                className=\"text-primary\"\r\n                onChange={this.handleChange.bind(this, 'name')}\r\n                placeholder=\"Name\"\r\n                required\r\n              /></Col>\r\n            </FormGroup></Row>\r\n            <Row>\r\n            <FormGroup controlId=\"formBasicEmail\" style={{width:\"300px\"}}>\r\n            <Col  xs=\"3\" sm=\"3\" md=\"3\" lg=\"3\">  <Label className=\"text-muted\">Comment</Label></Col> \r\n            <Col md=\"auto\" xs=\"9\" sm=\"9\" md=\"9\" lg=\"9\">  <Input\r\n                type=\"textarea\"\r\n                name=\"comment\"\r\n                value={this.state.comment}\r\n                className=\"text-primary\"\r\n                onChange={this.handleChange.bind(this, 'comment')}\r\n                placeholder=\"say something..\"\r\n                required\r\n              /></Col> \r\n            </FormGroup></Row>\r\n \r\n   <Button variant=\"primary\" type=\"submit\"  >\r\n     Post  \r\n    </Button>\r\n    <br></br>\r\n          </Form>\r\n          </Row></Container>\r\n        \r\n      </div>\r\n    )\r\n  }\r\n\r\n  }\r\n\r\n  const mapDispatchToProps = dispatch => {\r\n    return {\r\n      createComment: (comment) => dispatch(createComment(comment))\r\n    }\r\n  }\r\n  \r\nexport default connect(null,mapDispatchToProps)(Comment);","D:\\webserv4u\\quizbeater\\src\\components\\pagination\\quizPagination.js",["579","580","581"],"import React, { Component } from 'react'\r\n\r\n class QuizPagination extends Component {\r\n    render() {\r\n        const { postsPerPage, totalPosts, paginate, nextPage, prevPage } = this.props;\r\n       \r\n        const pageNumbers = [];\r\n\r\n        for (let i = 1; i <= Math.ceil(totalPosts / postsPerPage); i++) {\r\n            pageNumbers.push(i);\r\n        }\r\n\r\n        return (<>\r\n            <nav>\r\n                <ul className=\"pagination justify-content-center\">\r\n                    <li className=\"page-item\">\r\n                        <a className=\"page-link\" href=\"#\" onClick={() => prevPage()}>Prev</a>\r\n                    </li>\r\n                    {pageNumbers.map(num => (\r\n                        <li className=\"page-item\" key={num}>\r\n                            <a onClick={() => paginate(num)} href=\"#\" className=\"page-link\">{num}</a>\r\n                        </li>\r\n                    ))}\r\n                    <li className=\"page-item\">\r\n                        <a className=\"page-link\" href=\"#\" onClick={() => nextPage()}>Next</a>\r\n                    </li>\r\n                </ul>\r\n            </nav>\r\n       \r\n          \r\n       \r\n       </>\r\n      )\r\n    }\r\n}\r\n\r\nexport default QuizPagination;","D:\\webserv4u\\quizbeater\\src\\components\\pagination\\commentPagination.js",["582","583","584"],"import React, { Component } from 'react'\r\n\r\n class CommentPagination extends Component {\r\n    render() {\r\n        const { postsPerPage, totalPosts, paginate, nextPage, prevPage } = this.props;\r\n          \r\n        const pageNumbers = [];\r\n\r\n        for (let i = 1; i <= Math.ceil(totalPosts / postsPerPage); i++) {\r\n            pageNumbers.push(i);\r\n        }\r\n\r\n        return (<>\r\n            <nav>\r\n                <ul className=\"pagination justify-content-center\">\r\n                    <li className=\"page-item\">\r\n                        <a className=\"page-link\" href=\"#\" onClick={() => prevPage()}>Prev</a>\r\n                    </li>\r\n                    {pageNumbers.map(num => (\r\n                        <li className=\"page-item\" key={num}>\r\n                            <a onClick={() => paginate(num)} href=\"#\" className=\"page-link\">{num}</a>\r\n                        </li>\r\n                    ))}\r\n                    <li className=\"page-item\">\r\n                        <a className=\"page-link\" href=\"#\" onClick={() => nextPage()}>Next</a>\r\n                    </li>\r\n                </ul>\r\n            </nav>\r\n       \r\n          \r\n       \r\n       </>\r\n      )\r\n    }\r\n}\r\n\r\nexport default CommentPagination;","D:\\webserv4u\\quizbeater\\src\\pages\\about.js",["585","586","587","588","589","590","591","592"],"import React ,{useEffect, useState,useRef} from 'react';\r\nimport Mountain from '../images/mountain.jpg';\r\nimport me from '../images/img_bg.jpg';\r\nimport Typical from 'react-typical' \r\nimport { Carousel,Card,Container,Row,Col, InputGroup, FormControl, Form,Button } from 'react-bootstrap';\r\n import './about.css'\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport {\r\n faYoutube,\r\n  faTelegram,\r\n  faGithub,\r\n  faLinkedin\r\n\r\n} from \"@fortawesome/free-brands-svg-icons\";\r\nimport MetaDecorator from '../utils/metaDecorator'\r\nconst content = require('../dummyData/pages.json')\r\n\r\nfunction About() {\r\n\r\n\r\n  return (<div>\r\n    <MetaDecorator title={content.aboutTitle} description={content.aboutDescription} />\r\n  <Carousel >\r\n\r\n  <Carousel.Item  >\r\n  <img \r\n  width=\"100%\"\r\n  height=\"500\"\r\nsrc={Mountain} />\r\n    <Carousel.Caption>\r\n      \r\n    <b> <div> Welcome To</div></b>\r\n    <b> <b></b> <h5 >  <b>\r\n      <div style={{textShadow:\"1px 1px black\" }}><a href=\"https://WebServ4u.com\">  <Typical\r\n        steps={['', 1500, 'WebServ4u.com', 2600,]}\r\n        loop={Infinity}\r\n        wrapper=\"p\"\r\n        \r\n      />\r\n  </a></div> </b></h5></b>\r\n    </Carousel.Caption>\r\n  </Carousel.Item>\r\n\r\n</Carousel>\r\n\r\n<Card className=\"Acard\"> \r\n\r\n<p>\r\n  <b><div style={{textShadow:\"1px 1px black\" }}><h3>WELCOME ! </h3></div> </b>\r\n</p>\r\n<p><b> To a creative studio that loves to learn, collaborate and create.</b>  </p>\r\n<p> \r\n<i>\"The <b>mission</b> of our <b>blog </b> is to encourage a thoughtful life that leads to feelings of \r\nbelonging and hope in both myself and my readers by exposure to a variety of ideas,\r\nexperiences, and real-life stories . <b>Laughter</b> is always <b>Welcome</b>\".</i>\r\n</p>\r\n<p>We wite because,feel compelled to write. Our blog is for like-interested people\r\n  who want to live a mindful, introspective life as well the \r\n  <b> occasional laugh. </b> </p>\r\n<br></br>\r\n<br></br><br></br>\r\n<h4 style={{textShadow:\"1px 1px black\" }}> About me</h4>\r\n<p style={{textShadow:\".5px .5px black\" }}> Hi! I'm <b>Satyendra</b>,  My father's name is Mr. <b>Ganesh Singh</b>, from\r\n Chitrakoot,UttarPradesh India.\r\n  I'm currently pursuing Bachelor of Technology from <b>Computer\r\n     Science and Enginnering </b> from JK institue of applied physics and Technology university of\r\n     allahabad, Prayagraj UttarPradesh. \r\n  I'm a passionate <b> Developer</b> in <b>Web</b> as well as in <b>Mobile App </b>. and crazy about \r\n  exploring new technology. </p>\r\n  <p style={{fontFamily:\"courier\",\r\n    textIndent:\"10px\"}}> This is basically a blogging website in which we will provide answers of each Quiz that \r\n    will be organising by Flipkart Game Session.</p>\r\n</Card>\r\n\r\n<Card className=\"outer-card\">\r\n<b><h2><div style={{textShadow:\"1px 1px black\" }}>Meet Our Teem</div>  </h2></b>\r\n<br></br><br></br>\r\n  <Row>\r\n<Col md=\"6\" lg=\"6\" xl=\"6\">\r\n<div className=\"container\"><Card   style={{ width: '18rem' }}>\r\n  <Card.Img\r\n  height=\"200px\"\r\n  variant=\"top\" src={me} />\r\n  <Card.Body className=\"bg-light\">\r\n    <Card.Title  ><b> \r\n      <div style={{textShadow:\"1px 1px black\" }}>Satyendra Singh</div></b></Card.Title>\r\n    <Card.Subtitle>\r\n      Developer | Managing Director </Card.Subtitle><br></br>\r\n    <Card.Text><div style={{fontFamily:\"courier\",\r\n    textIndent:\"10px\"\r\n \r\n  }}>\r\n      \" A collaborative explosion of creative fueled by a community of amazing\r\n      Developers and designers. So come be our friend and \r\n      see if we mean it.\" \r\n      \r\n      </div>\r\n    </Card.Text>\r\n  </Card.Body>\r\n</Card></div>\r\n</Col>\r\n<Col md=\"6\" lg=\"6\" xl=\"6\">\r\n\r\n<div className=\"container\"> <Card  style={{ width: '18rem' }}>\r\n  <Card.Img\r\n   height=\"230px\"\r\n  variant=\"top\" src=\"https://trustyathartha.in/static/media/r.acd6f040.jpg\" />\r\n   <Card.Body className=\"bg-light\">\r\n    <Card.Title  ><b> \r\n      <div style={{textShadow:\"1px 1px black\" }}>Raj Patel</div></b></Card.Title>\r\n    <Card.Subtitle>\r\n      Developer | Freelancer | Project Manager </Card.Subtitle><br></br>\r\n    <Card.Text><div style={{fontFamily:\"courier\",\r\n    textIndent:\"10px\"\r\n \r\n  }}>\r\n      \" Complete IT solutions Websites | Mobile Apps \r\n      | College Projects Visit my official website \r\n      <a href=\"https://mywebians.com\"> MyWebians.com </a>\r\n      \"</div>\r\n    </Card.Text>\r\n    \r\n  </Card.Body>\r\n</Card></div>\r\n\r\n</Col>\r\n\r\n\r\n  </Row>\r\n\r\n\r\n</Card>\r\n<br></br>\r\n\r\n<Card className=\"outer-card\">\r\n  <Card.Title as=\"h2\"><h2><div style={{textShadow:\"1px 1px black\" }}> Our Mission</div> </h2> </Card.Title>\r\n<Row>\r\n\r\n<Col sm=\"6\" md=\"6\" lg=\"4\" xl=\"4\" >\r\n<Card className=\"Acard misson-card\" >\r\n  <Card.Body>\r\n    <Card.Title><div style={{textShadow:\"1px 1px black\" }}> Flexibility</div> </Card.Title>\r\n    \r\n    <Card.Text><div style={{fontFamily:\"courier\",\r\n    textIndent:\"10px\"\r\n \r\n  }}>\r\n Build tools that can be leveraged across a wide range of projects and ease.\r\n      \r\n      </div>\r\n    </Card.Text>\r\n  </Card.Body>\r\n</Card>\r\n</Col>\r\n<Col sm=\"6\" md=\"6\" lg=\"4\" xl=\"4\">\r\n<Card className=\"Acard misson-card\" >\r\n  <Card.Body>\r\n    <Card.Title><div style={{textShadow:\"1px 1px black\" }}> Support</div> </Card.Title>\r\n    \r\n    <Card.Text><div style={{fontFamily:\"courier\",\r\n    textIndent:\"10px\"\r\n \r\n  }}>\r\n      Deliver excellent support through training, detailed docs\r\n      and community\r\n      \r\n      </div>\r\n    </Card.Text>\r\n  </Card.Body>\r\n</Card>\r\n</Col>\r\n<Col sm=\"6\" md=\"6\" lg=\"4\" xl=\"4\">\r\n<Card className=\"Acard misson-card\" >\r\n  <Card.Body>\r\n    <Card.Title><div style={{textShadow:\"1px 1px black\" }}> creativity</div> </Card.Title>\r\n    \r\n    <Card.Text><div style={{fontFamily:\"courier\",\r\n    textIndent:\"10px\"\r\n \r\n  }}>\r\n     Empower creative expression in a fun way  by making our tools intuitive and highly \r\n     capable. \r\n      \r\n      </div>\r\n    </Card.Text>\r\n  </Card.Body>\r\n</Card>\r\n</Col>\r\n\r\n\r\n</Row>\r\n<Row>\r\n\r\n<Col sm=\"6\" md=\"6\" lg=\"4\" xl=\"4\" >\r\n<Card className=\"Acard misson-card\" >\r\n  <Card.Body>\r\n    <Card.Title><div style={{textShadow:\"1px 1px black\" }}> Integrity!</div> </Card.Title>\r\n    \r\n    <Card.Text><div style={{fontFamily:\"courier\",\r\n    textIndent:\"10px\"\r\n \r\n  }}>\r\n    Maintain reputation of integrityn and reliability and focused around our users requirement.\r\n      \r\n      </div>\r\n    </Card.Text>\r\n  </Card.Body>\r\n</Card>\r\n</Col>\r\n<Col sm=\"6\" md=\"6\" lg=\"4\" xl=\"4\">\r\n<Card className=\"Acard misson-card\" >\r\n  <Card.Body>\r\n    <Card.Title><div style={{textShadow:\"1px 1px black\" }}> Stability</div> </Card.Title>\r\n    \r\n    <Card.Text><div style={{fontFamily:\"courier\",\r\n    textIndent:\"10px\"\r\n \r\n  }}>\r\n      Avoid the common frailties of open\r\n      source projects while also keeping the tools very accesible.\r\n      \r\n      </div>\r\n    </Card.Text>\r\n  </Card.Body>\r\n</Card>\r\n</Col>\r\n<Col sm=\"6\" md=\"6\" lg=\"4\" xl=\"4\">\r\n<Card className=\"Acard misson-card\" >\r\n  <Card.Body>\r\n    <Card.Title><div style={{textShadow:\"1px 1px black\" }}> Innovation</div> </Card.Title>\r\n    \r\n    <Card.Text><div style={{fontFamily:\"courier\",\r\n    textIndent:\"10px\"\r\n \r\n  }}>\r\n     Try to create world class-tools that standup to the most rigorous\r\n     implementation.\r\n      \r\n      </div>\r\n    </Card.Text>\r\n  </Card.Body>\r\n</Card>\r\n</Col>\r\n\r\n\r\n</Row>\r\n</Card>\r\n\r\n<Card className=\"outer-card\">\r\n  <Card.Title as=\"h3\"><div style={{textShadow:\"1px 1px black\" }}> Contact Info  </div> </Card.Title>\r\n<Row width=\"100%\">\r\n\r\n<Col  md=\"9\" lg=\"10\" xl=\"10\" >\r\n<Card className=\"Acard misson-card\" >\r\n  <Card.Body>\r\n    <Card.Title><div style={{textShadow:\"1px 1px black\" }}>Join the Ideaware Team! </div></Card.Title>\r\n    \r\n    <Card.Text>\r\n      Subscribe and get our latest news update and many more.\r\n    </Card.Text>\r\n  </Card.Body>\r\n  <Form>\r\n  <Form.Group controlId=\"formBasicEmail\">\r\n    <Form.Control type=\"email\" placeholder=\"Enter email\"  required />\r\n    <Form.Text className=\"text-muted\">\r\n      We'll never share your email with anyone else.\r\n    </Form.Text>\r\n  </Form.Group>\r\n  <Button variant=\"primary\" type=\"submit\">\r\n    Subscribe\r\n  </Button>\r\n</Form>\r\n</Card>\r\n</Col>\r\n\r\n\r\n</Row>\r\n\r\n<Row width=\"100%\">\r\n\r\n<Col  md=\"9\" lg=\"10\" xl=\"10\" >\r\n<Card className=\"Acard misson-card\"  >\r\n  <Card.Body>\r\n    <Card.Title><div style={{textShadow:\"1px 1px black\" }}>Stay in Touch! </div></Card.Title>\r\n    \r\n  \r\n  </Card.Body>\r\n  <a  href=\"https://t.me/FlipkartDailyQuiz\" ><Button variant=\"info\">\r\n  <FontAwesomeIcon icon={faTelegram} size=\"4x\"  /> &nbsp;<b> Join our Telegram Group</b>  </ Button>\r\n</a>\r\n<br></br>\r\n<a  href=\"https://www.linkedin.com/in/satyendra-singh-98985a196/\" ><Button variant=\"info\">\r\n  <FontAwesomeIcon icon={faLinkedin} size=\"4x\"  />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &nbsp;&nbsp;<b> Follow on LinkedIn  </b>&nbsp;&nbsp;&nbsp;&nbsp; &nbsp;&nbsp; </ Button>\r\n</a>\r\n<br></br>\r\n<a  href=\"\" ><Button variant=\"danger\">\r\n  <FontAwesomeIcon icon={faYoutube} size=\"4x\"  /> &nbsp;<b> Join our Youtube channel</b>  </ Button>\r\n</a><br></br>\r\n<a  href=\"https://github.com/satyendrasingh8\" ><Button variant=\"dark\">\r\n  <FontAwesomeIcon icon={faGithub} size=\"4x\"  />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &nbsp;&nbsp;<b> Follow on Github  </b>&nbsp;&nbsp;&nbsp;&nbsp; &nbsp;&nbsp; </ Button>\r\n</a>\r\n\r\n</Card>\r\n</Col>\r\n\r\n\r\n</Row>\r\n </Card>\r\n\r\n\r\n\r\n   </div>\r\n  );\r\n}\r\n\r\n\r\nexport default About;\r\n","D:\\webserv4u\\quizbeater\\src\\pages\\faq.js",[],"D:\\webserv4u\\quizbeater\\src\\pages\\contact.js",["593","594"],"import React from \"react\";\r\nimport emailjs from 'emailjs-com';\r\nimport { Button,Card, Form } from 'reactstrap'\r\nimport MetaDecorator from '../utils/metaDecorator'\r\nconst content = require('../dummyData/pages.json')\r\n\r\n\r\nfunction Contact() {\r\n  function sendEmail(e){\r\n    e.preventDefault();\r\n\r\n    emailjs.sendForm('gmail', 'template_3n1l1az', e.target, 'user_L2Z2ywkryGueLdp5ICquh')\r\n      .then((result) => {\r\n          alert(\"success\",result.text);\r\n      }, (error) => {\r\n          alert(\"error\",error.text);\r\n      });\r\n    e.target.reset();\r\n   }\r\n  return (\r\n    <div>\r\n      <MetaDecorator title={content.contactTitle} description={content.contactDesc} />\r\n   <h1>Contact us </h1>\r\n   <Card>\r\n        <section className=\"colorlib-about\" data-section=\"contact\">\r\n        <div>\r\n        \r\n<div className=\"container\" style={{justifyContent:  'center',width:'80%',backgroundColor:''}} >\r\n    <form className=\"contact-form\" onSubmit={{sendEmail}}>\r\n<div className=\"row pt-5 mx-auto\">\r\n    <div className=\"col-8 form-group pt-2 mx-auto\" >\r\n   <input type=\"text\" className=\"form-control\" placeholder=\"Name\" name=\"name\" />\r\n    </div>\r\n\r\n    <div className=\"col-8 form-group pt-2 mx-auto\" >\r\n   <input type=\"email\" className=\"form-control\" placeholder=\"Email Address\" name=\"email\" />\r\n    </div>\r\n\r\n    <div className=\"col-8 form-group pt-2 mx-auto\" >\r\n   <input type=\"text\" className=\"form-control\" placeholder=\"Subject\" name=\"subject\" />\r\n    </div>\r\n\r\n    <div className=\"col-8 form-group pt-2 mx-auto\" >\r\n   <textarea className=\"form-control\" id=\"\" cols=\"30\" rows=\"8\" placeholder=\"Your message\" name=\"message\" />\r\n    </div>\r\n\r\n    <div className=\"col-8 pt-3 mx-auto\">\r\n   <input type=\"submit\" className=\"btn btn-info\" value=\"Send Message\" />\r\n    </div>\r\n\r\n  \r\n</div>\r\n\r\n    </form>\r\n    </div>\r\n\r\n</div>\r\n    \r\n\r\n    \r\n       </section>       </Card>\r\n       <br></br>\r\n   </div>\r\n  );\r\n}\r\n\r\nexport default Contact;\r\n","D:\\webserv4u\\quizbeater\\src\\pages\\disclaimer.js",[],"D:\\webserv4u\\quizbeater\\src\\pages\\privacyPolicy.js",[],"D:\\webserv4u\\quizbeater\\src\\pages\\termAndCondition.js",[],"D:\\webserv4u\\quizbeater\\src\\pages\\notFound.js",[],"D:\\webserv4u\\quizbeater\\src\\utils\\metaDecorator.js",[],"D:\\webserv4u\\quizbeater\\src\\components\\dashboard\\triviaQuiz.js",["595"],"import React, { Component } from 'react';\r\nimport { Card } from 'react-bootstrap';\r\nimport HowToPlay from './howToPlay';\r\nimport QuizDescription from './quizDes';\r\nimport QuizHead from './quizHead';\r\nimport SlidingImage from './slidingImage';\r\nimport FetchedQuiz from './fetchedData';\r\nimport FetchComment from '../comment/fetchComment'\r\nimport Comment from '../comment/comment'\r\nimport GameType from './homeDashboard/gameType';\r\n\r\nconst TriviaQuiz = () => {\r\n\r\n\r\n \r\n    return(\r\n    <div>\r\n   <Card >\r\n  <QuizHead />\r\n  <SlidingImage />\r\n  <QuizDescription />\r\n <HowToPlay />\r\n\r\n <FetchedQuiz />\r\n <GameType />\r\n <FetchComment /> \r\n          <Comment />\r\n\r\n   </Card>\r\n\r\n    </div>\r\n    )\r\n}\r\n\r\n\r\n\r\n\r\n export default TriviaQuiz;\r\n\r\n","D:\\webserv4u\\quizbeater\\src\\components\\dashboard\\homeDashboard\\dashboardHeader.js",[],"D:\\webserv4u\\quizbeater\\src\\components\\dashboard\\homeDashboard\\gameType.js",["596","597","598","599"],"import React from 'react'\r\nimport { Button, Card, Col, Container, ListGroup, Row } from 'react-bootstrap';\r\n\r\n\r\nconst GameType = () => {\r\n\r\n    return (\r\n        <div>\r\n         \r\n      <Card> \r\n      <Card.Header  style={{textShadow:\"1px 1px black\" }}><h3>List of Flipkart Daily Quizs</h3></Card.Header>\r\n  <ListGroup variant=\"flush\">\r\n  <a href='/flipkart-daily-trivia-quiz'>  <ListGroup.Item>Flipkart Daily Trivia Quiz Answers</ListGroup.Item></a>\r\n  <a href='/flipkart-fake-or-not-quiz'> <ListGroup.Item>Flipkart Fake or Not? Answers</ListGroup.Item></a>\r\n   <a href=\"/flipkart-kya-bolti-public-quiz\"> <ListGroup.Item>Flipkart Kya Bolti Public? Answers</ListGroup.Item></a>\r\n   <a href=\"/flipkart-daam-sahi-hai-quiz\"><ListGroup.Item>Flipkart Daam Sahi Hai? Quiz answers</ListGroup.Item></a>\r\n   <a href=\"/flipkart-for-your-infromation-quiz\"> <ListGroup.Item>Flipkart For Your Information(FYI) Quiz Answers</ListGroup.Item></a>\r\n   <a href='/flipkart-kaun-who-did-it-quiz'>   <ListGroup.Item>Flipkart Kaun? Who Did It? Quiz Answers</ListGroup.Item></a>\r\n  </ListGroup>\r\n      </Card>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default GameType;","D:\\webserv4u\\quizbeater\\src\\components\\dashboard\\homeDashboard\\dashboardGallery.js",["600","601","602","603","604"],"import React from 'react'\r\nimport { Button, Card, CardGroup, Col, Container, ListGroup, Nav, Row } from 'react-bootstrap';\r\n\r\n\r\nconst DashboardGallery = () => {\r\n\r\n    return (\r\n        <div>\r\n         \r\n      <Card> \r\n      <CardGroup style={{margin:\"auto\"}}>\r\n        <a href='/flipkart-daily-trivia-quiz'> \r\n        <Card border=\"dark\" style={{maxWidth:\"19rem\",margin:\"30px\"}}>\r\n  <Card.Img variant=\"top\" src={process.env.PUBLIC_URL + \"/images/DailyTrivia1.png\"} />\r\n  <Card.Body>\r\n    <Card.Title >Flipkart Daily Trivia Quiz Answers </Card.Title>\r\n  \r\n    <Button variant=\"primary\">Answer</Button>\r\n  </Card.Body>\r\n</Card>\r\n         </a>\r\n         <a href='/flipkart-fake-or-not-quiz'> \r\n<Card border=\"dark\" style={{maxWidth:\"19rem\",margin:\"30px\"}}>\r\n  <Card.Img variant=\"top\" src={process.env.PUBLIC_URL + \"/images/1.png\"} />\r\n  <Card.Body>\r\n    <Card.Title>Flipkart Fake Or Not Quiz? Answers</Card.Title>\r\n   \r\n    <Button variant=\"primary\">Answer</Button>\r\n  </Card.Body>\r\n</Card></a>\r\n<a href='/flipkart-kya-bolti-public-quiz'> \r\n<Card border=\"dark\" style={{maxWidth:\"19rem\",margin:\"30px\"}} >\r\n  <Card.Img variant=\"top\" src={process.env.PUBLIC_URL + \"/images/2.png\"} />\r\n  <Card.Body>\r\n    <Card.Title>Flipkart Kya Bolti Public Quiz? Answers</Card.Title>\r\n    \r\n    <Button variant=\"primary\">Answer</Button>\r\n  </Card.Body>\r\n</Card></a>\r\n</CardGroup>\r\n<CardGroup style={{margin:\"auto\"}}>\r\n        <a href='/flipkart-daam-sahi-hai-quiz'> \r\n        <Card border=\"dark\" style={{maxWidth:\"19rem\",margin:\"30px\"}}>\r\n  <Card.Img variant=\"top\" src={process.env.PUBLIC_URL + \"/images/3.png\"} />\r\n  <Card.Body>\r\n    <Card.Title >Flipkart Daam Sahi Hai? Quiz Answers </Card.Title>\r\n  \r\n    <Button variant=\"primary\">Answer</Button>\r\n  </Card.Body>\r\n</Card>\r\n         </a>\r\n         <a href='/flipkart-for-your-infromation-quiz'> \r\n<Card border=\"dark\" style={{maxWidth:\"19rem\",margin:\"30px\"}}>\r\n  <Card.Img variant=\"top\" src={process.env.PUBLIC_URL + \"/images/4.png\"} />\r\n  <Card.Body>\r\n    <Card.Title>Flipkart For Your Information(FYI) Quiz Answers</Card.Title>\r\n   \r\n    <Button variant=\"primary\">Answer</Button>\r\n  </Card.Body>\r\n</Card></a>\r\n<a href='/flipkart-kaun-who-did-it-quiz'> \r\n<Card border=\"dark\" style={{maxWidth:\"19rem\",margin:\"30px\"}} >\r\n  <Card.Img variant=\"top\" src={process.env.PUBLIC_URL + \"/images/5.png\"} />\r\n  <Card.Body>\r\n    <Card.Title> Flipkart Kaun? Who did it? Quiz Answers</Card.Title>\r\n    \r\n    <Button variant=\"primary\">Answer</Button>\r\n  </Card.Body>\r\n</Card></a>\r\n</CardGroup>      </Card>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default DashboardGallery;","D:\\webserv4u\\quizbeater\\src\\components\\fakeOrNot\\fakeOrNot.js",["605"],"import React, { Component } from 'react';\r\nimport { Card } from 'react-bootstrap';\r\nimport HowToPlay from './howToPlay';\r\nimport QuizDescription from './quizDesc';\r\nimport QuizHead from './quizHead';\r\nimport SlidingImage from './slidingImage';\r\n\r\nimport FetchComment from '../comment/fetchComment'\r\nimport Comment from '../comment/comment'\r\nimport FetchFakeOrNot from './fetchFakeOrNot';\r\nimport GameType from '../dashboard/homeDashboard/gameType';\r\n\r\nconst FakeOrNot = () => {\r\n\r\n\r\n \r\n    return(\r\n    <div>\r\n   <Card >\r\n  <QuizHead />\r\n  <SlidingImage />\r\n  <QuizDescription />\r\n <HowToPlay />\r\n<FetchFakeOrNot />\r\n<GameType />\r\n  <FetchComment />\r\n  <Comment />\r\n \r\n   </Card>\r\n\r\n    </div>\r\n    )\r\n}\r\n\r\n\r\n\r\n\r\n export default FakeOrNot;\r\n","D:\\webserv4u\\quizbeater\\src\\components\\fakeOrNot\\howToPlay.js",[],"D:\\webserv4u\\quizbeater\\src\\components\\fakeOrNot\\quizHead.js",[],"D:\\webserv4u\\quizbeater\\src\\components\\fakeOrNot\\slidingImage.js",[],"D:\\webserv4u\\quizbeater\\src\\components\\fakeOrNot\\quizDesc.js",["606"],"import React from 'react';\r\nimport { Card, Image } from 'react-bootstrap';\r\n\r\n\r\nconst QuizDescription = () =>{\r\n    return (\r\n        <div>\r\n            \r\n<Card.Text><br></br>\r\n      Here you have to get quick live updates for each <b>Fake or Not?</b> Quiz Questions \r\n      everyday at 12:00am.\r\n      By answering these Quiz Questions you can win many gift vouchers,coupons,gifts,super coins etc.\r\n      &nbsp; <br></br> <Image src=\"https://seeklogo.com/images/F/flipkart-logo-3F33927DAA-seeklogo.com.png\"\r\n      width={60}\r\n      height={60}\r\n      roundedCircle />\r\n      <a href=\"https://www.flipkart.com/\">&nbsp;<b>Flipkart</b> </a>\r\n      <b><i>daily <b>Fake or Not?</b> Quiz is Back.</i>  </b>Daily <b>Fake or Not?</b> Quiz is\r\n       generally asks\r\n       General Knowledge based Questions.Flipkart <b>Fake or Not? </b> Quiz is started at 12:00Am and \r\n       ends at 11:59am.\r\n       <b><i>QuizBeater</i></b> provide these answers at 12:00am daily.By answering them you have to\r\n        get some relevant prize,coupons,gift or super coins  by regular participation in daily quiz.\r\n        <b>Make sure you have to follow our official <a href=\"#\"><b><b>Telegram</b></b> </a> channel to get daily \r\n          imediate answers for each Quiz  </b>\r\n    </Card.Text>\r\n    <br></br> \r\n        </div>\r\n    )\r\n}\r\nexport default QuizDescription;","D:\\webserv4u\\quizbeater\\src\\components\\fakeOrNot\\createPost\\createFakeOrNot.js",[],"D:\\webserv4u\\quizbeater\\src\\components\\fakeOrNot\\createPost\\selectedPage.js",["607","608","609","610"],"import React from 'react';\r\nimport Q1 from './Q1';\r\nimport Q2 from './Q2';\r\nimport Q3 from './Q3';\r\nimport Q4 from './Q4';\r\nimport Q5 from './Q5';\r\n\r\nconst SelectedPage = (props) => {\r\n    const selectedValue = props.selectedValue;\r\n\r\n    \r\n      if(selectedValue==1){\r\n          return <Q1 />;\r\n      }else if(selectedValue==2){\r\n          return <Q2 />;\r\n      }\r\n      else if(selectedValue==3){\r\n        return <Q3 />;\r\n    }\r\n    else if(selectedValue==4){\r\n        return <Q4 />;\r\n    }\r\n      else{\r\n          return <Q5 />\r\n      }\r\n      \r\n}\r\n\r\n\r\nexport default (SelectedPage);\r\n","D:\\webserv4u\\quizbeater\\src\\components\\fakeOrNot\\createPost\\Q1.js",[],"D:\\webserv4u\\quizbeater\\src\\components\\fakeOrNot\\createPost\\Q2.js",["611"],"import React, { Component } from 'react'\r\nimport { Button, FormFeedback, Form, FormGroup, Label, Input } from 'reactstrap'\r\nimport { connect } from 'react-redux'\r\nimport { fakeOrNot } from \"../../../store/actions/projectAction\"\r\nclass Q2 extends Component {\r\n  state = {\r\n    quizType:'',\r\n    Qus1: '',\r\n    Ans1: '',\r\n    Qus2: '',\r\n    Ans2: '',\r\n  }\r\nhandleSubmit(e) {\r\n    e.preventDefault()\r\n    this.props.fakeOrNot(this.state);\r\n     this.resetForm()\r\n }\r\nresetForm() {\r\n    this.setState({\r\n      quizType:'',\r\n      Qus1: '',\r\n      Ans1: '',\r\n       Qus2: '',\r\n       Ans2: '',\r\n    })\r\n  }\r\nhandleChange = (param, e) => {\r\n    this.setState({ [param]: e.target.value })\r\n  }\r\nrender() {\r\n    return (\r\n      <>\r\n        \r\n          <Form onSubmit={this.handleSubmit.bind(this)}>\r\n            \r\n          <FormGroup controlId=\"formBasicquizType\">\r\n              <Label className=\"text-muted\">About Quiz</Label>\r\n              <Input\r\n                type=\"text\"\r\n                name=\"quizType\"\r\n                value={this.state.quizType}\r\n                className=\"text-primary\"\r\n                onChange={this.handleChange.bind(this, 'quizType')}\r\n                placeholder=\"About Quiz\"\r\n                required\r\n              />\r\n            </FormGroup>\r\n\r\n<FormGroup controlId=\"formBasicName\">\r\n              <Label className=\"text-muted\">Qus.1</Label>\r\n              <Input\r\n                type=\"text\"\r\n                name=\"Qus1\"\r\n                value={this.state.Qus1}\r\n                className=\"text-primary\"\r\n                onChange={this.handleChange.bind(this, 'Qus1')}\r\n                placeholder=\"Question1\"\r\n                required\r\n              />\r\n            </FormGroup>\r\n            <FormGroup controlId=\"formBasicEmail\">\r\n              <Label className=\"text-muted\">Ans.1</Label>\r\n              <Input\r\n                type=\"text\"\r\n                name=\"Ans1\"\r\n                value={this.state.Ans1}\r\n                className=\"text-primary\"\r\n                onChange={this.handleChange.bind(this, 'Ans1')}\r\n                placeholder=\"Answer 1\"\r\n                required\r\n              />\r\n            </FormGroup>\r\n<FormGroup controlId=\"formBasicSubject\">\r\n              <Label className=\"text-muted\">Qus.2</Label>\r\n              <Input\r\n                type=\"text\"\r\n                name=\"Qus2\"\r\n                className=\"text-primary\"\r\n                value={this.state.Qus2}\r\n                onChange={this.handleChange.bind(this, 'Qus2')}\r\n                placeholder=\"Question 2\"\r\n                required\r\n              />\r\n            </FormGroup>\r\n<FormGroup controlId=\"formBasicMessage\">\r\n              <Label className=\"text-muted\">Ans.2</Label>\r\n              <Input\r\n                type=\"text\"\r\n                name=\"Ans2\"\r\n                className=\"text-primary\"\r\n                value={this.state.Ans2}\r\n                placeholder=\"Answer 2\"\r\n                required\r\n                onChange={this.handleChange.bind(this, 'Ans2')}\r\n              />\r\n            </FormGroup>\r\n<Button variant=\"primary\" type=\"submit\">\r\n              Submit\r\n            </Button>\r\n          </Form>\r\n        \r\n      </>\r\n    )\r\n  }\r\n}\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n    return {\r\n      fakeOrNot: (project) => dispatch(fakeOrNot(project))\r\n    }\r\n  }\r\n\r\nexport default connect(null,mapDispatchToProps)(Q2);","D:\\webserv4u\\quizbeater\\src\\components\\fakeOrNot\\createPost\\Q3.js",["612"],"import React from \"react\"\r\nimport { Button, FormFeedback, Form, FormGroup, Label, Input } from 'reactstrap'\r\nimport { connect } from 'react-redux'\r\nimport { fakeOrNot } from \"../../../store/actions/projectAction\"\r\n\r\nclass Q3 extends React.Component {\r\n    \r\n  state = {\r\n    quizType:'',\r\n    Qus1: '',\r\n    Ans1: '',\r\n    Qus2: '',\r\n    Ans2: '',\r\n    Qus3: '',\r\n    Ans3: '',\r\n\r\n  }\r\nhandleSubmit(e) {\r\n    e.preventDefault()\r\n    this.props.fakeOrNot(this.state);\r\n     this.resetForm()\r\n }\r\nresetForm() {\r\n    this.setState({\r\n      quizType:'',\r\n      Qus1: '',\r\n      Ans1: '',\r\n       Qus2: '',\r\n       Ans2: '',\r\n       Qus3: '',\r\n       Ans3: '',\r\n    })\r\n  }\r\nhandleChange = (param, e) => {\r\n    this.setState({ [param]: e.target.value })\r\n  }\r\nrender() {\r\n    return (\r\n      <>\r\n        \r\n          <Form onSubmit={this.handleSubmit.bind(this)}>\r\n          <FormGroup controlId=\"formBasicquizType\">\r\n              <Label className=\"text-muted\">About Quiz</Label>\r\n              <Input\r\n                type=\"text\"\r\n                name=\"quizType\"\r\n                value={this.state.quizType}\r\n                className=\"text-primary\"\r\n                onChange={this.handleChange.bind(this, 'quizType')}\r\n                placeholder=\"About Quiz\"\r\n                required\r\n              />\r\n            </FormGroup>\r\n<FormGroup controlId=\"formBasicName\">\r\n              <Label className=\"text-muted\">Qus.1</Label>\r\n              <Input\r\n                type=\"text\"\r\n                name=\"Qus1\"\r\n                value={this.state.Qus1}\r\n                className=\"text-primary\"\r\n                onChange={this.handleChange.bind(this, 'Qus1')}\r\n                placeholder=\"Question1\"\r\n                required\r\n              />\r\n            </FormGroup>\r\n            <FormGroup controlId=\"formBasicEmail\">\r\n              <Label className=\"text-muted\">Ans.1</Label>\r\n              <Input\r\n                type=\"text\"\r\n                name=\"Ans1\"\r\n                value={this.state.Ans1}\r\n                className=\"text-primary\"\r\n                onChange={this.handleChange.bind(this, 'Ans1')}\r\n                placeholder=\"Answer 1\"\r\n                required\r\n              />\r\n            </FormGroup>\r\n<FormGroup controlId=\"formBasicSubject\">\r\n              <Label className=\"text-muted\">Qus.2</Label>\r\n              <Input\r\n                type=\"text\"\r\n                name=\"Qus2\"\r\n                className=\"text-primary\"\r\n                value={this.state.Qus2}\r\n                onChange={this.handleChange.bind(this, 'Qus2')}\r\n                placeholder=\"Question 2\"\r\n                required\r\n              />\r\n            </FormGroup>\r\n<FormGroup controlId=\"formBasicMessage\">\r\n              <Label className=\"text-muted\">Ans.2</Label>\r\n              <Input\r\n                type=\"text\"\r\n                name=\"message\"\r\n                className=\"text-primary\"\r\n                value={this.state.Ans2}\r\n                placeholder=\"Answer 2\"\r\n                required\r\n                onChange={this.handleChange.bind(this, 'Ans2')}\r\n              />\r\n            </FormGroup>\r\n            <FormGroup controlId=\"formBasicSubject1\">\r\n              <Label className=\"text-muted\">Qus.3</Label>\r\n              <Input\r\n                type=\"text\"\r\n                name=\"Qus3\"\r\n                className=\"text-primary\"\r\n                value={this.state.Qus3}\r\n                onChange={this.handleChange.bind(this, 'Qus3')}\r\n                placeholder=\"Question 3\"\r\n                required\r\n              />\r\n            </FormGroup>\r\n<FormGroup controlId=\"formBasicMessage1\">\r\n              <Label className=\"text-muted\">Ans.3</Label>\r\n              <Input\r\n                type=\"text\"\r\n                name=\"Ans3\"\r\n                className=\"text-primary\"\r\n                value={this.state.Ans3}\r\n                placeholder=\"Answer 3\"\r\n                required\r\n                onChange={this.handleChange.bind(this, 'Ans3')}\r\n              />\r\n            </FormGroup>\r\n<Button variant=\"primary\" type=\"submit\">\r\n              Submit\r\n            </Button>\r\n          </Form>\r\n        \r\n      </>\r\n    )\r\n  }\r\n  }\r\n  \r\n\r\n  const mapDispatchToProps = dispatch => {\r\n    return {\r\n      fakeOrNot: (project) => dispatch(fakeOrNot(project))\r\n    }\r\n  }\r\n\r\nexport default connect(null,mapDispatchToProps)(Q3);","D:\\webserv4u\\quizbeater\\src\\components\\fakeOrNot\\createPost\\Q4.js",["613"],"import React from \"react\"\r\nimport { Button, FormFeedback, Form, FormGroup, Label, Input } from 'reactstrap'\r\nimport { connect } from 'react-redux'\r\nimport { fakeOrNot } from \"../../../store/actions/projectAction\"\r\n\r\nclass Q4 extends React.Component {\r\n    \r\n  state = {\r\n    quizType:'',\r\n    Qus1: '',\r\n    Ans1: '',\r\n    Qus2: '',\r\n    Ans2: '',\r\n    Qus3: '',\r\n    Ans3: '',\r\n    Qus4: '',\r\n    Ans4: '',\r\n\r\n  }\r\nhandleSubmit(e) {\r\n    e.preventDefault()\r\n    this.props.fakeOrNot(this.state);\r\n     this.resetForm()\r\n }\r\nresetForm() {\r\n    this.setState({\r\n      quizType:'',\r\n      Qus1: '',\r\n      Ans1: '',\r\n       Qus2: '',\r\n       Ans2: '',\r\n       Qus3: '',\r\n       Ans3: '',\r\n       Qus4: '',\r\n       Ans4: '',\r\n    })\r\n  }\r\nhandleChange = (param, e) => {\r\n    this.setState({ [param]: e.target.value })\r\n  }\r\nrender() {\r\n    return (\r\n      <>\r\n        \r\n          <Form onSubmit={this.handleSubmit.bind(this)}>\r\n          <FormGroup controlId=\"formBasicquizType\">\r\n              <Label className=\"text-muted\">About Quiz</Label>\r\n              <Input\r\n                type=\"text\"\r\n                name=\"quizType\"\r\n                value={this.state.quizType}\r\n                className=\"text-primary\"\r\n                onChange={this.handleChange.bind(this, 'quizType')}\r\n                placeholder=\"About Quiz\"\r\n                required\r\n              />\r\n            </FormGroup>\r\n<FormGroup controlId=\"formBasicName\">\r\n              <Label className=\"text-muted\">Qus.1</Label>\r\n              <Input\r\n                type=\"text\"\r\n                name=\"Qus1\"\r\n                value={this.state.Qus1}\r\n                className=\"text-primary\"\r\n                onChange={this.handleChange.bind(this, 'Qus1')}\r\n                placeholder=\"Question1\"\r\n                required\r\n              />\r\n            </FormGroup>\r\n            <FormGroup controlId=\"formBasicEmail\">\r\n              <Label className=\"text-muted\">Ans.1</Label>\r\n              <Input\r\n                type=\"text\"\r\n                name=\"Ans1\"\r\n                value={this.state.Ans1}\r\n                className=\"text-primary\"\r\n                onChange={this.handleChange.bind(this, 'Ans1')}\r\n                placeholder=\"Answer 1\"\r\n                required\r\n              />\r\n            </FormGroup>\r\n<FormGroup controlId=\"formBasicSubject\">\r\n              <Label className=\"text-muted\">Qus.2</Label>\r\n              <Input\r\n                type=\"text\"\r\n                name=\"Qus2\"\r\n                className=\"text-primary\"\r\n                value={this.state.Qus2}\r\n                onChange={this.handleChange.bind(this, 'Qus2')}\r\n                placeholder=\"Question 2\"\r\n                required\r\n              />\r\n            </FormGroup>\r\n<FormGroup controlId=\"formBasicMessage\">\r\n              <Label className=\"text-muted\">Ans.2</Label>\r\n              <Input\r\n                type=\"text\"\r\n                name=\"message\"\r\n                className=\"text-primary\"\r\n                value={this.state.Ans2}\r\n                placeholder=\"Answer 2\"\r\n                required\r\n                onChange={this.handleChange.bind(this, 'Ans2')}\r\n              />\r\n            </FormGroup>\r\n            <FormGroup controlId=\"formBasicSubject1\">\r\n              <Label className=\"text-muted\">Qus.3</Label>\r\n              <Input\r\n                type=\"text\"\r\n                name=\"Qus3\"\r\n                className=\"text-primary\"\r\n                value={this.state.Qus3}\r\n                onChange={this.handleChange.bind(this, 'Qus3')}\r\n                placeholder=\"Question 3\"\r\n                required\r\n              />\r\n            </FormGroup>\r\n<FormGroup controlId=\"formBasicMessage1\">\r\n              <Label className=\"text-muted\">Ans.3</Label>\r\n              <Input\r\n                type=\"text\"\r\n                name=\"Ans3\"\r\n                className=\"text-primary\"\r\n                value={this.state.Ans3}\r\n                placeholder=\"Answer 3\"\r\n                required\r\n                onChange={this.handleChange.bind(this, 'Ans3')}\r\n              />\r\n            </FormGroup>\r\n            <FormGroup controlId=\"formBasicSubject13\">\r\n              <Label className=\"text-muted\">Qus.4</Label>\r\n              <Input\r\n                type=\"text\"\r\n                name=\"Qus4\"\r\n                className=\"text-primary\"\r\n                value={this.state.Qus4}\r\n                onChange={this.handleChange.bind(this, 'Qus4')}\r\n                placeholder=\"Question 4\"\r\n                required\r\n              />\r\n            </FormGroup>\r\n<FormGroup controlId=\"formBasicMessage12\">\r\n              <Label className=\"text-muted\">Ans.4</Label>\r\n              <Input\r\n                type=\"text\"\r\n                name=\"Ans4\"\r\n                className=\"text-primary\"\r\n                value={this.state.Ans4}\r\n                placeholder=\"Answer 4\"\r\n                required\r\n                onChange={this.handleChange.bind(this, 'Ans4')}\r\n              />\r\n            </FormGroup>\r\n<Button variant=\"primary\" type=\"submit\">\r\n              Submit\r\n            </Button>\r\n          </Form>\r\n        \r\n      </>\r\n    )\r\n  }\r\n  }\r\n  \r\n\r\n  const mapDispatchToProps = dispatch => {\r\n    return {\r\n      fakeOrNot: (project) => dispatch(fakeOrNot(project))\r\n    }\r\n  }\r\n\r\nexport default connect(null,mapDispatchToProps)(Q4);","D:\\webserv4u\\quizbeater\\src\\components\\fakeOrNot\\createPost\\Q5.js",["614"],"import React from \"react\"\r\nimport { Button, FormFeedback, Form, FormGroup, Label, Input } from 'reactstrap'\r\nimport { connect } from 'react-redux'\r\nimport { fakeOrNot } from \"../../../store/actions/projectAction\"\r\n\r\n\r\nclass Q5 extends React.Component {\r\n    \r\n  state = {\r\n    quizType:'',\r\n    Qus1: '',\r\n    Ans1: '',\r\n    Qus2: '',\r\n    Ans2: '',\r\n    Qus3: '',\r\n    Ans3: '',\r\n    Qus4: '',\r\n    Ans4: '',\r\n    Qus5: '',\r\n    Ans5: '',\r\n\r\n  }\r\nhandleSubmit(e) {\r\n    e.preventDefault()\r\n    this.props.fakeOrNot(this.state);\r\n    \r\n     this.resetForm()\r\n }\r\nresetForm() {\r\n    this.setState({\r\n      quizType:'',\r\n      Qus1: '',\r\n      Ans1: '',\r\n       Qus2: '',\r\n       Ans2: '',\r\n       Qus3: '',\r\n       Ans3: '',\r\n       Qus4: '',\r\n       Ans4: '',\r\n       Qus5: '',\r\n       Ans5: '',\r\n   \r\n    })\r\n  }\r\nhandleChange = (param, e) => {\r\n    this.setState({ [param]: e.target.value })\r\n  }\r\nrender() {\r\n    return (\r\n      <>\r\n        \r\n          <Form onSubmit={this.handleSubmit.bind(this)}>\r\n          <FormGroup controlId=\"formBasicquizType\">\r\n              <Label className=\"text-muted\">About Quiz</Label>\r\n              <Input\r\n                type=\"text\"\r\n                name=\"quizType\"\r\n                value={this.state.quizType}\r\n                className=\"text-primary\"\r\n                onChange={this.handleChange.bind(this, 'quizType')}\r\n                placeholder=\"About Quiz\"\r\n                required\r\n              />\r\n            </FormGroup>\r\n<FormGroup controlId=\"formBasicName\">\r\n              <Label className=\"text-muted\">Qus.1</Label>\r\n              <Input\r\n                type=\"text\"\r\n                name=\"Qus1\"\r\n                value={this.state.Qus1}\r\n                className=\"text-primary\"\r\n                onChange={this.handleChange.bind(this, 'Qus1')}\r\n                placeholder=\"Question1\"\r\n                required\r\n              />\r\n            </FormGroup>\r\n            <FormGroup controlId=\"formBasicEmail\">\r\n              <Label className=\"text-muted\">Ans.1</Label>\r\n              <Input\r\n                type=\"text\"\r\n                name=\"Ans1\"\r\n                value={this.state.Ans1}\r\n                className=\"text-primary\"\r\n                onChange={this.handleChange.bind(this, 'Ans1')}\r\n                placeholder=\"Answer 1\"\r\n                required\r\n              />\r\n            </FormGroup>\r\n<FormGroup controlId=\"formBasicSubject\">\r\n              <Label className=\"text-muted\">Qus.2</Label>\r\n              <Input\r\n                type=\"text\"\r\n                name=\"Qus2\"\r\n                className=\"text-primary\"\r\n                value={this.state.Qus2}\r\n                onChange={this.handleChange.bind(this, 'Qus2')}\r\n                placeholder=\"Question 2\"\r\n                required\r\n              />\r\n            </FormGroup>\r\n<FormGroup controlId=\"formBasicMessage\">\r\n              <Label className=\"text-muted\">Ans.2</Label>\r\n              <Input\r\n                type=\"text\"\r\n                name=\"message\"\r\n                className=\"text-primary\"\r\n                value={this.state.Ans2}\r\n                placeholder=\"Answer 2\"\r\n                required\r\n                onChange={this.handleChange.bind(this, 'Ans2')}\r\n              />\r\n            </FormGroup>\r\n            <FormGroup controlId=\"formBasicSubject1\">\r\n              <Label className=\"text-muted\">Qus.3</Label>\r\n              <Input\r\n                type=\"text\"\r\n                name=\"Qus3\"\r\n                className=\"text-primary\"\r\n                value={this.state.Qus3}\r\n                onChange={this.handleChange.bind(this, 'Qus3')}\r\n                placeholder=\"Question 3\"\r\n                required\r\n              />\r\n            </FormGroup>\r\n<FormGroup controlId=\"formBasicMessage12\">\r\n              <Label className=\"text-muted\">Ans.3</Label>\r\n              <Input\r\n                type=\"text\"\r\n                name=\"Ans3\"\r\n                className=\"text-primary\"\r\n                value={this.state.Ans3}\r\n                placeholder=\"Answer 3\"\r\n                required\r\n                onChange={this.handleChange.bind(this, 'Ans3')}\r\n              />\r\n            </FormGroup>\r\n            <FormGroup controlId=\"formBasicSubject13\">\r\n              <Label className=\"text-muted\">Qus.4</Label>\r\n              <Input\r\n                type=\"text\"\r\n                name=\"Qus4\"\r\n                className=\"text-primary\"\r\n                value={this.state.Qus4}\r\n                onChange={this.handleChange.bind(this, 'Qus4')}\r\n                placeholder=\"Question 4\"\r\n                required\r\n              />\r\n            </FormGroup>\r\n<FormGroup controlId=\"formBasicMessage12\">\r\n              <Label className=\"text-muted\">Ans.4</Label>\r\n              <Input\r\n                type=\"text\"\r\n                name=\"Ans4\"\r\n                className=\"text-primary\"\r\n                value={this.state.Ans4}\r\n                placeholder=\"Answer 4\"\r\n                required\r\n                onChange={this.handleChange.bind(this, 'Ans4')}\r\n              />\r\n            </FormGroup>\r\n            <FormGroup controlId=\"formBasicSubject1as3\">\r\n              <Label className=\"text-muted\">Qus.5</Label>\r\n              <Input\r\n                type=\"text\"\r\n                name=\"Qus5\"\r\n                className=\"text-primary\"\r\n                value={this.state.Qus5}\r\n                onChange={this.handleChange.bind(this, 'Qus5')}\r\n                placeholder=\"Question 5\"\r\n                required\r\n              />\r\n            </FormGroup>\r\n<FormGroup controlId=\"formBasicMessage121\">\r\n              <Label className=\"text-muted\">Ans.5</Label>\r\n              <Input\r\n                type=\"text\"\r\n                name=\"Ans5\"\r\n                className=\"text-primary\"\r\n                value={this.state.Ans5}\r\n                placeholder=\"Answer 5\"\r\n                required\r\n                onChange={this.handleChange.bind(this, 'Ans5')}\r\n              />\r\n            </FormGroup>\r\n<Button variant=\"primary\" type=\"submit\">\r\n              Submit\r\n            </Button>\r\n          </Form>\r\n        \r\n      </>\r\n    )\r\n  }\r\n  }\r\n\r\n  const mapDispatchToProps = dispatch => {\r\n    return {\r\n      fakeOrNot: (project) => dispatch(fakeOrNot(project))\r\n    }\r\n  }\r\n\r\nexport default connect(null,mapDispatchToProps)(Q5);","D:\\webserv4u\\quizbeater\\src\\components\\fakeOrNot\\fetchFakeOrNot.js",["615"],"D:\\webserv4u\\quizbeater\\src\\components\\fakeOrNot\\fetchFakeOrNotSummary.js",[],"D:\\webserv4u\\quizbeater\\src\\store\\reducers\\kyaBoltiPublicReducer.js",[],"D:\\webserv4u\\quizbeater\\src\\store\\reducers\\fakeOrNotReducer.js",[],"D:\\webserv4u\\quizbeater\\src\\store\\reducers\\daamSahiHaiReducer.js",[],"D:\\webserv4u\\quizbeater\\src\\store\\reducers\\fYIReducer.js",[],"D:\\webserv4u\\quizbeater\\src\\store\\reducers\\kaunReducer.js",[],"D:\\webserv4u\\quizbeater\\src\\components\\kyaBoltiPublic\\kyaBoltiPublic.js",[],"D:\\webserv4u\\quizbeater\\src\\components\\kyaBoltiPublic\\quizHead.js",[],"D:\\webserv4u\\quizbeater\\src\\components\\kyaBoltiPublic\\quizDesc.js",["616"],"import React from 'react';\r\nimport { Card, Image } from 'react-bootstrap';\r\nimport MetaDecorator from \"../../utils/metaDecorator\"\r\n\r\nconst QuizDescription = () =>{\r\n    return (\r\n        <div>\r\n              <MetaDecorator title='about flipkart kya bolti public Quiz description' \r\n    description=' Here you have to get quick live updates for each Kya bolti public Quiz Answer everyday at\r\n    12:00am.' />\r\n     \r\n<Card.Text><br></br>\r\n      Here you have to get quick live updates for each <b>Kya Bolti Public</b> Quiz Question everyday at 12:00am.\r\n      By answering these Quiz Questions you can win many gift vouchers,coupons,gifts,super coins etc.\r\n      &nbsp; <br></br> <Image src=\"https://seeklogo.com/images/F/flipkart-logo-3F33927DAA-seeklogo.com.png\"\r\n      width={60}\r\n      height={60}\r\n      roundedCircle />\r\n      <a href=\"https://www.flipkart.com/\">&nbsp;<b>Flipkart</b> </a>\r\n      <b><i>Kya Bolti Public? Quiz is Back.</i>  </b>Daily Trivia Quiz is generally asks\r\n       General Knowledge based Questions.Flipkart Quiz is started at 12:00Am and ends at 11:59am.\r\n       <b><i>QuizBeater</i></b> provide these answers at 11:50pm daily.By answering them you have to\r\n        get some relevant prize,coupons,gift or super coins  by regular participation in daily quiz.\r\n        <b>Make sure you have to follow our official <a href=\"#\"><b><b>Telegram</b></b> </a> channel to get daily \r\n          imediate answers for each Quiz  </b>\r\n    </Card.Text>\r\n    <br></br> \r\n        </div>\r\n    )\r\n}\r\nexport default QuizDescription;","D:\\webserv4u\\quizbeater\\src\\components\\kyaBoltiPublic\\howToPlay.js",[],"D:\\webserv4u\\quizbeater\\src\\components\\kyaBoltiPublic\\slidingImage.js",[],"D:\\webserv4u\\quizbeater\\src\\components\\kyaBoltiPublic\\fetchkyaBoltiPublic.js",["617"],"D:\\webserv4u\\quizbeater\\src\\components\\kyaBoltiPublic\\fetchKyaBoltiPublicSummary.js",[],"D:\\webserv4u\\quizbeater\\src\\components\\kyaBoltiPublic\\createPost\\createKyaBoltiPublic.js",[],"D:\\webserv4u\\quizbeater\\src\\components\\kyaBoltiPublic\\createPost\\selectedPage.js",["618","619","620","621"],"D:\\webserv4u\\quizbeater\\src\\components\\kyaBoltiPublic\\createPost\\Q2.js",["622"],"import React, { Component } from 'react'\r\nimport { Button, FormFeedback, Form, FormGroup, Label, Input } from 'reactstrap'\r\nimport { connect } from 'react-redux'\r\nimport { kyaBoltiPublic } from \"../../../store/actions/projectAction\"\r\nclass Q2 extends Component {\r\n  state = {\r\n    quizType:'',\r\n    Qus1: '',\r\n    Ans1: '',\r\n    Qus2: '',\r\n    Ans2: '',\r\n  }\r\nhandleSubmit(e) {\r\n    e.preventDefault()\r\n    this.props.kyaBoltiPublic(this.state);\r\n     this.resetForm()\r\n }\r\nresetForm() {\r\n    this.setState({\r\n      quizType:'',\r\n      Qus1: '',\r\n      Ans1: '',\r\n       Qus2: '',\r\n       Ans2: '',\r\n    })\r\n  }\r\nhandleChange = (param, e) => {\r\n    this.setState({ [param]: e.target.value })\r\n  }\r\nrender() {\r\n    return (\r\n      <>\r\n        \r\n          <Form onSubmit={this.handleSubmit.bind(this)}>\r\n            \r\n          <FormGroup controlId=\"formBasicquizType\">\r\n              <Label className=\"text-muted\">About Quiz</Label>\r\n              <Input\r\n                type=\"text\"\r\n                name=\"quizType\"\r\n                value={this.state.quizType}\r\n                className=\"text-primary\"\r\n                onChange={this.handleChange.bind(this, 'quizType')}\r\n                placeholder=\"About Quiz\"\r\n                required\r\n              />\r\n            </FormGroup>\r\n\r\n<FormGroup controlId=\"formBasicName\">\r\n              <Label className=\"text-muted\">Qus.1</Label>\r\n              <Input\r\n                type=\"text\"\r\n                name=\"Qus1\"\r\n                value={this.state.Qus1}\r\n                className=\"text-primary\"\r\n                onChange={this.handleChange.bind(this, 'Qus1')}\r\n                placeholder=\"Question1\"\r\n                required\r\n              />\r\n            </FormGroup>\r\n            <FormGroup controlId=\"formBasicEmail\">\r\n              <Label className=\"text-muted\">Ans.1</Label>\r\n              <Input\r\n                type=\"text\"\r\n                name=\"Ans1\"\r\n                value={this.state.Ans1}\r\n                className=\"text-primary\"\r\n                onChange={this.handleChange.bind(this, 'Ans1')}\r\n                placeholder=\"Answer 1\"\r\n                required\r\n              />\r\n            </FormGroup>\r\n<FormGroup controlId=\"formBasicSubject\">\r\n              <Label className=\"text-muted\">Qus.2</Label>\r\n              <Input\r\n                type=\"text\"\r\n                name=\"Qus2\"\r\n                className=\"text-primary\"\r\n                value={this.state.Qus2}\r\n                onChange={this.handleChange.bind(this, 'Qus2')}\r\n                placeholder=\"Question 2\"\r\n                required\r\n              />\r\n            </FormGroup>\r\n<FormGroup controlId=\"formBasicMessage\">\r\n              <Label className=\"text-muted\">Ans.2</Label>\r\n              <Input\r\n                type=\"text\"\r\n                name=\"Ans2\"\r\n                className=\"text-primary\"\r\n                value={this.state.Ans2}\r\n                placeholder=\"Answer 2\"\r\n                required\r\n                onChange={this.handleChange.bind(this, 'Ans2')}\r\n              />\r\n            </FormGroup>\r\n<Button variant=\"primary\" type=\"submit\">\r\n              Submit\r\n            </Button>\r\n          </Form>\r\n        \r\n      </>\r\n    )\r\n  }\r\n}\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n    return {\r\n      kyaBoltiPublic: (project) => dispatch(kyaBoltiPublic(project))\r\n    }\r\n  }\r\n\r\nexport default connect(null,mapDispatchToProps)(Q2);","D:\\webserv4u\\quizbeater\\src\\components\\kyaBoltiPublic\\createPost\\Q3.js",["623"],"import React from \"react\"\r\nimport { Button, FormFeedback, Form, FormGroup, Label, Input } from 'reactstrap'\r\nimport { connect } from 'react-redux'\r\nimport { kyaBoltiPublic } from \"../../../store/actions/projectAction\"\r\n\r\nclass Q3 extends React.Component {\r\n    \r\n  state = {\r\n    quizType:'',\r\n    Qus1: '',\r\n    Ans1: '',\r\n    Qus2: '',\r\n    Ans2: '',\r\n    Qus3: '',\r\n    Ans3: '',\r\n\r\n  }\r\nhandleSubmit(e) {\r\n    e.preventDefault()\r\n    this.props.kyaBoltiPublic(this.state);\r\n     this.resetForm()\r\n }\r\nresetForm() {\r\n    this.setState({\r\n      quizType:'',\r\n      Qus1: '',\r\n      Ans1: '',\r\n       Qus2: '',\r\n       Ans2: '',\r\n       Qus3: '',\r\n       Ans3: '',\r\n    })\r\n  }\r\nhandleChange = (param, e) => {\r\n    this.setState({ [param]: e.target.value })\r\n  }\r\nrender() {\r\n    return (\r\n      <>\r\n        \r\n          <Form onSubmit={this.handleSubmit.bind(this)}>\r\n          <FormGroup controlId=\"formBasicquizType\">\r\n              <Label className=\"text-muted\">About Quiz</Label>\r\n              <Input\r\n                type=\"text\"\r\n                name=\"quizType\"\r\n                value={this.state.quizType}\r\n                className=\"text-primary\"\r\n                onChange={this.handleChange.bind(this, 'quizType')}\r\n                placeholder=\"About Quiz\"\r\n                required\r\n              />\r\n            </FormGroup>\r\n<FormGroup controlId=\"formBasicName\">\r\n              <Label className=\"text-muted\">Qus.1</Label>\r\n              <Input\r\n                type=\"text\"\r\n                name=\"Qus1\"\r\n                value={this.state.Qus1}\r\n                className=\"text-primary\"\r\n                onChange={this.handleChange.bind(this, 'Qus1')}\r\n                placeholder=\"Question1\"\r\n                required\r\n              />\r\n            </FormGroup>\r\n            <FormGroup controlId=\"formBasicEmail\">\r\n              <Label className=\"text-muted\">Ans.1</Label>\r\n              <Input\r\n                type=\"text\"\r\n                name=\"Ans1\"\r\n                value={this.state.Ans1}\r\n                className=\"text-primary\"\r\n                onChange={this.handleChange.bind(this, 'Ans1')}\r\n                placeholder=\"Answer 1\"\r\n                required\r\n              />\r\n            </FormGroup>\r\n<FormGroup controlId=\"formBasicSubject\">\r\n              <Label className=\"text-muted\">Qus.2</Label>\r\n              <Input\r\n                type=\"text\"\r\n                name=\"Qus2\"\r\n                className=\"text-primary\"\r\n                value={this.state.Qus2}\r\n                onChange={this.handleChange.bind(this, 'Qus2')}\r\n                placeholder=\"Question 2\"\r\n                required\r\n              />\r\n            </FormGroup>\r\n<FormGroup controlId=\"formBasicMessage\">\r\n              <Label className=\"text-muted\">Ans.2</Label>\r\n              <Input\r\n                type=\"text\"\r\n                name=\"message\"\r\n                className=\"text-primary\"\r\n                value={this.state.Ans2}\r\n                placeholder=\"Answer 2\"\r\n                required\r\n                onChange={this.handleChange.bind(this, 'Ans2')}\r\n              />\r\n            </FormGroup>\r\n            <FormGroup controlId=\"formBasicSubject1\">\r\n              <Label className=\"text-muted\">Qus.3</Label>\r\n              <Input\r\n                type=\"text\"\r\n                name=\"Qus3\"\r\n                className=\"text-primary\"\r\n                value={this.state.Qus3}\r\n                onChange={this.handleChange.bind(this, 'Qus3')}\r\n                placeholder=\"Question 3\"\r\n                required\r\n              />\r\n            </FormGroup>\r\n<FormGroup controlId=\"formBasicMessage1\">\r\n              <Label className=\"text-muted\">Ans.3</Label>\r\n              <Input\r\n                type=\"text\"\r\n                name=\"Ans3\"\r\n                className=\"text-primary\"\r\n                value={this.state.Ans3}\r\n                placeholder=\"Answer 3\"\r\n                required\r\n                onChange={this.handleChange.bind(this, 'Ans3')}\r\n              />\r\n            </FormGroup>\r\n<Button variant=\"primary\" type=\"submit\">\r\n              Submit\r\n            </Button>\r\n          </Form>\r\n        \r\n      </>\r\n    )\r\n  }\r\n  }\r\n  \r\n\r\n  const mapDispatchToProps = dispatch => {\r\n    return {\r\n      kyaBoltiPublic: (project) => dispatch(kyaBoltiPublic(project))\r\n    }\r\n  }\r\n\r\nexport default connect(null,mapDispatchToProps)(Q3);","D:\\webserv4u\\quizbeater\\src\\components\\kyaBoltiPublic\\createPost\\Q4.js",["624"],"import React from \"react\"\r\nimport { Button, FormFeedback, Form, FormGroup, Label, Input } from 'reactstrap'\r\nimport { connect } from 'react-redux'\r\nimport { kyaBoltiPublic } from \"../../../store/actions/projectAction\"\r\n\r\nclass Q4 extends React.Component {\r\n    \r\n  state = {\r\n    quizType:'',\r\n    Qus1: '',\r\n    Ans1: '',\r\n    Qus2: '',\r\n    Ans2: '',\r\n    Qus3: '',\r\n    Ans3: '',\r\n    Qus4: '',\r\n    Ans4: '',\r\n\r\n  }\r\nhandleSubmit(e) {\r\n    e.preventDefault()\r\n    this.props.kyaBoltiPublic(this.state);\r\n     this.resetForm()\r\n }\r\nresetForm() {\r\n    this.setState({\r\n      quizType:'',\r\n      Qus1: '',\r\n      Ans1: '',\r\n       Qus2: '',\r\n       Ans2: '',\r\n       Qus3: '',\r\n       Ans3: '',\r\n       Qus4: '',\r\n       Ans4: '',\r\n    })\r\n  }\r\nhandleChange = (param, e) => {\r\n    this.setState({ [param]: e.target.value })\r\n  }\r\nrender() {\r\n    return (\r\n      <>\r\n        \r\n          <Form onSubmit={this.handleSubmit.bind(this)}>\r\n          <FormGroup controlId=\"formBasicquizType\">\r\n              <Label className=\"text-muted\">About Quiz</Label>\r\n              <Input\r\n                type=\"text\"\r\n                name=\"quizType\"\r\n                value={this.state.quizType}\r\n                className=\"text-primary\"\r\n                onChange={this.handleChange.bind(this, 'quizType')}\r\n                placeholder=\"About Quiz\"\r\n                required\r\n              />\r\n            </FormGroup>\r\n<FormGroup controlId=\"formBasicName\">\r\n              <Label className=\"text-muted\">Qus.1</Label>\r\n              <Input\r\n                type=\"text\"\r\n                name=\"Qus1\"\r\n                value={this.state.Qus1}\r\n                className=\"text-primary\"\r\n                onChange={this.handleChange.bind(this, 'Qus1')}\r\n                placeholder=\"Question1\"\r\n                required\r\n              />\r\n            </FormGroup>\r\n            <FormGroup controlId=\"formBasicEmail\">\r\n              <Label className=\"text-muted\">Ans.1</Label>\r\n              <Input\r\n                type=\"text\"\r\n                name=\"Ans1\"\r\n                value={this.state.Ans1}\r\n                className=\"text-primary\"\r\n                onChange={this.handleChange.bind(this, 'Ans1')}\r\n                placeholder=\"Answer 1\"\r\n                required\r\n              />\r\n            </FormGroup>\r\n<FormGroup controlId=\"formBasicSubject\">\r\n              <Label className=\"text-muted\">Qus.2</Label>\r\n              <Input\r\n                type=\"text\"\r\n                name=\"Qus2\"\r\n                className=\"text-primary\"\r\n                value={this.state.Qus2}\r\n                onChange={this.handleChange.bind(this, 'Qus2')}\r\n                placeholder=\"Question 2\"\r\n                required\r\n              />\r\n            </FormGroup>\r\n<FormGroup controlId=\"formBasicMessage\">\r\n              <Label className=\"text-muted\">Ans.2</Label>\r\n              <Input\r\n                type=\"text\"\r\n                name=\"message\"\r\n                className=\"text-primary\"\r\n                value={this.state.Ans2}\r\n                placeholder=\"Answer 2\"\r\n                required\r\n                onChange={this.handleChange.bind(this, 'Ans2')}\r\n              />\r\n            </FormGroup>\r\n            <FormGroup controlId=\"formBasicSubject1\">\r\n              <Label className=\"text-muted\">Qus.3</Label>\r\n              <Input\r\n                type=\"text\"\r\n                name=\"Qus3\"\r\n                className=\"text-primary\"\r\n                value={this.state.Qus3}\r\n                onChange={this.handleChange.bind(this, 'Qus3')}\r\n                placeholder=\"Question 3\"\r\n                required\r\n              />\r\n            </FormGroup>\r\n<FormGroup controlId=\"formBasicMessage1\">\r\n              <Label className=\"text-muted\">Ans.3</Label>\r\n              <Input\r\n                type=\"text\"\r\n                name=\"Ans3\"\r\n                className=\"text-primary\"\r\n                value={this.state.Ans3}\r\n                placeholder=\"Answer 3\"\r\n                required\r\n                onChange={this.handleChange.bind(this, 'Ans3')}\r\n              />\r\n            </FormGroup>\r\n            <FormGroup controlId=\"formBasicSubject13\">\r\n              <Label className=\"text-muted\">Qus.4</Label>\r\n              <Input\r\n                type=\"text\"\r\n                name=\"Qus4\"\r\n                className=\"text-primary\"\r\n                value={this.state.Qus4}\r\n                onChange={this.handleChange.bind(this, 'Qus4')}\r\n                placeholder=\"Question 4\"\r\n                required\r\n              />\r\n            </FormGroup>\r\n<FormGroup controlId=\"formBasicMessage12\">\r\n              <Label className=\"text-muted\">Ans.4</Label>\r\n              <Input\r\n                type=\"text\"\r\n                name=\"Ans4\"\r\n                className=\"text-primary\"\r\n                value={this.state.Ans4}\r\n                placeholder=\"Answer 4\"\r\n                required\r\n                onChange={this.handleChange.bind(this, 'Ans4')}\r\n              />\r\n            </FormGroup>\r\n<Button variant=\"primary\" type=\"submit\">\r\n              Submit\r\n            </Button>\r\n          </Form>\r\n        \r\n      </>\r\n    )\r\n  }\r\n  }\r\n  \r\n\r\n  const mapDispatchToProps = dispatch => {\r\n    return {\r\n      kyaBoltiPublic: (project) => dispatch(kyaBoltiPublic(project))\r\n    }\r\n  }\r\n\r\nexport default connect(null,mapDispatchToProps)(Q4);","D:\\webserv4u\\quizbeater\\src\\components\\kyaBoltiPublic\\createPost\\Q1.js",["625"],"import React from \"react\"\r\nimport { Button, Form, FormGroup, Label, Input } from 'reactstrap' \r\nimport { connect } from 'react-redux'\r\nimport KyaBoltiPublic from \"../kyaBoltiPublic\"\r\nimport { kyaBoltiPublic } from \"../../../store/actions/projectAction\"\r\n\r\n\r\nclass Q1 extends React.Component {\r\n    \r\n  state = {\r\n    quizType:'',\r\n    Qus1: '',\r\n    Ans1: '',\r\n  }\r\nhandleSubmit(e) {\r\n    e.preventDefault()\r\n     this.props.kyaBoltiPublic(this.state);\r\n     this.resetForm()\r\n }\r\nresetForm() {\r\n    this.setState({\r\n      quizType:'',\r\n      Qus1: '',\r\n      Ans1: '',\r\n    })\r\n  }\r\nhandleChange = (param, e) => {\r\n    this.setState({ [param]: e.target.value })\r\n  }\r\nrender() {\r\n    return (\r\n      <>\r\n        \r\n          <Form onSubmit={this.handleSubmit.bind(this)}>\r\n          <FormGroup controlId=\"formBasicquizType\">\r\n              <Label className=\"text-muted\">About Quiz</Label>\r\n              <Input\r\n                type=\"text\"\r\n                name=\"quizType\"\r\n                value={this.state.quizType}\r\n                className=\"text-primary\"\r\n                onChange={this.handleChange.bind(this, 'quizType')}\r\n                placeholder=\"About Quiz\"\r\n                required\r\n              />\r\n            </FormGroup>\r\n\r\n<FormGroup controlId=\"formBasicName\">\r\n              <Label className=\"text-muted\">Qus.1</Label>\r\n              <Input\r\n                type=\"text\"\r\n                name=\"Qus1\"\r\n                value={this.state.Qus1}\r\n                className=\"text-primary\"\r\n                onChange={this.handleChange.bind(this, 'Qus1')}\r\n                placeholder=\"Question1\"\r\n                required\r\n              />\r\n            </FormGroup>\r\n            <FormGroup controlId=\"formBasicEmail\">\r\n              <Label className=\"text-muted\">Ans.1</Label>\r\n              <Input\r\n                type=\"text\"\r\n                name=\"Ans1\"\r\n                value={this.state.Ans1}\r\n                className=\"text-primary\"\r\n                onChange={this.handleChange.bind(this, 'Ans1')}\r\n                placeholder=\"Answer 1\"\r\n                required\r\n              />\r\n            </FormGroup>\r\n\r\n<Button variant=\"primary\" type=\"submit\">\r\n              Submit\r\n            </Button>\r\n          </Form>\r\n        \r\n      </>\r\n    )\r\n  }\r\n\r\n  }\r\n  \r\n  const mapDispatchToProps = dispatch => {\r\n    return {\r\n      kyaBoltiPublic: (project) => dispatch(kyaBoltiPublic(project))\r\n    }\r\n  }\r\n\r\nexport default connect(null,mapDispatchToProps)(Q1);","D:\\webserv4u\\quizbeater\\src\\components\\kyaBoltiPublic\\createPost\\Q5.js",["626"],"import React from \"react\"\r\nimport { Button, FormFeedback, Form, FormGroup, Label, Input } from 'reactstrap'\r\nimport { connect } from 'react-redux'\r\nimport { kyaBoltiPublic } from \"../../../store/actions/projectAction\"\r\n\r\n\r\nclass Q5 extends React.Component {\r\n    \r\n  state = {\r\n    quizType:'',\r\n    Qus1: '',\r\n    Ans1: '',\r\n    Qus2: '',\r\n    Ans2: '',\r\n    Qus3: '',\r\n    Ans3: '',\r\n    Qus4: '',\r\n    Ans4: '',\r\n    Qus5: '',\r\n    Ans5: '',\r\n\r\n  }\r\nhandleSubmit(e) {\r\n    e.preventDefault()\r\n    this.props.kyaBoltiPublic(this.state);\r\n    \r\n     this.resetForm()\r\n }\r\nresetForm() {\r\n    this.setState({\r\n      quizType:'',\r\n      Qus1: '',\r\n      Ans1: '',\r\n       Qus2: '',\r\n       Ans2: '',\r\n       Qus3: '',\r\n       Ans3: '',\r\n       Qus4: '',\r\n       Ans4: '',\r\n       Qus5: '',\r\n       Ans5: '',\r\n   \r\n    })\r\n  }\r\nhandleChange = (param, e) => {\r\n    this.setState({ [param]: e.target.value })\r\n  }\r\nrender() {\r\n    return (\r\n      <>\r\n        \r\n          <Form onSubmit={this.handleSubmit.bind(this)}>\r\n          <FormGroup controlId=\"formBasicquizType\">\r\n              <Label className=\"text-muted\">About Quiz</Label>\r\n              <Input\r\n                type=\"text\"\r\n                name=\"quizType\"\r\n                value={this.state.quizType}\r\n                className=\"text-primary\"\r\n                onChange={this.handleChange.bind(this, 'quizType')}\r\n                placeholder=\"About Quiz\"\r\n                required\r\n              />\r\n            </FormGroup>\r\n<FormGroup controlId=\"formBasicName\">\r\n              <Label className=\"text-muted\">Qus.1</Label>\r\n              <Input\r\n                type=\"text\"\r\n                name=\"Qus1\"\r\n                value={this.state.Qus1}\r\n                className=\"text-primary\"\r\n                onChange={this.handleChange.bind(this, 'Qus1')}\r\n                placeholder=\"Question1\"\r\n                required\r\n              />\r\n            </FormGroup>\r\n            <FormGroup controlId=\"formBasicEmail\">\r\n              <Label className=\"text-muted\">Ans.1</Label>\r\n              <Input\r\n                type=\"text\"\r\n                name=\"Ans1\"\r\n                value={this.state.Ans1}\r\n                className=\"text-primary\"\r\n                onChange={this.handleChange.bind(this, 'Ans1')}\r\n                placeholder=\"Answer 1\"\r\n                required\r\n              />\r\n            </FormGroup>\r\n<FormGroup controlId=\"formBasicSubject\">\r\n              <Label className=\"text-muted\">Qus.2</Label>\r\n              <Input\r\n                type=\"text\"\r\n                name=\"Qus2\"\r\n                className=\"text-primary\"\r\n                value={this.state.Qus2}\r\n                onChange={this.handleChange.bind(this, 'Qus2')}\r\n                placeholder=\"Question 2\"\r\n                required\r\n              />\r\n            </FormGroup>\r\n<FormGroup controlId=\"formBasicMessage\">\r\n              <Label className=\"text-muted\">Ans.2</Label>\r\n              <Input\r\n                type=\"text\"\r\n                name=\"message\"\r\n                className=\"text-primary\"\r\n                value={this.state.Ans2}\r\n                placeholder=\"Answer 2\"\r\n                required\r\n                onChange={this.handleChange.bind(this, 'Ans2')}\r\n              />\r\n            </FormGroup>\r\n            <FormGroup controlId=\"formBasicSubject1\">\r\n              <Label className=\"text-muted\">Qus.3</Label>\r\n              <Input\r\n                type=\"text\"\r\n                name=\"Qus3\"\r\n                className=\"text-primary\"\r\n                value={this.state.Qus3}\r\n                onChange={this.handleChange.bind(this, 'Qus3')}\r\n                placeholder=\"Question 3\"\r\n                required\r\n              />\r\n            </FormGroup>\r\n<FormGroup controlId=\"formBasicMessage12\">\r\n              <Label className=\"text-muted\">Ans.3</Label>\r\n              <Input\r\n                type=\"text\"\r\n                name=\"Ans3\"\r\n                className=\"text-primary\"\r\n                value={this.state.Ans3}\r\n                placeholder=\"Answer 3\"\r\n                required\r\n                onChange={this.handleChange.bind(this, 'Ans3')}\r\n              />\r\n            </FormGroup>\r\n            <FormGroup controlId=\"formBasicSubject13\">\r\n              <Label className=\"text-muted\">Qus.4</Label>\r\n              <Input\r\n                type=\"text\"\r\n                name=\"Qus4\"\r\n                className=\"text-primary\"\r\n                value={this.state.Qus4}\r\n                onChange={this.handleChange.bind(this, 'Qus4')}\r\n                placeholder=\"Question 4\"\r\n                required\r\n              />\r\n            </FormGroup>\r\n<FormGroup controlId=\"formBasicMessage12\">\r\n              <Label className=\"text-muted\">Ans.4</Label>\r\n              <Input\r\n                type=\"text\"\r\n                name=\"Ans4\"\r\n                className=\"text-primary\"\r\n                value={this.state.Ans4}\r\n                placeholder=\"Answer 4\"\r\n                required\r\n                onChange={this.handleChange.bind(this, 'Ans4')}\r\n              />\r\n            </FormGroup>\r\n            <FormGroup controlId=\"formBasicSubject1as3\">\r\n              <Label className=\"text-muted\">Qus.5</Label>\r\n              <Input\r\n                type=\"text\"\r\n                name=\"Qus5\"\r\n                className=\"text-primary\"\r\n                value={this.state.Qus5}\r\n                onChange={this.handleChange.bind(this, 'Qus5')}\r\n                placeholder=\"Question 5\"\r\n                required\r\n              />\r\n            </FormGroup>\r\n<FormGroup controlId=\"formBasicMessage121\">\r\n              <Label className=\"text-muted\">Ans.5</Label>\r\n              <Input\r\n                type=\"text\"\r\n                name=\"Ans5\"\r\n                className=\"text-primary\"\r\n                value={this.state.Ans5}\r\n                placeholder=\"Answer 5\"\r\n                required\r\n                onChange={this.handleChange.bind(this, 'Ans5')}\r\n              />\r\n            </FormGroup>\r\n<Button variant=\"primary\" type=\"submit\">\r\n              Submit\r\n            </Button>\r\n          </Form>\r\n        \r\n      </>\r\n    )\r\n  }\r\n  }\r\n\r\n  const mapDispatchToProps = dispatch => {\r\n    return {\r\n      kyaBoltiPublic: (project) => dispatch(kyaBoltiPublic(project))\r\n    }\r\n  }\r\n\r\nexport default connect(null,mapDispatchToProps)(Q5);","D:\\webserv4u\\quizbeater\\src\\components\\daamSahiHai\\daamSahiHai.js",["627"],"import React, { Component } from 'react';\r\nimport { Card } from 'react-bootstrap';\r\nimport HowToPlay from './howToPlay';\r\nimport QuizDescription from './quizDesc';\r\nimport QuizHead from './quizHead';\r\nimport SlidingImage from './slidingImage';\r\n\r\nimport FetchComment from '../comment/fetchComment'\r\nimport Comment from '../comment/comment'\r\nimport FetchDaamSahiHai from './fetchDaamSahiHai';\r\nimport GameType from '../dashboard/homeDashboard/gameType';\r\n\r\n\r\nconst DaamSahiHai = () => {\r\n\r\n\r\n \r\n    return(\r\n    <div>\r\n   <Card >\r\n  <QuizHead />\r\n  <SlidingImage />\r\n  <QuizDescription />\r\n <HowToPlay />\r\n<FetchDaamSahiHai />\r\n<GameType />\r\n  <FetchComment />\r\n  <Comment />\r\n \r\n   </Card>\r\n\r\n    </div>\r\n    )\r\n}\r\n\r\n\r\n\r\n\r\n export default DaamSahiHai;\r\n","D:\\webserv4u\\quizbeater\\src\\components\\daamSahiHai\\howToPlay.js",[],"D:\\webserv4u\\quizbeater\\src\\components\\daamSahiHai\\quizDesc.js",["628"],"import React from 'react';\r\nimport { Card, Image } from 'react-bootstrap';\r\nimport MetaDecorator from \"../../utils/metaDecorator\"\r\n\r\nconst QuizDescription = () =>{\r\n    return (\r\n        <div>\r\n              <MetaDecorator title='about flipkart  daam sahi hai Quiz description' \r\n    description=' Here you have to get quick live updates for each daam sahi hai Quiz Answer everyday at\r\n    12:00am.' />\r\n<Card.Text><br></br>\r\n      Here you have to get quick live updates for each <b>Daam Sahi Hai</b> Quiz Question everyday at 11:50pm.\r\n      By answering these Quiz Questions you can win many gift vouchers,coupons,gifts,super coins etc.\r\n      &nbsp; <br></br> <Image src=\"https://seeklogo.com/images/F/flipkart-logo-3F33927DAA-seeklogo.com.png\"\r\n      width={60}\r\n      height={60}\r\n      roundedCircle />\r\n      <a href=\"https://www.flipkart.com/\">&nbsp;<b>Flipkart</b> </a>\r\n      <b><i>daily <b>Daam Sahi Hai</b> Quiz is Back.</i>  </b>Daily <b>Daam Sahi Hai</b> Quiz is generally asks\r\n       General Knowledge based Questions.Flipkart Quiz is started at 12:00Am and ends at 11:59am.\r\n       <b><i>QuizBeater</i></b> provide these answers at 11:50pm daily.By answering them you have to\r\n        get some relevant prize,coupons,gift or super coins  by regular participation in daily quiz.\r\n        <b>Make sure you have to follow our official <a href=\"#\"><b><b>Telegram</b></b> </a> channel to get daily \r\n          imediate answers for each Quiz  </b>\r\n    </Card.Text>\r\n    <br></br> \r\n        </div>\r\n    )\r\n}\r\nexport default QuizDescription;","D:\\webserv4u\\quizbeater\\src\\components\\daamSahiHai\\quizHead.js",[],"D:\\webserv4u\\quizbeater\\src\\components\\daamSahiHai\\slidingImage.js",[],"D:\\webserv4u\\quizbeater\\src\\components\\daamSahiHai\\fetchDaamSahiHai.js",["629"],"D:\\webserv4u\\quizbeater\\src\\components\\daamSahiHai\\fetchDaamSahiHaiSummary.js",[],"D:\\webserv4u\\quizbeater\\src\\components\\daamSahiHai\\createPost\\createDaamSahiHai.js",[],"D:\\webserv4u\\quizbeater\\src\\components\\daamSahiHai\\createPost\\selectedPage.js",["630","631","632","633"],"D:\\webserv4u\\quizbeater\\src\\components\\daamSahiHai\\createPost\\Q1.js",[],"D:\\webserv4u\\quizbeater\\src\\components\\daamSahiHai\\createPost\\Q3.js",["634"],"import React from \"react\"\r\nimport { Button, FormFeedback, Form, FormGroup, Label, Input } from 'reactstrap'\r\nimport { connect } from 'react-redux'\r\nimport { daamSahiHai } from \"../../../store/actions/projectAction\"\r\n\r\nclass Q3 extends React.Component {\r\n    \r\n  state = {\r\n    quizType:'',\r\n    Qus1: '',\r\n    Ans1: '',\r\n    Qus2: '',\r\n    Ans2: '',\r\n    Qus3: '',\r\n    Ans3: '',\r\n\r\n  }\r\nhandleSubmit(e) {\r\n    e.preventDefault()\r\n    this.props.daamSahiHai(this.state);\r\n     this.resetForm()\r\n }\r\nresetForm() {\r\n    this.setState({\r\n      quizType:'',\r\n      Qus1: '',\r\n      Ans1: '',\r\n       Qus2: '',\r\n       Ans2: '',\r\n       Qus3: '',\r\n       Ans3: '',\r\n    })\r\n  }\r\nhandleChange = (param, e) => {\r\n    this.setState({ [param]: e.target.value })\r\n  }\r\nrender() {\r\n    return (\r\n      <>\r\n        \r\n          <Form onSubmit={this.handleSubmit.bind(this)}>\r\n          <FormGroup controlId=\"formBasicquizType\">\r\n              <Label className=\"text-muted\">About Quiz</Label>\r\n              <Input\r\n                type=\"text\"\r\n                name=\"quizType\"\r\n                value={this.state.quizType}\r\n                className=\"text-primary\"\r\n                onChange={this.handleChange.bind(this, 'quizType')}\r\n                placeholder=\"About Quiz\"\r\n                required\r\n              />\r\n            </FormGroup>\r\n<FormGroup controlId=\"formBasicName\">\r\n              <Label className=\"text-muted\">Qus.1</Label>\r\n              <Input\r\n                type=\"text\"\r\n                name=\"Qus1\"\r\n                value={this.state.Qus1}\r\n                className=\"text-primary\"\r\n                onChange={this.handleChange.bind(this, 'Qus1')}\r\n                placeholder=\"Question1\"\r\n                required\r\n              />\r\n            </FormGroup>\r\n            <FormGroup controlId=\"formBasicEmail\">\r\n              <Label className=\"text-muted\">Ans.1</Label>\r\n              <Input\r\n                type=\"text\"\r\n                name=\"Ans1\"\r\n                value={this.state.Ans1}\r\n                className=\"text-primary\"\r\n                onChange={this.handleChange.bind(this, 'Ans1')}\r\n                placeholder=\"Answer 1\"\r\n                required\r\n              />\r\n            </FormGroup>\r\n<FormGroup controlId=\"formBasicSubject\">\r\n              <Label className=\"text-muted\">Qus.2</Label>\r\n              <Input\r\n                type=\"text\"\r\n                name=\"Qus2\"\r\n                className=\"text-primary\"\r\n                value={this.state.Qus2}\r\n                onChange={this.handleChange.bind(this, 'Qus2')}\r\n                placeholder=\"Question 2\"\r\n                required\r\n              />\r\n            </FormGroup>\r\n<FormGroup controlId=\"formBasicMessage\">\r\n              <Label className=\"text-muted\">Ans.2</Label>\r\n              <Input\r\n                type=\"text\"\r\n                name=\"message\"\r\n                className=\"text-primary\"\r\n                value={this.state.Ans2}\r\n                placeholder=\"Answer 2\"\r\n                required\r\n                onChange={this.handleChange.bind(this, 'Ans2')}\r\n              />\r\n            </FormGroup>\r\n            <FormGroup controlId=\"formBasicSubject1\">\r\n              <Label className=\"text-muted\">Qus.3</Label>\r\n              <Input\r\n                type=\"text\"\r\n                name=\"Qus3\"\r\n                className=\"text-primary\"\r\n                value={this.state.Qus3}\r\n                onChange={this.handleChange.bind(this, 'Qus3')}\r\n                placeholder=\"Question 3\"\r\n                required\r\n              />\r\n            </FormGroup>\r\n<FormGroup controlId=\"formBasicMessage1\">\r\n              <Label className=\"text-muted\">Ans.3</Label>\r\n              <Input\r\n                type=\"text\"\r\n                name=\"Ans3\"\r\n                className=\"text-primary\"\r\n                value={this.state.Ans3}\r\n                placeholder=\"Answer 3\"\r\n                required\r\n                onChange={this.handleChange.bind(this, 'Ans3')}\r\n              />\r\n            </FormGroup>\r\n<Button variant=\"primary\" type=\"submit\">\r\n              Submit\r\n            </Button>\r\n          </Form>\r\n        \r\n      </>\r\n    )\r\n  }\r\n  }\r\n  \r\n\r\n  const mapDispatchToProps = dispatch => {\r\n    return {\r\n      daamSahiHai: (project) => dispatch(daamSahiHai(project))\r\n    }\r\n  }\r\n\r\nexport default connect(null,mapDispatchToProps)(Q3);","D:\\webserv4u\\quizbeater\\src\\components\\daamSahiHai\\createPost\\Q2.js",["635"],"import React, { Component } from 'react'\r\nimport { Button, FormFeedback, Form, FormGroup, Label, Input } from 'reactstrap'\r\nimport { connect } from 'react-redux'\r\nimport { daamSahiHai } from \"../../../store/actions/projectAction\"\r\nclass Q2 extends Component {\r\n  state = {\r\n    quizType:'',\r\n    Qus1: '',\r\n    Ans1: '',\r\n    Qus2: '',\r\n    Ans2: '',\r\n  }\r\nhandleSubmit(e) {\r\n    e.preventDefault()\r\n    this.props.daamSahiHai(this.state);\r\n     this.resetForm()\r\n }\r\nresetForm() {\r\n    this.setState({\r\n      quizType:'',\r\n      Qus1: '',\r\n      Ans1: '',\r\n       Qus2: '',\r\n       Ans2: '',\r\n    })\r\n  }\r\nhandleChange = (param, e) => {\r\n    this.setState({ [param]: e.target.value })\r\n  }\r\nrender() {\r\n    return (\r\n      <>\r\n        \r\n          <Form onSubmit={this.handleSubmit.bind(this)}>\r\n            \r\n          <FormGroup controlId=\"formBasicquizType\">\r\n              <Label className=\"text-muted\">About Quiz</Label>\r\n              <Input\r\n                type=\"text\"\r\n                name=\"quizType\"\r\n                value={this.state.quizType}\r\n                className=\"text-primary\"\r\n                onChange={this.handleChange.bind(this, 'quizType')}\r\n                placeholder=\"About Quiz\"\r\n                required\r\n              />\r\n            </FormGroup>\r\n\r\n<FormGroup controlId=\"formBasicName\">\r\n              <Label className=\"text-muted\">Qus.1</Label>\r\n              <Input\r\n                type=\"text\"\r\n                name=\"Qus1\"\r\n                value={this.state.Qus1}\r\n                className=\"text-primary\"\r\n                onChange={this.handleChange.bind(this, 'Qus1')}\r\n                placeholder=\"Question1\"\r\n                required\r\n              />\r\n            </FormGroup>\r\n            <FormGroup controlId=\"formBasicEmail\">\r\n              <Label className=\"text-muted\">Ans.1</Label>\r\n              <Input\r\n                type=\"text\"\r\n                name=\"Ans1\"\r\n                value={this.state.Ans1}\r\n                className=\"text-primary\"\r\n                onChange={this.handleChange.bind(this, 'Ans1')}\r\n                placeholder=\"Answer 1\"\r\n                required\r\n              />\r\n            </FormGroup>\r\n<FormGroup controlId=\"formBasicSubject\">\r\n              <Label className=\"text-muted\">Qus.2</Label>\r\n              <Input\r\n                type=\"text\"\r\n                name=\"Qus2\"\r\n                className=\"text-primary\"\r\n                value={this.state.Qus2}\r\n                onChange={this.handleChange.bind(this, 'Qus2')}\r\n                placeholder=\"Question 2\"\r\n                required\r\n              />\r\n            </FormGroup>\r\n<FormGroup controlId=\"formBasicMessage\">\r\n              <Label className=\"text-muted\">Ans.2</Label>\r\n              <Input\r\n                type=\"text\"\r\n                name=\"Ans2\"\r\n                className=\"text-primary\"\r\n                value={this.state.Ans2}\r\n                placeholder=\"Answer 2\"\r\n                required\r\n                onChange={this.handleChange.bind(this, 'Ans2')}\r\n              />\r\n            </FormGroup>\r\n<Button variant=\"primary\" type=\"submit\">\r\n              Submit\r\n            </Button>\r\n          </Form>\r\n        \r\n      </>\r\n    )\r\n  }\r\n}\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n    return {\r\n      daamSahiHai: (project) => dispatch(daamSahiHai(project))\r\n    }\r\n  }\r\n\r\nexport default connect(null,mapDispatchToProps)(Q2);","D:\\webserv4u\\quizbeater\\src\\components\\daamSahiHai\\createPost\\Q4.js",["636"],"import React from \"react\"\r\nimport { Button, FormFeedback, Form, FormGroup, Label, Input } from 'reactstrap'\r\nimport { connect } from 'react-redux'\r\nimport { daamSahiHai } from \"../../../store/actions/projectAction\"\r\n\r\nclass Q4 extends React.Component {\r\n    \r\n  state = {\r\n    quizType:'',\r\n    Qus1: '',\r\n    Ans1: '',\r\n    Qus2: '',\r\n    Ans2: '',\r\n    Qus3: '',\r\n    Ans3: '',\r\n    Qus4: '',\r\n    Ans4: '',\r\n\r\n  }\r\nhandleSubmit(e) {\r\n    e.preventDefault()\r\n    this.props.daamSahiHai(this.state);\r\n     this.resetForm()\r\n }\r\nresetForm() {\r\n    this.setState({\r\n      quizType:'',\r\n      Qus1: '',\r\n      Ans1: '',\r\n       Qus2: '',\r\n       Ans2: '',\r\n       Qus3: '',\r\n       Ans3: '',\r\n       Qus4: '',\r\n       Ans4: '',\r\n    })\r\n  }\r\nhandleChange = (param, e) => {\r\n    this.setState({ [param]: e.target.value })\r\n  }\r\nrender() {\r\n    return (\r\n      <>\r\n        \r\n          <Form onSubmit={this.handleSubmit.bind(this)}>\r\n          <FormGroup controlId=\"formBasicquizType\">\r\n              <Label className=\"text-muted\">About Quiz</Label>\r\n              <Input\r\n                type=\"text\"\r\n                name=\"quizType\"\r\n                value={this.state.quizType}\r\n                className=\"text-primary\"\r\n                onChange={this.handleChange.bind(this, 'quizType')}\r\n                placeholder=\"About Quiz\"\r\n                required\r\n              />\r\n            </FormGroup>\r\n<FormGroup controlId=\"formBasicName\">\r\n              <Label className=\"text-muted\">Qus.1</Label>\r\n              <Input\r\n                type=\"text\"\r\n                name=\"Qus1\"\r\n                value={this.state.Qus1}\r\n                className=\"text-primary\"\r\n                onChange={this.handleChange.bind(this, 'Qus1')}\r\n                placeholder=\"Question1\"\r\n                required\r\n              />\r\n            </FormGroup>\r\n            <FormGroup controlId=\"formBasicEmail\">\r\n              <Label className=\"text-muted\">Ans.1</Label>\r\n              <Input\r\n                type=\"text\"\r\n                name=\"Ans1\"\r\n                value={this.state.Ans1}\r\n                className=\"text-primary\"\r\n                onChange={this.handleChange.bind(this, 'Ans1')}\r\n                placeholder=\"Answer 1\"\r\n                required\r\n              />\r\n            </FormGroup>\r\n<FormGroup controlId=\"formBasicSubject\">\r\n              <Label className=\"text-muted\">Qus.2</Label>\r\n              <Input\r\n                type=\"text\"\r\n                name=\"Qus2\"\r\n                className=\"text-primary\"\r\n                value={this.state.Qus2}\r\n                onChange={this.handleChange.bind(this, 'Qus2')}\r\n                placeholder=\"Question 2\"\r\n                required\r\n              />\r\n            </FormGroup>\r\n<FormGroup controlId=\"formBasicMessage\">\r\n              <Label className=\"text-muted\">Ans.2</Label>\r\n              <Input\r\n                type=\"text\"\r\n                name=\"message\"\r\n                className=\"text-primary\"\r\n                value={this.state.Ans2}\r\n                placeholder=\"Answer 2\"\r\n                required\r\n                onChange={this.handleChange.bind(this, 'Ans2')}\r\n              />\r\n            </FormGroup>\r\n            <FormGroup controlId=\"formBasicSubject1\">\r\n              <Label className=\"text-muted\">Qus.3</Label>\r\n              <Input\r\n                type=\"text\"\r\n                name=\"Qus3\"\r\n                className=\"text-primary\"\r\n                value={this.state.Qus3}\r\n                onChange={this.handleChange.bind(this, 'Qus3')}\r\n                placeholder=\"Question 3\"\r\n                required\r\n              />\r\n            </FormGroup>\r\n<FormGroup controlId=\"formBasicMessage1\">\r\n              <Label className=\"text-muted\">Ans.3</Label>\r\n              <Input\r\n                type=\"text\"\r\n                name=\"Ans3\"\r\n                className=\"text-primary\"\r\n                value={this.state.Ans3}\r\n                placeholder=\"Answer 3\"\r\n                required\r\n                onChange={this.handleChange.bind(this, 'Ans3')}\r\n              />\r\n            </FormGroup>\r\n            <FormGroup controlId=\"formBasicSubject13\">\r\n              <Label className=\"text-muted\">Qus.4</Label>\r\n              <Input\r\n                type=\"text\"\r\n                name=\"Qus4\"\r\n                className=\"text-primary\"\r\n                value={this.state.Qus4}\r\n                onChange={this.handleChange.bind(this, 'Qus4')}\r\n                placeholder=\"Question 4\"\r\n                required\r\n              />\r\n            </FormGroup>\r\n<FormGroup controlId=\"formBasicMessage12\">\r\n              <Label className=\"text-muted\">Ans.4</Label>\r\n              <Input\r\n                type=\"text\"\r\n                name=\"Ans4\"\r\n                className=\"text-primary\"\r\n                value={this.state.Ans4}\r\n                placeholder=\"Answer 4\"\r\n                required\r\n                onChange={this.handleChange.bind(this, 'Ans4')}\r\n              />\r\n            </FormGroup>\r\n<Button variant=\"primary\" type=\"submit\">\r\n              Submit\r\n            </Button>\r\n          </Form>\r\n        \r\n      </>\r\n    )\r\n  }\r\n  }\r\n  \r\n\r\n  const mapDispatchToProps = dispatch => {\r\n    return {\r\n      daamSahiHai: (project) => dispatch(daamSahiHai(project))\r\n    }\r\n  }\r\n\r\nexport default connect(null,mapDispatchToProps)(Q4);","D:\\webserv4u\\quizbeater\\src\\components\\daamSahiHai\\createPost\\Q5.js",["637"],"import React from \"react\"\r\nimport { Button, FormFeedback, Form, FormGroup, Label, Input } from 'reactstrap'\r\nimport { connect } from 'react-redux'\r\nimport { daamSahiHai } from \"../../../store/actions/projectAction\"\r\n\r\n\r\nclass Q5 extends React.Component {\r\n    \r\n  state = {\r\n    quizType:'',\r\n    Qus1: '',\r\n    Ans1: '',\r\n    Qus2: '',\r\n    Ans2: '',\r\n    Qus3: '',\r\n    Ans3: '',\r\n    Qus4: '',\r\n    Ans4: '',\r\n    Qus5: '',\r\n    Ans5: '',\r\n\r\n  }\r\nhandleSubmit(e) {\r\n    e.preventDefault()\r\n    this.props.daamSahiHai(this.state);\r\n    \r\n     this.resetForm()\r\n }\r\nresetForm() {\r\n    this.setState({\r\n      quizType:'',\r\n      Qus1: '',\r\n      Ans1: '',\r\n       Qus2: '',\r\n       Ans2: '',\r\n       Qus3: '',\r\n       Ans3: '',\r\n       Qus4: '',\r\n       Ans4: '',\r\n       Qus5: '',\r\n       Ans5: '',\r\n   \r\n    })\r\n  }\r\nhandleChange = (param, e) => {\r\n    this.setState({ [param]: e.target.value })\r\n  }\r\nrender() {\r\n    return (\r\n      <>\r\n        \r\n          <Form onSubmit={this.handleSubmit.bind(this)}>\r\n          <FormGroup controlId=\"formBasicquizType\">\r\n              <Label className=\"text-muted\">About Quiz</Label>\r\n              <Input\r\n                type=\"text\"\r\n                name=\"quizType\"\r\n                value={this.state.quizType}\r\n                className=\"text-primary\"\r\n                onChange={this.handleChange.bind(this, 'quizType')}\r\n                placeholder=\"About Quiz\"\r\n                required\r\n              />\r\n            </FormGroup>\r\n<FormGroup controlId=\"formBasicName\">\r\n              <Label className=\"text-muted\">Qus.1</Label>\r\n              <Input\r\n                type=\"text\"\r\n                name=\"Qus1\"\r\n                value={this.state.Qus1}\r\n                className=\"text-primary\"\r\n                onChange={this.handleChange.bind(this, 'Qus1')}\r\n                placeholder=\"Question1\"\r\n                required\r\n              />\r\n            </FormGroup>\r\n            <FormGroup controlId=\"formBasicEmail\">\r\n              <Label className=\"text-muted\">Ans.1</Label>\r\n              <Input\r\n                type=\"text\"\r\n                name=\"Ans1\"\r\n                value={this.state.Ans1}\r\n                className=\"text-primary\"\r\n                onChange={this.handleChange.bind(this, 'Ans1')}\r\n                placeholder=\"Answer 1\"\r\n                required\r\n              />\r\n            </FormGroup>\r\n<FormGroup controlId=\"formBasicSubject\">\r\n              <Label className=\"text-muted\">Qus.2</Label>\r\n              <Input\r\n                type=\"text\"\r\n                name=\"Qus2\"\r\n                className=\"text-primary\"\r\n                value={this.state.Qus2}\r\n                onChange={this.handleChange.bind(this, 'Qus2')}\r\n                placeholder=\"Question 2\"\r\n                required\r\n              />\r\n            </FormGroup>\r\n<FormGroup controlId=\"formBasicMessage\">\r\n              <Label className=\"text-muted\">Ans.2</Label>\r\n              <Input\r\n                type=\"text\"\r\n                name=\"message\"\r\n                className=\"text-primary\"\r\n                value={this.state.Ans2}\r\n                placeholder=\"Answer 2\"\r\n                required\r\n                onChange={this.handleChange.bind(this, 'Ans2')}\r\n              />\r\n            </FormGroup>\r\n            <FormGroup controlId=\"formBasicSubject1\">\r\n              <Label className=\"text-muted\">Qus.3</Label>\r\n              <Input\r\n                type=\"text\"\r\n                name=\"Qus3\"\r\n                className=\"text-primary\"\r\n                value={this.state.Qus3}\r\n                onChange={this.handleChange.bind(this, 'Qus3')}\r\n                placeholder=\"Question 3\"\r\n                required\r\n              />\r\n            </FormGroup>\r\n<FormGroup controlId=\"formBasicMessage12\">\r\n              <Label className=\"text-muted\">Ans.3</Label>\r\n              <Input\r\n                type=\"text\"\r\n                name=\"Ans3\"\r\n                className=\"text-primary\"\r\n                value={this.state.Ans3}\r\n                placeholder=\"Answer 3\"\r\n                required\r\n                onChange={this.handleChange.bind(this, 'Ans3')}\r\n              />\r\n            </FormGroup>\r\n            <FormGroup controlId=\"formBasicSubject13\">\r\n              <Label className=\"text-muted\">Qus.4</Label>\r\n              <Input\r\n                type=\"text\"\r\n                name=\"Qus4\"\r\n                className=\"text-primary\"\r\n                value={this.state.Qus4}\r\n                onChange={this.handleChange.bind(this, 'Qus4')}\r\n                placeholder=\"Question 4\"\r\n                required\r\n              />\r\n            </FormGroup>\r\n<FormGroup controlId=\"formBasicMessage12\">\r\n              <Label className=\"text-muted\">Ans.4</Label>\r\n              <Input\r\n                type=\"text\"\r\n                name=\"Ans4\"\r\n                className=\"text-primary\"\r\n                value={this.state.Ans4}\r\n                placeholder=\"Answer 4\"\r\n                required\r\n                onChange={this.handleChange.bind(this, 'Ans4')}\r\n              />\r\n            </FormGroup>\r\n            <FormGroup controlId=\"formBasicSubject1as3\">\r\n              <Label className=\"text-muted\">Qus.5</Label>\r\n              <Input\r\n                type=\"text\"\r\n                name=\"Qus5\"\r\n                className=\"text-primary\"\r\n                value={this.state.Qus5}\r\n                onChange={this.handleChange.bind(this, 'Qus5')}\r\n                placeholder=\"Question 5\"\r\n                required\r\n              />\r\n            </FormGroup>\r\n<FormGroup controlId=\"formBasicMessage121\">\r\n              <Label className=\"text-muted\">Ans.5</Label>\r\n              <Input\r\n                type=\"text\"\r\n                name=\"Ans5\"\r\n                className=\"text-primary\"\r\n                value={this.state.Ans5}\r\n                placeholder=\"Answer 5\"\r\n                required\r\n                onChange={this.handleChange.bind(this, 'Ans5')}\r\n              />\r\n            </FormGroup>\r\n<Button variant=\"primary\" type=\"submit\">\r\n              Submit\r\n            </Button>\r\n          </Form>\r\n        \r\n      </>\r\n    )\r\n  }\r\n  }\r\n\r\n  const mapDispatchToProps = dispatch => {\r\n    return {\r\n      daamSahiHai: (project) => dispatch(daamSahiHai(project))\r\n    }\r\n  }\r\n\r\nexport default connect(null,mapDispatchToProps)(Q5);","D:\\webserv4u\\quizbeater\\src\\components\\fYI\\fYI.js",["638"],"import React, { Component } from 'react';\r\nimport { Card } from 'react-bootstrap';\r\nimport HowToPlay from './howToPlay';\r\nimport QuizDescription from './quizDesc';\r\nimport QuizHead from './quizHead';\r\nimport SlidingImage from './slidingImage';\r\n\r\nimport FetchComment from '../comment/fetchComment'\r\nimport Comment from '../comment/comment'\r\nimport FetchFYI from './fetchFYI';\r\nimport GameType from '../dashboard/homeDashboard/gameType';\r\n\r\n\r\nconst FYI = () => {\r\n\r\n\r\n \r\n    return(\r\n    <div>\r\n   <Card >\r\n  <QuizHead />\r\n  <SlidingImage />\r\n  <QuizDescription />\r\n <HowToPlay />\r\n<FetchFYI />\r\n<GameType />\r\n  <FetchComment />\r\n  <Comment />\r\n \r\n   </Card>\r\n\r\n    </div>\r\n    )\r\n}\r\n\r\n\r\n\r\n\r\n export default FYI;\r\n","D:\\webserv4u\\quizbeater\\src\\components\\fYI\\quizDesc.js",["639"],"import React from 'react';\r\nimport { Card, Image } from 'react-bootstrap';\r\nimport MetaDecorator from \"../../utils/metaDecorator\"\r\n\r\nconst QuizDescription = () =>{\r\n    return (\r\n        <div>\r\n             <MetaDecorator title='about flipkart FYI Quiz description' \r\n    description=' Here you have to get quick live updates for each FYI Quiz Question everyday at\r\n    12:00am.' />\r\n      <MetaDecorator title='about flipkart FYI(For Your Information) Quiz description' \r\n    description=' Here you have to get quick live updates for each FYI(For Your Information) Quiz Question everyday at\r\n    12:00am.' />\r\n<Card.Text><br></br>\r\n      Here you have to get quick live updates for each Flipkart <b>FYI </b>Quiz Question everyday at\r\n       12:00am.\r\n      By answering these Quiz Questions you can win many gift vouchers,coupons,gifts,super coins etc.\r\n      &nbsp; <br></br> <Image src=\"https://seeklogo.com/images/F/flipkart-logo-3F33927DAA-seeklogo.com.png\"\r\n      width={60}\r\n      height={60}\r\n      roundedCircle />\r\n      <a href=\"https://www.flipkart.com/\">&nbsp;<b>Flipkart</b> </a>\r\n      <b><i>daily Flipkart <b>FYI</b> Quiz is Back.</i>  </b>Daily <b>FYI </b> Quiz is generally asks\r\n       General Knowledge based Questions.Flipkart Quiz is started at 12:00Am and ends at 11:59am.\r\n       <b><i>QuizBeater</i></b> provide these answers at 11:50pm daily.By answering them you have to\r\n        get some relevant prize,coupons,gift or super coins  by regular participation in daily quiz.\r\n        <b>Make sure you have to follow our official <a href=\"#\"><b><b>Telegram</b></b> </a> channel to get daily \r\n          imediate answers for each Quiz  </b>\r\n    </Card.Text>\r\n    <br></br> \r\n        </div>\r\n    )\r\n}\r\nexport default QuizDescription;","D:\\webserv4u\\quizbeater\\src\\components\\fYI\\quizHead.js",[],"D:\\webserv4u\\quizbeater\\src\\components\\fYI\\slidingImage.js",[],"D:\\webserv4u\\quizbeater\\src\\components\\fYI\\fetchFYI.js",["640"],"D:\\webserv4u\\quizbeater\\src\\components\\fYI\\howToPlay.js",[],"D:\\webserv4u\\quizbeater\\src\\components\\fYI\\fetchFYISummary.js",[],"D:\\webserv4u\\quizbeater\\src\\components\\fYI\\createPost\\createFYI.js",[],"D:\\webserv4u\\quizbeater\\src\\components\\fYI\\createPost\\selectedPage.js",["641","642","643","644"],"D:\\webserv4u\\quizbeater\\src\\components\\fYI\\createPost\\Q1.js",[],"D:\\webserv4u\\quizbeater\\src\\components\\fYI\\createPost\\Q2.js",["645"],"import React, { Component } from 'react'\r\nimport { Button, FormFeedback, Form, FormGroup, Label, Input } from 'reactstrap'\r\nimport { connect } from 'react-redux'\r\nimport { fYI } from \"../../../store/actions/projectAction\"\r\nclass Q2 extends Component {\r\n  state = {\r\n    quizType:'',\r\n    Qus1: '',\r\n    Ans1: '',\r\n    Qus2: '',\r\n    Ans2: '',\r\n  }\r\nhandleSubmit(e) {\r\n    e.preventDefault()\r\n    this.props.fYI(this.state);\r\n     this.resetForm()\r\n }\r\nresetForm() {\r\n    this.setState({\r\n      quizType:'',\r\n      Qus1: '',\r\n      Ans1: '',\r\n       Qus2: '',\r\n       Ans2: '',\r\n    })\r\n  }\r\nhandleChange = (param, e) => {\r\n    this.setState({ [param]: e.target.value })\r\n  }\r\nrender() {\r\n    return (\r\n      <>\r\n        \r\n          <Form onSubmit={this.handleSubmit.bind(this)}>\r\n            \r\n          <FormGroup controlId=\"formBasicquizType\">\r\n              <Label className=\"text-muted\">About Quiz</Label>\r\n              <Input\r\n                type=\"text\"\r\n                name=\"quizType\"\r\n                value={this.state.quizType}\r\n                className=\"text-primary\"\r\n                onChange={this.handleChange.bind(this, 'quizType')}\r\n                placeholder=\"About Quiz\"\r\n                required\r\n              />\r\n            </FormGroup>\r\n\r\n<FormGroup controlId=\"formBasicName\">\r\n              <Label className=\"text-muted\">Qus.1</Label>\r\n              <Input\r\n                type=\"text\"\r\n                name=\"Qus1\"\r\n                value={this.state.Qus1}\r\n                className=\"text-primary\"\r\n                onChange={this.handleChange.bind(this, 'Qus1')}\r\n                placeholder=\"Question1\"\r\n                required\r\n              />\r\n            </FormGroup>\r\n            <FormGroup controlId=\"formBasicEmail\">\r\n              <Label className=\"text-muted\">Ans.1</Label>\r\n              <Input\r\n                type=\"text\"\r\n                name=\"Ans1\"\r\n                value={this.state.Ans1}\r\n                className=\"text-primary\"\r\n                onChange={this.handleChange.bind(this, 'Ans1')}\r\n                placeholder=\"Answer 1\"\r\n                required\r\n              />\r\n            </FormGroup>\r\n<FormGroup controlId=\"formBasicSubject\">\r\n              <Label className=\"text-muted\">Qus.2</Label>\r\n              <Input\r\n                type=\"text\"\r\n                name=\"Qus2\"\r\n                className=\"text-primary\"\r\n                value={this.state.Qus2}\r\n                onChange={this.handleChange.bind(this, 'Qus2')}\r\n                placeholder=\"Question 2\"\r\n                required\r\n              />\r\n            </FormGroup>\r\n<FormGroup controlId=\"formBasicMessage\">\r\n              <Label className=\"text-muted\">Ans.2</Label>\r\n              <Input\r\n                type=\"text\"\r\n                name=\"Ans2\"\r\n                className=\"text-primary\"\r\n                value={this.state.Ans2}\r\n                placeholder=\"Answer 2\"\r\n                required\r\n                onChange={this.handleChange.bind(this, 'Ans2')}\r\n              />\r\n            </FormGroup>\r\n<Button variant=\"primary\" type=\"submit\">\r\n              Submit\r\n            </Button>\r\n          </Form>\r\n        \r\n      </>\r\n    )\r\n  }\r\n}\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n    return {\r\n      fYI: (project) => dispatch(fYI(project))\r\n    }\r\n  }\r\n\r\nexport default connect(null,mapDispatchToProps)(Q2);","D:\\webserv4u\\quizbeater\\src\\components\\fYI\\createPost\\Q3.js",["646"],"import React from \"react\"\r\nimport { Button, FormFeedback, Form, FormGroup, Label, Input } from 'reactstrap'\r\nimport { connect } from 'react-redux'\r\nimport { fYI } from \"../../../store/actions/projectAction\"\r\n\r\nclass Q3 extends React.Component {\r\n    \r\n  state = {\r\n    quizType:'',\r\n    Qus1: '',\r\n    Ans1: '',\r\n    Qus2: '',\r\n    Ans2: '',\r\n    Qus3: '',\r\n    Ans3: '',\r\n\r\n  }\r\nhandleSubmit(e) {\r\n    e.preventDefault()\r\n    this.props.fYI(this.state);\r\n     this.resetForm()\r\n }\r\nresetForm() {\r\n    this.setState({\r\n      quizType:'',\r\n      Qus1: '',\r\n      Ans1: '',\r\n       Qus2: '',\r\n       Ans2: '',\r\n       Qus3: '',\r\n       Ans3: '',\r\n    })\r\n  }\r\nhandleChange = (param, e) => {\r\n    this.setState({ [param]: e.target.value })\r\n  }\r\nrender() {\r\n    return (\r\n      <>\r\n        \r\n          <Form onSubmit={this.handleSubmit.bind(this)}>\r\n          <FormGroup controlId=\"formBasicquizType\">\r\n              <Label className=\"text-muted\">About Quiz</Label>\r\n              <Input\r\n                type=\"text\"\r\n                name=\"quizType\"\r\n                value={this.state.quizType}\r\n                className=\"text-primary\"\r\n                onChange={this.handleChange.bind(this, 'quizType')}\r\n                placeholder=\"About Quiz\"\r\n                required\r\n              />\r\n            </FormGroup>\r\n<FormGroup controlId=\"formBasicName\">\r\n              <Label className=\"text-muted\">Qus.1</Label>\r\n              <Input\r\n                type=\"text\"\r\n                name=\"Qus1\"\r\n                value={this.state.Qus1}\r\n                className=\"text-primary\"\r\n                onChange={this.handleChange.bind(this, 'Qus1')}\r\n                placeholder=\"Question1\"\r\n                required\r\n              />\r\n            </FormGroup>\r\n            <FormGroup controlId=\"formBasicEmail\">\r\n              <Label className=\"text-muted\">Ans.1</Label>\r\n              <Input\r\n                type=\"text\"\r\n                name=\"Ans1\"\r\n                value={this.state.Ans1}\r\n                className=\"text-primary\"\r\n                onChange={this.handleChange.bind(this, 'Ans1')}\r\n                placeholder=\"Answer 1\"\r\n                required\r\n              />\r\n            </FormGroup>\r\n<FormGroup controlId=\"formBasicSubject\">\r\n              <Label className=\"text-muted\">Qus.2</Label>\r\n              <Input\r\n                type=\"text\"\r\n                name=\"Qus2\"\r\n                className=\"text-primary\"\r\n                value={this.state.Qus2}\r\n                onChange={this.handleChange.bind(this, 'Qus2')}\r\n                placeholder=\"Question 2\"\r\n                required\r\n              />\r\n            </FormGroup>\r\n<FormGroup controlId=\"formBasicMessage\">\r\n              <Label className=\"text-muted\">Ans.2</Label>\r\n              <Input\r\n                type=\"text\"\r\n                name=\"message\"\r\n                className=\"text-primary\"\r\n                value={this.state.Ans2}\r\n                placeholder=\"Answer 2\"\r\n                required\r\n                onChange={this.handleChange.bind(this, 'Ans2')}\r\n              />\r\n            </FormGroup>\r\n            <FormGroup controlId=\"formBasicSubject1\">\r\n              <Label className=\"text-muted\">Qus.3</Label>\r\n              <Input\r\n                type=\"text\"\r\n                name=\"Qus3\"\r\n                className=\"text-primary\"\r\n                value={this.state.Qus3}\r\n                onChange={this.handleChange.bind(this, 'Qus3')}\r\n                placeholder=\"Question 3\"\r\n                required\r\n              />\r\n            </FormGroup>\r\n<FormGroup controlId=\"formBasicMessage1\">\r\n              <Label className=\"text-muted\">Ans.3</Label>\r\n              <Input\r\n                type=\"text\"\r\n                name=\"Ans3\"\r\n                className=\"text-primary\"\r\n                value={this.state.Ans3}\r\n                placeholder=\"Answer 3\"\r\n                required\r\n                onChange={this.handleChange.bind(this, 'Ans3')}\r\n              />\r\n            </FormGroup>\r\n<Button variant=\"primary\" type=\"submit\">\r\n              Submit\r\n            </Button>\r\n          </Form>\r\n        \r\n      </>\r\n    )\r\n  }\r\n  }\r\n  \r\n\r\n  const mapDispatchToProps = dispatch => {\r\n    return {\r\n      fYI: (project) => dispatch(fYI(project))\r\n    }\r\n  }\r\n\r\nexport default connect(null,mapDispatchToProps)(Q3);","D:\\webserv4u\\quizbeater\\src\\components\\fYI\\createPost\\Q5.js",["647"],"import React from \"react\"\r\nimport { Button, FormFeedback, Form, FormGroup, Label, Input } from 'reactstrap'\r\nimport { connect } from 'react-redux'\r\nimport { fYI } from \"../../../store/actions/projectAction\"\r\n\r\n\r\nclass Q5 extends React.Component {\r\n    \r\n  state = {\r\n    quizType:'',\r\n    Qus1: '',\r\n    Ans1: '',\r\n    Qus2: '',\r\n    Ans2: '',\r\n    Qus3: '',\r\n    Ans3: '',\r\n    Qus4: '',\r\n    Ans4: '',\r\n    Qus5: '',\r\n    Ans5: '',\r\n\r\n  }\r\nhandleSubmit(e) {\r\n    e.preventDefault()\r\n    this.props.fYI(this.state);\r\n    \r\n     this.resetForm()\r\n }\r\nresetForm() {\r\n    this.setState({\r\n      quizType:'',\r\n      Qus1: '',\r\n      Ans1: '',\r\n       Qus2: '',\r\n       Ans2: '',\r\n       Qus3: '',\r\n       Ans3: '',\r\n       Qus4: '',\r\n       Ans4: '',\r\n       Qus5: '',\r\n       Ans5: '',\r\n   \r\n    })\r\n  }\r\nhandleChange = (param, e) => {\r\n    this.setState({ [param]: e.target.value })\r\n  }\r\nrender() {\r\n    return (\r\n      <>\r\n        \r\n          <Form onSubmit={this.handleSubmit.bind(this)}>\r\n          <FormGroup controlId=\"formBasicquizType\">\r\n              <Label className=\"text-muted\">About Quiz</Label>\r\n              <Input\r\n                type=\"text\"\r\n                name=\"quizType\"\r\n                value={this.state.quizType}\r\n                className=\"text-primary\"\r\n                onChange={this.handleChange.bind(this, 'quizType')}\r\n                placeholder=\"About Quiz\"\r\n                required\r\n              />\r\n            </FormGroup>\r\n<FormGroup controlId=\"formBasicName\">\r\n              <Label className=\"text-muted\">Qus.1</Label>\r\n              <Input\r\n                type=\"text\"\r\n                name=\"Qus1\"\r\n                value={this.state.Qus1}\r\n                className=\"text-primary\"\r\n                onChange={this.handleChange.bind(this, 'Qus1')}\r\n                placeholder=\"Question1\"\r\n                required\r\n              />\r\n            </FormGroup>\r\n            <FormGroup controlId=\"formBasicEmail\">\r\n              <Label className=\"text-muted\">Ans.1</Label>\r\n              <Input\r\n                type=\"text\"\r\n                name=\"Ans1\"\r\n                value={this.state.Ans1}\r\n                className=\"text-primary\"\r\n                onChange={this.handleChange.bind(this, 'Ans1')}\r\n                placeholder=\"Answer 1\"\r\n                required\r\n              />\r\n            </FormGroup>\r\n<FormGroup controlId=\"formBasicSubject\">\r\n              <Label className=\"text-muted\">Qus.2</Label>\r\n              <Input\r\n                type=\"text\"\r\n                name=\"Qus2\"\r\n                className=\"text-primary\"\r\n                value={this.state.Qus2}\r\n                onChange={this.handleChange.bind(this, 'Qus2')}\r\n                placeholder=\"Question 2\"\r\n                required\r\n              />\r\n            </FormGroup>\r\n<FormGroup controlId=\"formBasicMessage\">\r\n              <Label className=\"text-muted\">Ans.2</Label>\r\n              <Input\r\n                type=\"text\"\r\n                name=\"message\"\r\n                className=\"text-primary\"\r\n                value={this.state.Ans2}\r\n                placeholder=\"Answer 2\"\r\n                required\r\n                onChange={this.handleChange.bind(this, 'Ans2')}\r\n              />\r\n            </FormGroup>\r\n            <FormGroup controlId=\"formBasicSubject1\">\r\n              <Label className=\"text-muted\">Qus.3</Label>\r\n              <Input\r\n                type=\"text\"\r\n                name=\"Qus3\"\r\n                className=\"text-primary\"\r\n                value={this.state.Qus3}\r\n                onChange={this.handleChange.bind(this, 'Qus3')}\r\n                placeholder=\"Question 3\"\r\n                required\r\n              />\r\n            </FormGroup>\r\n<FormGroup controlId=\"formBasicMessage12\">\r\n              <Label className=\"text-muted\">Ans.3</Label>\r\n              <Input\r\n                type=\"text\"\r\n                name=\"Ans3\"\r\n                className=\"text-primary\"\r\n                value={this.state.Ans3}\r\n                placeholder=\"Answer 3\"\r\n                required\r\n                onChange={this.handleChange.bind(this, 'Ans3')}\r\n              />\r\n            </FormGroup>\r\n            <FormGroup controlId=\"formBasicSubject13\">\r\n              <Label className=\"text-muted\">Qus.4</Label>\r\n              <Input\r\n                type=\"text\"\r\n                name=\"Qus4\"\r\n                className=\"text-primary\"\r\n                value={this.state.Qus4}\r\n                onChange={this.handleChange.bind(this, 'Qus4')}\r\n                placeholder=\"Question 4\"\r\n                required\r\n              />\r\n            </FormGroup>\r\n<FormGroup controlId=\"formBasicMessage12\">\r\n              <Label className=\"text-muted\">Ans.4</Label>\r\n              <Input\r\n                type=\"text\"\r\n                name=\"Ans4\"\r\n                className=\"text-primary\"\r\n                value={this.state.Ans4}\r\n                placeholder=\"Answer 4\"\r\n                required\r\n                onChange={this.handleChange.bind(this, 'Ans4')}\r\n              />\r\n            </FormGroup>\r\n            <FormGroup controlId=\"formBasicSubject1as3\">\r\n              <Label className=\"text-muted\">Qus.5</Label>\r\n              <Input\r\n                type=\"text\"\r\n                name=\"Qus5\"\r\n                className=\"text-primary\"\r\n                value={this.state.Qus5}\r\n                onChange={this.handleChange.bind(this, 'Qus5')}\r\n                placeholder=\"Question 5\"\r\n                required\r\n              />\r\n            </FormGroup>\r\n<FormGroup controlId=\"formBasicMessage121\">\r\n              <Label className=\"text-muted\">Ans.5</Label>\r\n              <Input\r\n                type=\"text\"\r\n                name=\"Ans5\"\r\n                className=\"text-primary\"\r\n                value={this.state.Ans5}\r\n                placeholder=\"Answer 5\"\r\n                required\r\n                onChange={this.handleChange.bind(this, 'Ans5')}\r\n              />\r\n            </FormGroup>\r\n<Button variant=\"primary\" type=\"submit\">\r\n              Submit\r\n            </Button>\r\n          </Form>\r\n        \r\n      </>\r\n    )\r\n  }\r\n  }\r\n\r\n  const mapDispatchToProps = dispatch => {\r\n    return {\r\n      fYI: (project) => dispatch(fYI(project))\r\n    }\r\n  }\r\n\r\nexport default connect(null,mapDispatchToProps)(Q5);","D:\\webserv4u\\quizbeater\\src\\components\\fYI\\createPost\\Q4.js",["648"],"import React from \"react\"\r\nimport { Button, FormFeedback, Form, FormGroup, Label, Input } from 'reactstrap'\r\nimport { connect } from 'react-redux'\r\nimport { fYI } from \"../../../store/actions/projectAction\"\r\n\r\nclass Q4 extends React.Component {\r\n    \r\n  state = {\r\n    quizType:'',\r\n    Qus1: '',\r\n    Ans1: '',\r\n    Qus2: '',\r\n    Ans2: '',\r\n    Qus3: '',\r\n    Ans3: '',\r\n    Qus4: '',\r\n    Ans4: '',\r\n\r\n  }\r\nhandleSubmit(e) {\r\n    e.preventDefault()\r\n    this.props.fYI(this.state);\r\n     this.resetForm()\r\n }\r\nresetForm() {\r\n    this.setState({\r\n      quizType:'',\r\n      Qus1: '',\r\n      Ans1: '',\r\n       Qus2: '',\r\n       Ans2: '',\r\n       Qus3: '',\r\n       Ans3: '',\r\n       Qus4: '',\r\n       Ans4: '',\r\n    })\r\n  }\r\nhandleChange = (param, e) => {\r\n    this.setState({ [param]: e.target.value })\r\n  }\r\nrender() {\r\n    return (\r\n      <>\r\n        \r\n          <Form onSubmit={this.handleSubmit.bind(this)}>\r\n          <FormGroup controlId=\"formBasicquizType\">\r\n              <Label className=\"text-muted\">About Quiz</Label>\r\n              <Input\r\n                type=\"text\"\r\n                name=\"quizType\"\r\n                value={this.state.quizType}\r\n                className=\"text-primary\"\r\n                onChange={this.handleChange.bind(this, 'quizType')}\r\n                placeholder=\"About Quiz\"\r\n                required\r\n              />\r\n            </FormGroup>\r\n<FormGroup controlId=\"formBasicName\">\r\n              <Label className=\"text-muted\">Qus.1</Label>\r\n              <Input\r\n                type=\"text\"\r\n                name=\"Qus1\"\r\n                value={this.state.Qus1}\r\n                className=\"text-primary\"\r\n                onChange={this.handleChange.bind(this, 'Qus1')}\r\n                placeholder=\"Question1\"\r\n                required\r\n              />\r\n            </FormGroup>\r\n            <FormGroup controlId=\"formBasicEmail\">\r\n              <Label className=\"text-muted\">Ans.1</Label>\r\n              <Input\r\n                type=\"text\"\r\n                name=\"Ans1\"\r\n                value={this.state.Ans1}\r\n                className=\"text-primary\"\r\n                onChange={this.handleChange.bind(this, 'Ans1')}\r\n                placeholder=\"Answer 1\"\r\n                required\r\n              />\r\n            </FormGroup>\r\n<FormGroup controlId=\"formBasicSubject\">\r\n              <Label className=\"text-muted\">Qus.2</Label>\r\n              <Input\r\n                type=\"text\"\r\n                name=\"Qus2\"\r\n                className=\"text-primary\"\r\n                value={this.state.Qus2}\r\n                onChange={this.handleChange.bind(this, 'Qus2')}\r\n                placeholder=\"Question 2\"\r\n                required\r\n              />\r\n            </FormGroup>\r\n<FormGroup controlId=\"formBasicMessage\">\r\n              <Label className=\"text-muted\">Ans.2</Label>\r\n              <Input\r\n                type=\"text\"\r\n                name=\"message\"\r\n                className=\"text-primary\"\r\n                value={this.state.Ans2}\r\n                placeholder=\"Answer 2\"\r\n                required\r\n                onChange={this.handleChange.bind(this, 'Ans2')}\r\n              />\r\n            </FormGroup>\r\n            <FormGroup controlId=\"formBasicSubject1\">\r\n              <Label className=\"text-muted\">Qus.3</Label>\r\n              <Input\r\n                type=\"text\"\r\n                name=\"Qus3\"\r\n                className=\"text-primary\"\r\n                value={this.state.Qus3}\r\n                onChange={this.handleChange.bind(this, 'Qus3')}\r\n                placeholder=\"Question 3\"\r\n                required\r\n              />\r\n            </FormGroup>\r\n<FormGroup controlId=\"formBasicMessage1\">\r\n              <Label className=\"text-muted\">Ans.3</Label>\r\n              <Input\r\n                type=\"text\"\r\n                name=\"Ans3\"\r\n                className=\"text-primary\"\r\n                value={this.state.Ans3}\r\n                placeholder=\"Answer 3\"\r\n                required\r\n                onChange={this.handleChange.bind(this, 'Ans3')}\r\n              />\r\n            </FormGroup>\r\n            <FormGroup controlId=\"formBasicSubject13\">\r\n              <Label className=\"text-muted\">Qus.4</Label>\r\n              <Input\r\n                type=\"text\"\r\n                name=\"Qus4\"\r\n                className=\"text-primary\"\r\n                value={this.state.Qus4}\r\n                onChange={this.handleChange.bind(this, 'Qus4')}\r\n                placeholder=\"Question 4\"\r\n                required\r\n              />\r\n            </FormGroup>\r\n<FormGroup controlId=\"formBasicMessage12\">\r\n              <Label className=\"text-muted\">Ans.4</Label>\r\n              <Input\r\n                type=\"text\"\r\n                name=\"Ans4\"\r\n                className=\"text-primary\"\r\n                value={this.state.Ans4}\r\n                placeholder=\"Answer 4\"\r\n                required\r\n                onChange={this.handleChange.bind(this, 'Ans4')}\r\n              />\r\n            </FormGroup>\r\n<Button variant=\"primary\" type=\"submit\">\r\n              Submit\r\n            </Button>\r\n          </Form>\r\n        \r\n      </>\r\n    )\r\n  }\r\n  }\r\n  \r\n\r\n  const mapDispatchToProps = dispatch => {\r\n    return {\r\n      fYI: (project) => dispatch(fYI(project))\r\n    }\r\n  }\r\n\r\nexport default connect(null,mapDispatchToProps)(Q4);","D:\\webserv4u\\quizbeater\\src\\components\\kaun\\createPost\\createKaun.js",[],"D:\\webserv4u\\quizbeater\\src\\components\\kaun\\createPost\\selectedPage.js",["649","650","651","652"],"D:\\webserv4u\\quizbeater\\src\\components\\kaun\\createPost\\Q1.js",[],"D:\\webserv4u\\quizbeater\\src\\components\\kaun\\createPost\\Q2.js",["653"],"import React, { Component } from 'react'\r\nimport { Button, FormFeedback, Form, FormGroup, Label, Input } from 'reactstrap'\r\nimport { connect } from 'react-redux'\r\nimport {  kaun } from \"../../../store/actions/projectAction\"\r\nclass Q2 extends Component {\r\n  state = {\r\n    quizType:'',\r\n    Qus1: '',\r\n    Ans1: '',\r\n    Qus2: '',\r\n    Ans2: '',\r\n  }\r\nhandleSubmit(e) {\r\n    e.preventDefault()\r\n    this.props.kaun(this.state);\r\n     this.resetForm()\r\n }\r\nresetForm() {\r\n    this.setState({\r\n      quizType:'',\r\n      Qus1: '',\r\n      Ans1: '',\r\n       Qus2: '',\r\n       Ans2: '',\r\n    })\r\n  }\r\nhandleChange = (param, e) => {\r\n    this.setState({ [param]: e.target.value })\r\n  }\r\nrender() {\r\n    return (\r\n      <>\r\n        \r\n          <Form onSubmit={this.handleSubmit.bind(this)}>\r\n            \r\n          <FormGroup controlId=\"formBasicquizType\">\r\n              <Label className=\"text-muted\">About Quiz</Label>\r\n              <Input\r\n                type=\"text\"\r\n                name=\"quizType\"\r\n                value={this.state.quizType}\r\n                className=\"text-primary\"\r\n                onChange={this.handleChange.bind(this, 'quizType')}\r\n                placeholder=\"About Quiz\"\r\n                required\r\n              />\r\n            </FormGroup>\r\n\r\n<FormGroup controlId=\"formBasicName\">\r\n              <Label className=\"text-muted\">Qus.1</Label>\r\n              <Input\r\n                type=\"text\"\r\n                name=\"Qus1\"\r\n                value={this.state.Qus1}\r\n                className=\"text-primary\"\r\n                onChange={this.handleChange.bind(this, 'Qus1')}\r\n                placeholder=\"Question1\"\r\n                required\r\n              />\r\n            </FormGroup>\r\n            <FormGroup controlId=\"formBasicEmail\">\r\n              <Label className=\"text-muted\">Ans.1</Label>\r\n              <Input\r\n                type=\"text\"\r\n                name=\"Ans1\"\r\n                value={this.state.Ans1}\r\n                className=\"text-primary\"\r\n                onChange={this.handleChange.bind(this, 'Ans1')}\r\n                placeholder=\"Answer 1\"\r\n                required\r\n              />\r\n            </FormGroup>\r\n<FormGroup controlId=\"formBasicSubject\">\r\n              <Label className=\"text-muted\">Qus.2</Label>\r\n              <Input\r\n                type=\"text\"\r\n                name=\"Qus2\"\r\n                className=\"text-primary\"\r\n                value={this.state.Qus2}\r\n                onChange={this.handleChange.bind(this, 'Qus2')}\r\n                placeholder=\"Question 2\"\r\n                required\r\n              />\r\n            </FormGroup>\r\n<FormGroup controlId=\"formBasicMessage\">\r\n              <Label className=\"text-muted\">Ans.2</Label>\r\n              <Input\r\n                type=\"text\"\r\n                name=\"Ans2\"\r\n                className=\"text-primary\"\r\n                value={this.state.Ans2}\r\n                placeholder=\"Answer 2\"\r\n                required\r\n                onChange={this.handleChange.bind(this, 'Ans2')}\r\n              />\r\n            </FormGroup>\r\n<Button variant=\"primary\" type=\"submit\">\r\n              Submit\r\n            </Button>\r\n          </Form>\r\n        \r\n      </>\r\n    )\r\n  }\r\n}\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n    return {\r\n      kaun: (project) => dispatch(kaun(project))\r\n    }\r\n  }\r\n\r\nexport default connect(null,mapDispatchToProps)(Q2);","D:\\webserv4u\\quizbeater\\src\\components\\kaun\\createPost\\Q3.js",["654"],"import React from \"react\"\r\nimport { Button, FormFeedback, Form, FormGroup, Label, Input } from 'reactstrap'\r\nimport { connect } from 'react-redux'\r\nimport {  kaun } from \"../../../store/actions/projectAction\"\r\n\r\nclass Q3 extends React.Component {\r\n    \r\n  state = {\r\n    quizType:'',\r\n    Qus1: '',\r\n    Ans1: '',\r\n    Qus2: '',\r\n    Ans2: '',\r\n    Qus3: '',\r\n    Ans3: '',\r\n\r\n  }\r\nhandleSubmit(e) {\r\n    e.preventDefault()\r\n    this.props.kaun(this.state);\r\n     this.resetForm()\r\n }\r\nresetForm() {\r\n    this.setState({\r\n      quizType:'',\r\n      Qus1: '',\r\n      Ans1: '',\r\n       Qus2: '',\r\n       Ans2: '',\r\n       Qus3: '',\r\n       Ans3: '',\r\n    })\r\n  }\r\nhandleChange = (param, e) => {\r\n    this.setState({ [param]: e.target.value })\r\n  }\r\nrender() {\r\n    return (\r\n      <>\r\n        \r\n          <Form onSubmit={this.handleSubmit.bind(this)}>\r\n          <FormGroup controlId=\"formBasicquizType\">\r\n              <Label className=\"text-muted\">About Quiz</Label>\r\n              <Input\r\n                type=\"text\"\r\n                name=\"quizType\"\r\n                value={this.state.quizType}\r\n                className=\"text-primary\"\r\n                onChange={this.handleChange.bind(this, 'quizType')}\r\n                placeholder=\"About Quiz\"\r\n                required\r\n              />\r\n            </FormGroup>\r\n<FormGroup controlId=\"formBasicName\">\r\n              <Label className=\"text-muted\">Qus.1</Label>\r\n              <Input\r\n                type=\"text\"\r\n                name=\"Qus1\"\r\n                value={this.state.Qus1}\r\n                className=\"text-primary\"\r\n                onChange={this.handleChange.bind(this, 'Qus1')}\r\n                placeholder=\"Question1\"\r\n                required\r\n              />\r\n            </FormGroup>\r\n            <FormGroup controlId=\"formBasicEmail\">\r\n              <Label className=\"text-muted\">Ans.1</Label>\r\n              <Input\r\n                type=\"text\"\r\n                name=\"Ans1\"\r\n                value={this.state.Ans1}\r\n                className=\"text-primary\"\r\n                onChange={this.handleChange.bind(this, 'Ans1')}\r\n                placeholder=\"Answer 1\"\r\n                required\r\n              />\r\n            </FormGroup>\r\n<FormGroup controlId=\"formBasicSubject\">\r\n              <Label className=\"text-muted\">Qus.2</Label>\r\n              <Input\r\n                type=\"text\"\r\n                name=\"Qus2\"\r\n                className=\"text-primary\"\r\n                value={this.state.Qus2}\r\n                onChange={this.handleChange.bind(this, 'Qus2')}\r\n                placeholder=\"Question 2\"\r\n                required\r\n              />\r\n            </FormGroup>\r\n<FormGroup controlId=\"formBasicMessage\">\r\n              <Label className=\"text-muted\">Ans.2</Label>\r\n              <Input\r\n                type=\"text\"\r\n                name=\"message\"\r\n                className=\"text-primary\"\r\n                value={this.state.Ans2}\r\n                placeholder=\"Answer 2\"\r\n                required\r\n                onChange={this.handleChange.bind(this, 'Ans2')}\r\n              />\r\n            </FormGroup>\r\n            <FormGroup controlId=\"formBasicSubject1\">\r\n              <Label className=\"text-muted\">Qus.3</Label>\r\n              <Input\r\n                type=\"text\"\r\n                name=\"Qus3\"\r\n                className=\"text-primary\"\r\n                value={this.state.Qus3}\r\n                onChange={this.handleChange.bind(this, 'Qus3')}\r\n                placeholder=\"Question 3\"\r\n                required\r\n              />\r\n            </FormGroup>\r\n<FormGroup controlId=\"formBasicMessage1\">\r\n              <Label className=\"text-muted\">Ans.3</Label>\r\n              <Input\r\n                type=\"text\"\r\n                name=\"Ans3\"\r\n                className=\"text-primary\"\r\n                value={this.state.Ans3}\r\n                placeholder=\"Answer 3\"\r\n                required\r\n                onChange={this.handleChange.bind(this, 'Ans3')}\r\n              />\r\n            </FormGroup>\r\n<Button variant=\"primary\" type=\"submit\">\r\n              Submit\r\n            </Button>\r\n          </Form>\r\n        \r\n      </>\r\n    )\r\n  }\r\n  }\r\n  \r\n\r\n  const mapDispatchToProps = dispatch => {\r\n    return {\r\n      kaun: (project) => dispatch(kaun(project))\r\n    }\r\n  }\r\n\r\nexport default connect(null,mapDispatchToProps)(Q3);","D:\\webserv4u\\quizbeater\\src\\components\\kaun\\createPost\\Q4.js",["655"],"import React from \"react\"\r\nimport { Button, FormFeedback, Form, FormGroup, Label, Input } from 'reactstrap'\r\nimport { connect } from 'react-redux'\r\nimport {  kaun } from \"../../../store/actions/projectAction\"\r\n\r\nclass Q4 extends React.Component {\r\n    \r\n  state = {\r\n    quizType:'',\r\n    Qus1: '',\r\n    Ans1: '',\r\n    Qus2: '',\r\n    Ans2: '',\r\n    Qus3: '',\r\n    Ans3: '',\r\n    Qus4: '',\r\n    Ans4: '',\r\n\r\n  }\r\nhandleSubmit(e) {\r\n    e.preventDefault()\r\n    this.props.kaun(this.state);\r\n     this.resetForm()\r\n }\r\nresetForm() {\r\n    this.setState({\r\n      quizType:'',\r\n      Qus1: '',\r\n      Ans1: '',\r\n       Qus2: '',\r\n       Ans2: '',\r\n       Qus3: '',\r\n       Ans3: '',\r\n       Qus4: '',\r\n       Ans4: '',\r\n    })\r\n  }\r\nhandleChange = (param, e) => {\r\n    this.setState({ [param]: e.target.value })\r\n  }\r\nrender() {\r\n    return (\r\n      <>\r\n        \r\n          <Form onSubmit={this.handleSubmit.bind(this)}>\r\n          <FormGroup controlId=\"formBasicquizType\">\r\n              <Label className=\"text-muted\">About Quiz</Label>\r\n              <Input\r\n                type=\"text\"\r\n                name=\"quizType\"\r\n                value={this.state.quizType}\r\n                className=\"text-primary\"\r\n                onChange={this.handleChange.bind(this, 'quizType')}\r\n                placeholder=\"About Quiz\"\r\n                required\r\n              />\r\n            </FormGroup>\r\n<FormGroup controlId=\"formBasicName\">\r\n              <Label className=\"text-muted\">Qus.1</Label>\r\n              <Input\r\n                type=\"text\"\r\n                name=\"Qus1\"\r\n                value={this.state.Qus1}\r\n                className=\"text-primary\"\r\n                onChange={this.handleChange.bind(this, 'Qus1')}\r\n                placeholder=\"Question1\"\r\n                required\r\n              />\r\n            </FormGroup>\r\n            <FormGroup controlId=\"formBasicEmail\">\r\n              <Label className=\"text-muted\">Ans.1</Label>\r\n              <Input\r\n                type=\"text\"\r\n                name=\"Ans1\"\r\n                value={this.state.Ans1}\r\n                className=\"text-primary\"\r\n                onChange={this.handleChange.bind(this, 'Ans1')}\r\n                placeholder=\"Answer 1\"\r\n                required\r\n              />\r\n            </FormGroup>\r\n<FormGroup controlId=\"formBasicSubject\">\r\n              <Label className=\"text-muted\">Qus.2</Label>\r\n              <Input\r\n                type=\"text\"\r\n                name=\"Qus2\"\r\n                className=\"text-primary\"\r\n                value={this.state.Qus2}\r\n                onChange={this.handleChange.bind(this, 'Qus2')}\r\n                placeholder=\"Question 2\"\r\n                required\r\n              />\r\n            </FormGroup>\r\n<FormGroup controlId=\"formBasicMessage\">\r\n              <Label className=\"text-muted\">Ans.2</Label>\r\n              <Input\r\n                type=\"text\"\r\n                name=\"message\"\r\n                className=\"text-primary\"\r\n                value={this.state.Ans2}\r\n                placeholder=\"Answer 2\"\r\n                required\r\n                onChange={this.handleChange.bind(this, 'Ans2')}\r\n              />\r\n            </FormGroup>\r\n            <FormGroup controlId=\"formBasicSubject1\">\r\n              <Label className=\"text-muted\">Qus.3</Label>\r\n              <Input\r\n                type=\"text\"\r\n                name=\"Qus3\"\r\n                className=\"text-primary\"\r\n                value={this.state.Qus3}\r\n                onChange={this.handleChange.bind(this, 'Qus3')}\r\n                placeholder=\"Question 3\"\r\n                required\r\n              />\r\n            </FormGroup>\r\n<FormGroup controlId=\"formBasicMessage1\">\r\n              <Label className=\"text-muted\">Ans.3</Label>\r\n              <Input\r\n                type=\"text\"\r\n                name=\"Ans3\"\r\n                className=\"text-primary\"\r\n                value={this.state.Ans3}\r\n                placeholder=\"Answer 3\"\r\n                required\r\n                onChange={this.handleChange.bind(this, 'Ans3')}\r\n              />\r\n            </FormGroup>\r\n            <FormGroup controlId=\"formBasicSubject13\">\r\n              <Label className=\"text-muted\">Qus.4</Label>\r\n              <Input\r\n                type=\"text\"\r\n                name=\"Qus4\"\r\n                className=\"text-primary\"\r\n                value={this.state.Qus4}\r\n                onChange={this.handleChange.bind(this, 'Qus4')}\r\n                placeholder=\"Question 4\"\r\n                required\r\n              />\r\n            </FormGroup>\r\n<FormGroup controlId=\"formBasicMessage12\">\r\n              <Label className=\"text-muted\">Ans.4</Label>\r\n              <Input\r\n                type=\"text\"\r\n                name=\"Ans4\"\r\n                className=\"text-primary\"\r\n                value={this.state.Ans4}\r\n                placeholder=\"Answer 4\"\r\n                required\r\n                onChange={this.handleChange.bind(this, 'Ans4')}\r\n              />\r\n            </FormGroup>\r\n<Button variant=\"primary\" type=\"submit\">\r\n              Submit\r\n            </Button>\r\n          </Form>\r\n        \r\n      </>\r\n    )\r\n  }\r\n  }\r\n  \r\n\r\n  const mapDispatchToProps = dispatch => {\r\n    return {\r\n      kaun: (project) => dispatch(kaun(project))\r\n    }\r\n  }\r\n\r\nexport default connect(null,mapDispatchToProps)(Q4);","D:\\webserv4u\\quizbeater\\src\\components\\kaun\\createPost\\Q5.js",["656"],"import React from \"react\"\r\nimport { Button, FormFeedback, Form, FormGroup, Label, Input } from 'reactstrap'\r\nimport { connect } from 'react-redux'\r\nimport {  kaun } from \"../../../store/actions/projectAction\"\r\n\r\n\r\nclass Q5 extends React.Component {\r\n    \r\n  state = {\r\n    quizType:'',\r\n    Qus1: '',\r\n    Ans1: '',\r\n    Qus2: '',\r\n    Ans2: '',\r\n    Qus3: '',\r\n    Ans3: '',\r\n    Qus4: '',\r\n    Ans4: '',\r\n    Qus5: '',\r\n    Ans5: '',\r\n\r\n  }\r\nhandleSubmit(e) {\r\n    e.preventDefault()\r\n    this.props.kaun(this.state);\r\n    \r\n     this.resetForm()\r\n }\r\nresetForm() {\r\n    this.setState({\r\n      quizType:'',\r\n      Qus1: '',\r\n      Ans1: '',\r\n       Qus2: '',\r\n       Ans2: '',\r\n       Qus3: '',\r\n       Ans3: '',\r\n       Qus4: '',\r\n       Ans4: '',\r\n       Qus5: '',\r\n       Ans5: '',\r\n   \r\n    })\r\n  }\r\nhandleChange = (param, e) => {\r\n    this.setState({ [param]: e.target.value })\r\n  }\r\nrender() {\r\n    return (\r\n      <>\r\n        \r\n          <Form onSubmit={this.handleSubmit.bind(this)}>\r\n          <FormGroup controlId=\"formBasicquizType\">\r\n              <Label className=\"text-muted\">About Quiz</Label>\r\n              <Input\r\n                type=\"text\"\r\n                name=\"quizType\"\r\n                value={this.state.quizType}\r\n                className=\"text-primary\"\r\n                onChange={this.handleChange.bind(this, 'quizType')}\r\n                placeholder=\"About Quiz\"\r\n                required\r\n              />\r\n            </FormGroup>\r\n<FormGroup controlId=\"formBasicName\">\r\n              <Label className=\"text-muted\">Qus.1</Label>\r\n              <Input\r\n                type=\"text\"\r\n                name=\"Qus1\"\r\n                value={this.state.Qus1}\r\n                className=\"text-primary\"\r\n                onChange={this.handleChange.bind(this, 'Qus1')}\r\n                placeholder=\"Question1\"\r\n                required\r\n              />\r\n            </FormGroup>\r\n            <FormGroup controlId=\"formBasicEmail\">\r\n              <Label className=\"text-muted\">Ans.1</Label>\r\n              <Input\r\n                type=\"text\"\r\n                name=\"Ans1\"\r\n                value={this.state.Ans1}\r\n                className=\"text-primary\"\r\n                onChange={this.handleChange.bind(this, 'Ans1')}\r\n                placeholder=\"Answer 1\"\r\n                required\r\n              />\r\n            </FormGroup>\r\n<FormGroup controlId=\"formBasicSubject\">\r\n              <Label className=\"text-muted\">Qus.2</Label>\r\n              <Input\r\n                type=\"text\"\r\n                name=\"Qus2\"\r\n                className=\"text-primary\"\r\n                value={this.state.Qus2}\r\n                onChange={this.handleChange.bind(this, 'Qus2')}\r\n                placeholder=\"Question 2\"\r\n                required\r\n              />\r\n            </FormGroup>\r\n<FormGroup controlId=\"formBasicMessage\">\r\n              <Label className=\"text-muted\">Ans.2</Label>\r\n              <Input\r\n                type=\"text\"\r\n                name=\"message\"\r\n                className=\"text-primary\"\r\n                value={this.state.Ans2}\r\n                placeholder=\"Answer 2\"\r\n                required\r\n                onChange={this.handleChange.bind(this, 'Ans2')}\r\n              />\r\n            </FormGroup>\r\n            <FormGroup controlId=\"formBasicSubject1\">\r\n              <Label className=\"text-muted\">Qus.3</Label>\r\n              <Input\r\n                type=\"text\"\r\n                name=\"Qus3\"\r\n                className=\"text-primary\"\r\n                value={this.state.Qus3}\r\n                onChange={this.handleChange.bind(this, 'Qus3')}\r\n                placeholder=\"Question 3\"\r\n                required\r\n              />\r\n            </FormGroup>\r\n<FormGroup controlId=\"formBasicMessage12\">\r\n              <Label className=\"text-muted\">Ans.3</Label>\r\n              <Input\r\n                type=\"text\"\r\n                name=\"Ans3\"\r\n                className=\"text-primary\"\r\n                value={this.state.Ans3}\r\n                placeholder=\"Answer 3\"\r\n                required\r\n                onChange={this.handleChange.bind(this, 'Ans3')}\r\n              />\r\n            </FormGroup>\r\n            <FormGroup controlId=\"formBasicSubject13\">\r\n              <Label className=\"text-muted\">Qus.4</Label>\r\n              <Input\r\n                type=\"text\"\r\n                name=\"Qus4\"\r\n                className=\"text-primary\"\r\n                value={this.state.Qus4}\r\n                onChange={this.handleChange.bind(this, 'Qus4')}\r\n                placeholder=\"Question 4\"\r\n                required\r\n              />\r\n            </FormGroup>\r\n<FormGroup controlId=\"formBasicMessage12\">\r\n              <Label className=\"text-muted\">Ans.4</Label>\r\n              <Input\r\n                type=\"text\"\r\n                name=\"Ans4\"\r\n                className=\"text-primary\"\r\n                value={this.state.Ans4}\r\n                placeholder=\"Answer 4\"\r\n                required\r\n                onChange={this.handleChange.bind(this, 'Ans4')}\r\n              />\r\n            </FormGroup>\r\n            <FormGroup controlId=\"formBasicSubject1as3\">\r\n              <Label className=\"text-muted\">Qus.5</Label>\r\n              <Input\r\n                type=\"text\"\r\n                name=\"Qus5\"\r\n                className=\"text-primary\"\r\n                value={this.state.Qus5}\r\n                onChange={this.handleChange.bind(this, 'Qus5')}\r\n                placeholder=\"Question 5\"\r\n                required\r\n              />\r\n            </FormGroup>\r\n<FormGroup controlId=\"formBasicMessage121\">\r\n              <Label className=\"text-muted\">Ans.5</Label>\r\n              <Input\r\n                type=\"text\"\r\n                name=\"Ans5\"\r\n                className=\"text-primary\"\r\n                value={this.state.Ans5}\r\n                placeholder=\"Answer 5\"\r\n                required\r\n                onChange={this.handleChange.bind(this, 'Ans5')}\r\n              />\r\n            </FormGroup>\r\n<Button variant=\"primary\" type=\"submit\">\r\n              Submit\r\n            </Button>\r\n          </Form>\r\n        \r\n      </>\r\n    )\r\n  }\r\n  }\r\n\r\n  const mapDispatchToProps = dispatch => {\r\n    return {\r\n      kaun: (project) => dispatch(kaun(project))\r\n    }\r\n  }\r\n\r\nexport default connect(null,mapDispatchToProps)(Q5);","D:\\webserv4u\\quizbeater\\src\\components\\kaun\\kaun.js",["657"],"import React, { Component } from 'react';\r\nimport { Card } from 'react-bootstrap';\r\nimport HowToPlay from './howToPlay';\r\nimport QuizDescription from './quizDesc';\r\nimport QuizHead from './quizHead';\r\nimport SlidingImage from './slidingImage';\r\n\r\nimport FetchComment from '../comment/fetchComment'\r\nimport Comment from '../comment/comment'\r\nimport FetchKaunWhoDidIt from './fetchKaun';\r\nimport GameType from '../dashboard/homeDashboard/gameType';\r\n\r\n\r\n\r\nconst Kaun = () => {\r\n\r\n\r\n \r\n    return(\r\n    <div>\r\n   <Card >\r\n  <QuizHead />\r\n  <SlidingImage />\r\n  <QuizDescription />\r\n <HowToPlay />\r\n<FetchKaunWhoDidIt />\r\n<GameType />\r\n  <FetchComment />\r\n  <Comment />\r\n \r\n   </Card>\r\n\r\n    </div>\r\n    )\r\n}\r\n\r\n\r\n\r\n\r\n export default Kaun;\r\n","D:\\webserv4u\\quizbeater\\src\\components\\kaun\\howToPlay.js",[],"D:\\webserv4u\\quizbeater\\src\\components\\kaun\\quizHead.js",[],"D:\\webserv4u\\quizbeater\\src\\components\\kaun\\quizDesc.js",["658"],"import React from 'react';\r\nimport { Card, Image } from 'react-bootstrap';\r\nimport MetaDecorator from \"../../utils/metaDecorator\"\r\n\r\nconst QuizDescription = () =>{\r\n    return (\r\n        <div>\r\n             <MetaDecorator title='about flipkart kaun Quiz description' \r\n    description=' Here you have to get quick live updates for each Kaun Quiz Question everyday at\r\n    12:00am.' />\r\n      <MetaDecorator title='about flipkart kaun? who did it Quiz description' \r\n    description=' Here you have to get quick live updates for each Kaun? who did it Quiz Question everyday at\r\n    12:00am.' />\r\n<Card.Text><br></br>\r\n      Here you have to get quick live updates for each <b>Kaun? who did it</b> Quiz Question everyday at\r\n       12:00am.\r\n      By answering these Quiz Questions you can win many gift vouchers,coupons,gifts,super coins etc.\r\n      &nbsp; <br></br> <Image src=\"https://seeklogo.com/images/F/flipkart-logo-3F33927DAA-seeklogo.com.png\"\r\n      width={60}\r\n      height={60}\r\n      roundedCircle />\r\n      <a href=\"https://www.flipkart.com/\">&nbsp;<b>Flipkart</b> </a>\r\n      <b><i>daily <b>Kaun? Who did it</b> Quiz is Back.</i>  </b>Daily <b>Kaun? Who did it</b> \r\n      Quiz is generally asks\r\n       General Knowledge based Questions.Flipkart Quiz is started at 12:00Am and ends at 11:59am.\r\n       <b><i>QuizBeater</i></b> provide these answers at 11:50pm daily.By answering them you have to\r\n        get some relevant prize,coupons,gift or super coins  by regular participation in daily quiz.\r\n        <b>Make sure you have to follow our official <a href=\"#\"><b><b>Telegram</b></b> </a> channel to get daily \r\n          imediate answers for each Quiz  </b>\r\n    </Card.Text>\r\n    <br></br> \r\n        </div>\r\n    )\r\n}\r\nexport default QuizDescription;","D:\\webserv4u\\quizbeater\\src\\components\\kaun\\slidingImage.js",[],"D:\\webserv4u\\quizbeater\\src\\components\\kaun\\fetchKaun.js",["659"],"D:\\webserv4u\\quizbeater\\src\\components\\kaun\\fetchKaunSummary.js",[],"D:\\webserv4u\\quizbeater\\src\\store\\reducers\\authReducer.js",[],"D:\\webserv4u\\quizbeater\\src\\store\\actions\\authActions.js",[],["660","661"],"D:\\webserv4u\\quizbeater\\src\\layout\\auth\\SignIn.js",["662","663"],"\r\nimport { useState,useEffect} from 'react';\r\nimport { Button, Form, FormGroup, Label, Input, Card } from 'reactstrap' \r\nimport firebase from '../../config/firebase'\r\nimport {useAuth} from './authContext'\r\nimport {useHistory,useLocation} from 'react-router-dom';\r\n\r\nconst SignIn =()=> {\r\n    const history = useHistory();\r\n    const location = useLocation();\r\n   const [creds,setCreds] = useState({\r\n       email:'',\r\n       password:''\r\n   })\r\n\r\n  const [loading,setLoading] = useState(false);\r\n  const [error,setError] = useState(null);\r\n  const auth = useAuth();\r\n \r\n useEffect(()=> {\r\nif(auth.user)   history.replace(location.state ? location.state.Form : '/')\r\n },[auth.user])\r\n\r\n   const onChange = (e) => {\r\n       setCreds((prevCreds)=>({\r\n           ...prevCreds,\r\n           [e.target.name]:e.target.value,\r\n       }))\r\n   } \r\n\r\n const handleSubmit = async (e) => {\r\n     e.preventDefault();\r\n     setLoading(true);\r\n     try {\r\n  await auth.signIn(creds.email,creds.password);\r\n //    history.replace(location.state ? location.state.Form : '/')\r\n  setLoading(false);\r\n     } catch(e) {\r\nconsole.error(e)\r\nsetError(e.message);\r\nsetLoading(false)\r\n     }\r\n }\r\n\r\n\r\n    return (\r\n        <div>\r\n      <Card style={{ margin:'0 auto',paddingTop:'30px' ,paddingBottom:'30px' ,marginTop:'50px',marginBottom:'230px', width:\"70%\"}} >\r\n      <Form onSubmit={handleSubmit} style={{margin:'0 auto', width:\"90%\"}}>\r\n          <FormGroup controlId=\"formBasicquizType\" >\r\n              <Label className=\"text-muted\">Email</Label>\r\n              <Input\r\n                type=\"email\"\r\n                name=\"email\"\r\n                value={creds.email}\r\n                className=\"text-primary\"\r\n                onChange={onChange}\r\n                placeholder=\"email\"\r\n                required\r\n              />\r\n            </FormGroup>\r\n            <FormGroup controlId=\"formBasicquizType\">\r\n              <Label className=\"text-muted\">password</Label>\r\n              <Input\r\n                type=\"password\"\r\n                name=\"password\"\r\n                value={creds.password}\r\n                className=\"text-primary\"\r\n               onChange={onChange}\r\n                placeholder=\"password\"\r\n                required\r\n              />\r\n            </FormGroup>\r\n            <Button variant=\"secondary\" type=\"submit\" >\r\n            {loading ? 'loading' : 'signIn'}\r\n            </Button>\r\n            <h5 style={{color:'red'}} > {error} </h5>\r\n            </Form>\r\n      </Card>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default SignIn;","D:\\webserv4u\\quizbeater\\src\\layout\\auth\\authContext.js",[],"D:\\webserv4u\\quizbeater\\src\\layout\\auth\\privateRoute.js",[],"D:\\webserv4u\\quizbeater\\src\\utils\\asyncMetaDecorator.js",[],{"ruleId":"664","replacedBy":"665"},{"ruleId":"666","replacedBy":"667"},{"ruleId":"668","severity":1,"message":"669","line":14,"column":8,"nodeType":"670","messageId":"671","endLine":14,"endColumn":16},{"ruleId":"668","severity":1,"message":"672","line":3,"column":34,"nodeType":"670","messageId":"671","endLine":3,"endColumn":39},{"ruleId":"668","severity":1,"message":"673","line":2,"column":16,"nodeType":"670","messageId":"671","endLine":2,"endColumn":19},{"ruleId":"668","severity":1,"message":"674","line":2,"column":32,"nodeType":"670","messageId":"671","endLine":2,"endColumn":35},{"ruleId":"675","severity":1,"message":"676","line":22,"column":54,"nodeType":"677","endLine":22,"endColumn":66},{"ruleId":"678","severity":1,"message":"679","line":12,"column":23,"nodeType":"680","messageId":"681","endLine":12,"endColumn":25},{"ruleId":"678","severity":1,"message":"679","line":14,"column":29,"nodeType":"680","messageId":"681","endLine":14,"endColumn":31},{"ruleId":"678","severity":1,"message":"679","line":17,"column":28,"nodeType":"680","messageId":"681","endLine":17,"endColumn":30},{"ruleId":"678","severity":1,"message":"679","line":20,"column":26,"nodeType":"680","messageId":"681","endLine":20,"endColumn":28},{"ruleId":"668","severity":1,"message":"682","line":2,"column":18,"nodeType":"670","messageId":"671","endLine":2,"endColumn":30},{"ruleId":"668","severity":1,"message":"682","line":2,"column":18,"nodeType":"670","messageId":"671","endLine":2,"endColumn":30},{"ruleId":"668","severity":1,"message":"682","line":2,"column":18,"nodeType":"670","messageId":"671","endLine":2,"endColumn":30},{"ruleId":"668","severity":1,"message":"682","line":2,"column":18,"nodeType":"670","messageId":"671","endLine":2,"endColumn":30},{"ruleId":"668","severity":1,"message":"683","line":6,"column":7,"nodeType":"670","messageId":"671","endLine":6,"endColumn":14},{"ruleId":"684","severity":1,"message":"685","line":24,"column":38,"nodeType":"686","messageId":"687","endLine":24,"endColumn":40},{"ruleId":"668","severity":1,"message":"688","line":12,"column":12,"nodeType":"670","messageId":"671","endLine":12,"endColumn":23},{"ruleId":"668","severity":1,"message":"689","line":12,"column":25,"nodeType":"670","messageId":"671","endLine":12,"endColumn":44},{"ruleId":"668","severity":1,"message":"690","line":17,"column":9,"nodeType":"670","messageId":"671","endLine":17,"endColumn":19},{"ruleId":"668","severity":1,"message":"691","line":18,"column":9,"nodeType":"670","messageId":"671","endLine":18,"endColumn":20},{"ruleId":"668","severity":1,"message":"692","line":19,"column":9,"nodeType":"670","messageId":"671","endLine":19,"endColumn":20},{"ruleId":"675","severity":1,"message":"676","line":72,"column":11,"nodeType":"677","endLine":73,"endColumn":30},{"ruleId":"675","severity":1,"message":"676","line":77,"column":11,"nodeType":"677","endLine":78,"endColumn":31},{"ruleId":"675","severity":1,"message":"676","line":83,"column":11,"nodeType":"677","endLine":83,"endColumn":49},{"ruleId":"675","severity":1,"message":"676","line":89,"column":11,"nodeType":"677","endLine":90,"endColumn":32},{"ruleId":"684","severity":1,"message":"685","line":20,"column":40,"nodeType":"686","messageId":"687","endLine":20,"endColumn":42},{"ruleId":"668","severity":1,"message":"693","line":2,"column":10,"nodeType":"670","messageId":"671","endLine":2,"endColumn":14},{"ruleId":"668","severity":1,"message":"694","line":2,"column":32,"nodeType":"670","messageId":"671","endLine":2,"endColumn":35},{"ruleId":"668","severity":1,"message":"682","line":3,"column":18,"nodeType":"670","messageId":"671","endLine":3,"endColumn":30},{"ruleId":"695","severity":1,"message":"696","line":61,"column":31,"nodeType":"697","endLine":61,"endColumn":37},{"ruleId":"695","severity":1,"message":"696","line":74,"column":42,"nodeType":"697","endLine":74,"endColumn":48},{"ruleId":"675","severity":1,"message":"676","line":17,"column":25,"nodeType":"677","endLine":17,"endColumn":86},{"ruleId":"675","severity":1,"message":"676","line":21,"column":29,"nodeType":"677","endLine":21,"endColumn":93},{"ruleId":"675","severity":1,"message":"676","line":25,"column":25,"nodeType":"677","endLine":25,"endColumn":86},{"ruleId":"675","severity":1,"message":"676","line":17,"column":25,"nodeType":"677","endLine":17,"endColumn":86},{"ruleId":"675","severity":1,"message":"676","line":21,"column":29,"nodeType":"677","endLine":21,"endColumn":93},{"ruleId":"675","severity":1,"message":"676","line":25,"column":25,"nodeType":"677","endLine":25,"endColumn":86},{"ruleId":"668","severity":1,"message":"698","line":1,"column":16,"nodeType":"670","messageId":"671","endLine":1,"endColumn":25},{"ruleId":"668","severity":1,"message":"699","line":1,"column":27,"nodeType":"670","messageId":"671","endLine":1,"endColumn":35},{"ruleId":"668","severity":1,"message":"700","line":1,"column":36,"nodeType":"670","messageId":"671","endLine":1,"endColumn":42},{"ruleId":"668","severity":1,"message":"701","line":5,"column":24,"nodeType":"670","messageId":"671","endLine":5,"endColumn":33},{"ruleId":"668","severity":1,"message":"702","line":5,"column":43,"nodeType":"670","messageId":"671","endLine":5,"endColumn":53},{"ruleId":"668","severity":1,"message":"703","line":5,"column":55,"nodeType":"670","messageId":"671","endLine":5,"endColumn":66},{"ruleId":"704","severity":1,"message":"705","line":26,"column":3,"nodeType":"677","endLine":29,"endColumn":18},{"ruleId":"675","severity":1,"message":"676","line":296,"column":1,"nodeType":"677","endLine":296,"endColumn":14},{"ruleId":"668","severity":1,"message":"706","line":3,"column":10,"nodeType":"670","messageId":"671","endLine":3,"endColumn":16},{"ruleId":"668","severity":1,"message":"707","line":3,"column":23,"nodeType":"670","messageId":"671","endLine":3,"endColumn":27},{"ruleId":"668","severity":1,"message":"708","line":1,"column":17,"nodeType":"670","messageId":"671","endLine":1,"endColumn":26},{"ruleId":"668","severity":1,"message":"706","line":2,"column":10,"nodeType":"670","messageId":"671","endLine":2,"endColumn":16},{"ruleId":"668","severity":1,"message":"673","line":2,"column":24,"nodeType":"670","messageId":"671","endLine":2,"endColumn":27},{"ruleId":"668","severity":1,"message":"701","line":2,"column":29,"nodeType":"670","messageId":"671","endLine":2,"endColumn":38},{"ruleId":"668","severity":1,"message":"674","line":2,"column":51,"nodeType":"670","messageId":"671","endLine":2,"endColumn":54},{"ruleId":"668","severity":1,"message":"673","line":2,"column":35,"nodeType":"670","messageId":"671","endLine":2,"endColumn":38},{"ruleId":"668","severity":1,"message":"701","line":2,"column":40,"nodeType":"670","messageId":"671","endLine":2,"endColumn":49},{"ruleId":"668","severity":1,"message":"709","line":2,"column":51,"nodeType":"670","messageId":"671","endLine":2,"endColumn":60},{"ruleId":"668","severity":1,"message":"694","line":2,"column":62,"nodeType":"670","messageId":"671","endLine":2,"endColumn":65},{"ruleId":"668","severity":1,"message":"674","line":2,"column":67,"nodeType":"670","messageId":"671","endLine":2,"endColumn":70},{"ruleId":"668","severity":1,"message":"708","line":1,"column":17,"nodeType":"670","messageId":"671","endLine":1,"endColumn":26},{"ruleId":"675","severity":1,"message":"676","line":24,"column":54,"nodeType":"677","endLine":24,"endColumn":66},{"ruleId":"678","severity":1,"message":"679","line":12,"column":23,"nodeType":"680","messageId":"681","endLine":12,"endColumn":25},{"ruleId":"678","severity":1,"message":"679","line":14,"column":29,"nodeType":"680","messageId":"681","endLine":14,"endColumn":31},{"ruleId":"678","severity":1,"message":"679","line":17,"column":28,"nodeType":"680","messageId":"681","endLine":17,"endColumn":30},{"ruleId":"678","severity":1,"message":"679","line":20,"column":26,"nodeType":"680","messageId":"681","endLine":20,"endColumn":28},{"ruleId":"668","severity":1,"message":"682","line":2,"column":18,"nodeType":"670","messageId":"671","endLine":2,"endColumn":30},{"ruleId":"668","severity":1,"message":"682","line":2,"column":18,"nodeType":"670","messageId":"671","endLine":2,"endColumn":30},{"ruleId":"668","severity":1,"message":"682","line":2,"column":18,"nodeType":"670","messageId":"671","endLine":2,"endColumn":30},{"ruleId":"668","severity":1,"message":"682","line":2,"column":18,"nodeType":"670","messageId":"671","endLine":2,"endColumn":30},{"ruleId":"684","severity":1,"message":"685","line":24,"column":38,"nodeType":"686","messageId":"687","endLine":24,"endColumn":40},{"ruleId":"675","severity":1,"message":"676","line":24,"column":54,"nodeType":"677","endLine":24,"endColumn":66},{"ruleId":"684","severity":1,"message":"685","line":25,"column":38,"nodeType":"686","messageId":"687","endLine":25,"endColumn":40},{"ruleId":"678","severity":1,"message":"679","line":12,"column":23,"nodeType":"680","messageId":"681","endLine":12,"endColumn":25},{"ruleId":"678","severity":1,"message":"679","line":14,"column":29,"nodeType":"680","messageId":"681","endLine":14,"endColumn":31},{"ruleId":"678","severity":1,"message":"679","line":17,"column":28,"nodeType":"680","messageId":"681","endLine":17,"endColumn":30},{"ruleId":"678","severity":1,"message":"679","line":20,"column":26,"nodeType":"680","messageId":"681","endLine":20,"endColumn":28},{"ruleId":"668","severity":1,"message":"682","line":2,"column":18,"nodeType":"670","messageId":"671","endLine":2,"endColumn":30},{"ruleId":"668","severity":1,"message":"682","line":2,"column":18,"nodeType":"670","messageId":"671","endLine":2,"endColumn":30},{"ruleId":"668","severity":1,"message":"682","line":2,"column":18,"nodeType":"670","messageId":"671","endLine":2,"endColumn":30},{"ruleId":"668","severity":1,"message":"710","line":4,"column":8,"nodeType":"670","messageId":"671","endLine":4,"endColumn":22},{"ruleId":"668","severity":1,"message":"682","line":2,"column":18,"nodeType":"670","messageId":"671","endLine":2,"endColumn":30},{"ruleId":"668","severity":1,"message":"708","line":1,"column":17,"nodeType":"670","messageId":"671","endLine":1,"endColumn":26},{"ruleId":"675","severity":1,"message":"676","line":23,"column":54,"nodeType":"677","endLine":23,"endColumn":66},{"ruleId":"684","severity":1,"message":"685","line":24,"column":38,"nodeType":"686","messageId":"687","endLine":24,"endColumn":40},{"ruleId":"678","severity":1,"message":"679","line":12,"column":23,"nodeType":"680","messageId":"681","endLine":12,"endColumn":25},{"ruleId":"678","severity":1,"message":"679","line":14,"column":29,"nodeType":"680","messageId":"681","endLine":14,"endColumn":31},{"ruleId":"678","severity":1,"message":"679","line":17,"column":28,"nodeType":"680","messageId":"681","endLine":17,"endColumn":30},{"ruleId":"678","severity":1,"message":"679","line":20,"column":26,"nodeType":"680","messageId":"681","endLine":20,"endColumn":28},{"ruleId":"668","severity":1,"message":"682","line":2,"column":18,"nodeType":"670","messageId":"671","endLine":2,"endColumn":30},{"ruleId":"668","severity":1,"message":"682","line":2,"column":18,"nodeType":"670","messageId":"671","endLine":2,"endColumn":30},{"ruleId":"668","severity":1,"message":"682","line":2,"column":18,"nodeType":"670","messageId":"671","endLine":2,"endColumn":30},{"ruleId":"668","severity":1,"message":"682","line":2,"column":18,"nodeType":"670","messageId":"671","endLine":2,"endColumn":30},{"ruleId":"668","severity":1,"message":"708","line":1,"column":17,"nodeType":"670","messageId":"671","endLine":1,"endColumn":26},{"ruleId":"675","severity":1,"message":"676","line":27,"column":54,"nodeType":"677","endLine":27,"endColumn":66},{"ruleId":"684","severity":1,"message":"685","line":25,"column":38,"nodeType":"686","messageId":"687","endLine":25,"endColumn":40},{"ruleId":"678","severity":1,"message":"679","line":12,"column":23,"nodeType":"680","messageId":"681","endLine":12,"endColumn":25},{"ruleId":"678","severity":1,"message":"679","line":14,"column":29,"nodeType":"680","messageId":"681","endLine":14,"endColumn":31},{"ruleId":"678","severity":1,"message":"679","line":17,"column":28,"nodeType":"680","messageId":"681","endLine":17,"endColumn":30},{"ruleId":"678","severity":1,"message":"679","line":20,"column":26,"nodeType":"680","messageId":"681","endLine":20,"endColumn":28},{"ruleId":"668","severity":1,"message":"682","line":2,"column":18,"nodeType":"670","messageId":"671","endLine":2,"endColumn":30},{"ruleId":"668","severity":1,"message":"682","line":2,"column":18,"nodeType":"670","messageId":"671","endLine":2,"endColumn":30},{"ruleId":"668","severity":1,"message":"682","line":2,"column":18,"nodeType":"670","messageId":"671","endLine":2,"endColumn":30},{"ruleId":"668","severity":1,"message":"682","line":2,"column":18,"nodeType":"670","messageId":"671","endLine":2,"endColumn":30},{"ruleId":"678","severity":1,"message":"679","line":12,"column":23,"nodeType":"680","messageId":"681","endLine":12,"endColumn":25},{"ruleId":"678","severity":1,"message":"679","line":14,"column":29,"nodeType":"680","messageId":"681","endLine":14,"endColumn":31},{"ruleId":"678","severity":1,"message":"679","line":17,"column":28,"nodeType":"680","messageId":"681","endLine":17,"endColumn":30},{"ruleId":"678","severity":1,"message":"679","line":20,"column":26,"nodeType":"680","messageId":"681","endLine":20,"endColumn":28},{"ruleId":"668","severity":1,"message":"682","line":2,"column":18,"nodeType":"670","messageId":"671","endLine":2,"endColumn":30},{"ruleId":"668","severity":1,"message":"682","line":2,"column":18,"nodeType":"670","messageId":"671","endLine":2,"endColumn":30},{"ruleId":"668","severity":1,"message":"682","line":2,"column":18,"nodeType":"670","messageId":"671","endLine":2,"endColumn":30},{"ruleId":"668","severity":1,"message":"682","line":2,"column":18,"nodeType":"670","messageId":"671","endLine":2,"endColumn":30},{"ruleId":"668","severity":1,"message":"708","line":1,"column":17,"nodeType":"670","messageId":"671","endLine":1,"endColumn":26},{"ruleId":"675","severity":1,"message":"676","line":28,"column":54,"nodeType":"677","endLine":28,"endColumn":66},{"ruleId":"684","severity":1,"message":"685","line":25,"column":38,"nodeType":"686","messageId":"687","endLine":25,"endColumn":40},{"ruleId":"664","replacedBy":"711"},{"ruleId":"666","replacedBy":"712"},{"ruleId":"668","severity":1,"message":"713","line":4,"column":8,"nodeType":"670","messageId":"671","endLine":4,"endColumn":16},{"ruleId":"714","severity":1,"message":"715","line":22,"column":4,"nodeType":"716","endLine":22,"endColumn":15,"suggestions":"717"},"no-native-reassign",["718"],"no-negated-in-lhs",["719"],"no-unused-vars","'NotFound' is defined but never used.","Identifier","unusedVar","'Image' is defined but never used.","'Col' is defined but never used.","'Row' is defined but never used.","jsx-a11y/anchor-is-valid","The href attribute requires a valid value to be accessible. Provide a valid, navigable address as the href value. If you cannot provide a valid href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","JSXOpeningElement","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","'FormFeedback' is defined but never used.","'content' is assigned a value but never used.","array-callback-return","Array.prototype.map() expects a return value from arrow function.","ArrowFunctionExpression","expectedInside","'buildStyles' is defined but never used.","'CircularProgressbar' is defined but never used.","'percentage' is assigned a value but never used.","'percentage2' is assigned a value but never used.","'percentage3' is assigned a value but never used.","'Card' is defined but never used.","'Nav' is defined but never used.","react/jsx-no-duplicate-props","No duplicate props allowed","JSXAttribute","'useEffect' is defined but never used.","'useState' is defined but never used.","'useRef' is defined but never used.","'Container' is defined but never used.","'InputGroup' is defined but never used.","'FormControl' is defined but never used.","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","'Button' is defined but never used.","'Form' is defined but never used.","'Component' is defined but never used.","'ListGroup' is defined but never used.","'KyaBoltiPublic' is defined but never used.",["718"],["719"],"'firebase' is defined but never used.","react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'history' and 'location.state'. Either include them or remove the dependency array.","ArrayExpression",["720"],"no-global-assign","no-unsafe-negation",{"desc":"721","fix":"722"},"Update the dependencies array to be: [auth.user, history, location.state]",{"range":"723","text":"724"},[669,680],"[auth.user, history, location.state]"]